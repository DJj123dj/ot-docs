[
	{
		"type": "class",
		"name": "ODAction_Default",
		"comment": "## ODAction_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODAction class.\nIt doesn't add any extra features!\n\nThis default class is made for the default `ODAction`'s!",
		"constant": false,
		"source": "src/core/api/defaults/action.ts:152:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/action.ts:19:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "object"
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODAction_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Result",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/defaults/action.ts:153:12",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "typeParam",
							"name": "Result",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "WorkerIds",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "run",
				"comment": "Run this action",
				"source": "src/core/api/modules/action.ts:48:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run this action",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "internal",
								"name": "Partial",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "Result",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "primitive",
					"name": "object"
				}
			},
			{
				"name": "Result",
				"type": {
					"type": "primitive",
					"name": "object"
				}
			},
			{
				"name": "WorkerIds",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODActionManager_Default",
		"comment": "## ODActionManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODActionManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.actions`!",
		"constant": false,
		"source": "src/core/api/defaults/action.ts:123:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/action.ts:41:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODActionManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODAction",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "unknown"
											},
											{
												"type": "unknown"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODAction",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "unknown"
												},
												{
													"type": "unknown"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/action.ts:138:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODActionManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/action.ts:124:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODAction",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODAction",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "unknown"
								},
								{
									"type": "unknown"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODAction",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "unknown"
												},
												{
													"type": "unknown"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODAction",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "string"
													},
													{
														"type": "unknown"
													},
													{
														"type": "unknown"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODAction",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "unknown"
								},
								{
									"type": "unknown"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODAction",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "unknown"
								},
								{
									"type": "unknown"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODAction",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "unknown"
												},
												{
													"type": "unknown"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODAction",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "unknown"
											},
											{
												"type": "unknown"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODAction",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "unknown"
											},
											{
												"type": "unknown"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODAction",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "unknown"
											},
											{
												"type": "unknown"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/action.ts:131:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODAction",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODActionManagerIds_Default",
		"comment": "## ODActionManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODActionManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/action.ts:18:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:add-ticket-user",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:91:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:claim-ticket",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:55:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:clear-tickets",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:109:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:close-ticket",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:37:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:create-ticket",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:31:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:create-ticket-permissions",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:19:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:create-transcript",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:25:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:delete-ticket",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:43:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:move-ticket",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:85:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:pin-ticket",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:67:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:reaction-role",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:103:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:remove-ticket-user",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:97:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:rename-ticket",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:79:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:reopen-ticket",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:49:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unclaim-ticket",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:61:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unpin-ticket",
				"comment": null,
				"source": "src/core/api/defaults/action.ts:73:4",
				"details": {
					"type": "unknown"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODVersionManager_Default",
		"comment": "## ODFlagManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODFlagManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.flags`!",
		"constant": false,
		"source": "src/core/api/defaults/base.ts:24:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/base.ts:443:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODVersionManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODVersion",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODVersion",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/base.ts:39:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODVersionManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/base.ts:25:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODVersion",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODVersion",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODVersion",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODVersion",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODVersion",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODVersion",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODVersion",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODVersion",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODVersion",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/base.ts:32:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODVersionManagerIds_Default",
		"comment": "## ODVersionManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODVersionManager` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/base.ts:10:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:api",
				"comment": null,
				"source": "src/core/api/defaults/base.ts:13:4",
				"details": {
					"type": "reference",
					"name": "ODVersion",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:last-version",
				"comment": null,
				"source": "src/core/api/defaults/base.ts:12:4",
				"details": {
					"type": "reference",
					"name": "ODVersion",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:livestatus",
				"comment": null,
				"source": "src/core/api/defaults/base.ts:15:4",
				"details": {
					"type": "reference",
					"name": "ODVersion",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:transcripts",
				"comment": null,
				"source": "src/core/api/defaults/base.ts:14:4",
				"details": {
					"type": "reference",
					"name": "ODVersion",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:version",
				"comment": null,
				"source": "src/core/api/defaults/base.ts:11:4",
				"details": {
					"type": "reference",
					"name": "ODVersion",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODBuilderManager_Default",
		"comment": "## ODBuilderManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODBuilderManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.builders`!",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:23:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:78:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODBuilderManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "buttons",
				"comment": "The manager for all button builders",
				"source": "src/core/api/defaults/builder.ts:24:12",
				"details": {
					"type": "reference",
					"name": "ODButtonManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "dropdowns",
				"comment": "The manager for all dropdown builders",
				"source": "src/core/api/defaults/builder.ts:25:12",
				"details": {
					"type": "reference",
					"name": "ODDropdownManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "embeds",
				"comment": "The manager for all embed builders",
				"source": "src/core/api/defaults/builder.ts:27:12",
				"details": {
					"type": "reference",
					"name": "ODEmbedManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "files",
				"comment": "The manager for all file/attachment builders",
				"source": "src/core/api/defaults/builder.ts:26:12",
				"details": {
					"type": "reference",
					"name": "ODFileManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "messages",
				"comment": "The manager for all message builders",
				"source": "src/core/api/defaults/builder.ts:28:12",
				"details": {
					"type": "reference",
					"name": "ODMessageManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "modals",
				"comment": "The manager for all modal builders",
				"source": "src/core/api/defaults/builder.ts:29:12",
				"details": {
					"type": "reference",
					"name": "ODModalManager_Default",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODButton_Default",
		"comment": "## ODButton_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODButton class.\nIt doesn't add any extra features!\n\nThis default class is made for the default `ODButton`'s!",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:110:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:26:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButtonInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButton_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "allowCache",
				"comment": "Cache a build or create it every time from scratch when this.build() gets executed.",
				"source": "src/core/api/modules/builder.ts:20:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "cache",
				"comment": "The cache of this build.",
				"source": "src/core/api/modules/builder.ts:24:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODComponentBuildResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "didCache",
				"comment": "Did the build already got created/cached?",
				"source": "src/core/api/modules/builder.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/defaults/builder.ts:111:12",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODButtonInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "WorkerIds",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "build",
				"comment": "Build this button & compile it for discord.js",
				"source": "src/core/api/modules/builder.ts:213:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Build this button & compile it for discord.js",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODComponentBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "resetCache",
				"comment": "Reset the current cache",
				"source": "src/core/api/modules/builder.ts:39:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reset the current cache",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODButton_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setCacheMode",
				"comment": "Set if caching is allowed",
				"source": "src/core/api/modules/builder.ts:33:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set if caching is allowed",
					"parameters": [
						{
							"name": "allowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButton_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "WorkerIds",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODButtonManager_Default",
		"comment": "## ODButtonManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODButtonManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.builders.buttons`!",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:74:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:106:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButtonManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODButton",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODButton",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/builder.ts:89:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODButtonManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/builder.ts:75:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODButton",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODButton",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODButton",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODButton",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "string"
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODButton",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getNewLine",
				"comment": "Get a newline component for buttons & dropdowns!",
				"source": "src/core/api/modules/builder.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a newline component for buttons & dropdowns!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODComponentBuildResult",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODButton",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSafe",
				"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
				"source": "src/core/api/defaults/builder.ts:96:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButton",
						"target": "class",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							},
							{
								"type": "primitive",
								"name": "any"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODButton",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButton",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButton",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButton",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/builder.ts:82:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODButton",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODDropdown_Default",
		"comment": "## ODDropdown_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODDropdown class.\nIt doesn't add any extra features!\n\nThis default class is made for the default `ODDropdown`'s!",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:164:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:26:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdownInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdown_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "allowCache",
				"comment": "Cache a build or create it every time from scratch when this.build() gets executed.",
				"source": "src/core/api/modules/builder.ts:20:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "cache",
				"comment": "The cache of this build.",
				"source": "src/core/api/modules/builder.ts:24:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODComponentBuildResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "didCache",
				"comment": "Did the build already got created/cached?",
				"source": "src/core/api/modules/builder.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/defaults/builder.ts:165:12",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODDropdownInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "WorkerIds",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "build",
				"comment": "Build this dropdown & compile it for discord.js",
				"source": "src/core/api/modules/builder.ts:406:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Build this dropdown & compile it for discord.js",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODComponentBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "resetCache",
				"comment": "Reset the current cache",
				"source": "src/core/api/modules/builder.ts:39:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reset the current cache",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODDropdown_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setCacheMode",
				"comment": "Set if caching is allowed",
				"source": "src/core/api/modules/builder.ts:33:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set if caching is allowed",
					"parameters": [
						{
							"name": "allowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdown_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "WorkerIds",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODDropdownManager_Default",
		"comment": "## ODDropdownManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODDropdownManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.builders.dropdowns`!",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:128:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:256:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODDropdown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODDropdown",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/builder.ts:143:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODDropdownManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/builder.ts:129:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODDropdown",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDropdown",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODDropdown",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODDropdown",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "string"
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDropdown",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getNewLine",
				"comment": "Get a newline component for buttons & dropdowns!",
				"source": "src/core/api/modules/builder.ts:272:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a newline component for buttons & dropdowns!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODComponentBuildResult",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDropdown",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSafe",
				"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
				"source": "src/core/api/defaults/builder.ts:150:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdown",
						"target": "class",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							},
							{
								"type": "primitive",
								"name": "any"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODDropdown",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/builder.ts:136:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODDropdown",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODEmbed_Default",
		"comment": "## ODEmbed_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODEmbed class.\nIt doesn't add any extra features!\n\nThis default class is made for the default `ODEmbed`'s!",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:338:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:26:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODEmbedInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbed_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "allowCache",
				"comment": "Cache a build or create it every time from scratch when this.build() gets executed.",
				"source": "src/core/api/modules/builder.ts:20:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "cache",
				"comment": "The cache of this build.",
				"source": "src/core/api/modules/builder.ts:24:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODEmbedBuildResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "didCache",
				"comment": "Did the build already got created/cached?",
				"source": "src/core/api/modules/builder.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/defaults/builder.ts:339:12",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODEmbedInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "WorkerIds",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "build",
				"comment": "Build this embed & compile it for discord.js",
				"source": "src/core/api/modules/builder.ts:798:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Build this embed & compile it for discord.js",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODEmbedBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "resetCache",
				"comment": "Reset the current cache",
				"source": "src/core/api/modules/builder.ts:39:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reset the current cache",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODEmbed_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setCacheMode",
				"comment": "Set if caching is allowed",
				"source": "src/core/api/modules/builder.ts:33:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set if caching is allowed",
					"parameters": [
						{
							"name": "allowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbed_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "WorkerIds",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODEmbedManager_Default",
		"comment": "## ODEmbedManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODEmbedManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.builders.embeds`!",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:302:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:633:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbedManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODEmbed",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODEmbed",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/builder.ts:317:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODEmbedManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/builder.ts:303:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODEmbed",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODEmbed",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODEmbed",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODEmbed",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "string"
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODEmbed",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODEmbed",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSafe",
				"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
				"source": "src/core/api/defaults/builder.ts:324:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbed",
						"target": "class",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							},
							{
								"type": "primitive",
								"name": "any"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODEmbed",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODEmbed",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODEmbed",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODEmbed",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/builder.ts:310:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODEmbed",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODFile_Default",
		"comment": "## ODFile_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODFile class.\nIt doesn't add any extra features!\n\nThis default class is made for the default `ODFile`'s!",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:218:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:26:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODFileInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFile_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "allowCache",
				"comment": "Cache a build or create it every time from scratch when this.build() gets executed.",
				"source": "src/core/api/modules/builder.ts:20:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "cache",
				"comment": "The cache of this build.",
				"source": "src/core/api/modules/builder.ts:24:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODFileBuildResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "didCache",
				"comment": "Did the build already got created/cached?",
				"source": "src/core/api/modules/builder.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/defaults/builder.ts:219:12",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODFileInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "WorkerIds",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "build",
				"comment": "Build this attachment & compile it for discord.js",
				"source": "src/core/api/modules/builder.ts:597:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Build this attachment & compile it for discord.js",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODFileBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "resetCache",
				"comment": "Reset the current cache",
				"source": "src/core/api/modules/builder.ts:39:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reset the current cache",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODFile_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setCacheMode",
				"comment": "Set if caching is allowed",
				"source": "src/core/api/modules/builder.ts:33:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set if caching is allowed",
					"parameters": [
						{
							"name": "allowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFile_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "WorkerIds",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODFileManager_Default",
		"comment": "## ODFileManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODFileManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.builders.files`!",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:182:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:510:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFileManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODFile",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODFile",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/builder.ts:197:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "literal",
								"name": "\"openticket:text-transcript\""
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/builder.ts:183:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODFile",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODFile",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODFile",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODFile",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "string"
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODFile",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODFile",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSafe",
				"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
				"source": "src/core/api/defaults/builder.ts:204:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFile",
						"target": "class",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							},
							{
								"type": "primitive",
								"name": "any"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODFile",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODFile",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODFile",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODFile",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/builder.ts:190:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODFile",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODMessage_Default",
		"comment": "## ODMessage_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODMessage class.\nIt doesn't add any extra features!\n\nThis default class is made for the default `ODMessage`'s!",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:469:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:26:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODMessageInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessage_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "allowCache",
				"comment": "Cache a build or create it every time from scratch when this.build() gets executed.",
				"source": "src/core/api/modules/builder.ts:20:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "cache",
				"comment": "The cache of this build.",
				"source": "src/core/api/modules/builder.ts:24:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODMessageBuildResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "didCache",
				"comment": "Did the build already got created/cached?",
				"source": "src/core/api/modules/builder.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/defaults/builder.ts:470:12",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODMessageInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "WorkerIds",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "build",
				"comment": "Build this message & compile it for discord.js",
				"source": "src/core/api/modules/builder.ts:1014:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Build this message & compile it for discord.js",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODMessageBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "resetCache",
				"comment": "Reset the current cache",
				"source": "src/core/api/modules/builder.ts:39:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reset the current cache",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODMessage_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setCacheMode",
				"comment": "Set if caching is allowed",
				"source": "src/core/api/modules/builder.ts:33:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set if caching is allowed",
					"parameters": [
						{
							"name": "allowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessage_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "WorkerIds",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODMessageManager_Default",
		"comment": "## ODMessageManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODMessageManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.builders.messages`!",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:433:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:847:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessageManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODMessage",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODMessage",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/builder.ts:448:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODMessageManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/builder.ts:434:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODMessage",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODMessage",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODMessage",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODMessage",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "string"
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODMessage",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODMessage",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSafe",
				"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
				"source": "src/core/api/defaults/builder.ts:455:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessage",
						"target": "class",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							},
							{
								"type": "primitive",
								"name": "any"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODMessage",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODMessage",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODMessage",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODMessage",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/builder.ts:441:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODMessage",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODModal_Default",
		"comment": "## ODModal_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODModal class.\nIt doesn't add any extra features!\n\nThis default class is made for the default `ODModal`'s!",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:530:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:26:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModalInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModal_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "allowCache",
				"comment": "Cache a build or create it every time from scratch when this.build() gets executed.",
				"source": "src/core/api/modules/builder.ts:20:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "cache",
				"comment": "The cache of this build.",
				"source": "src/core/api/modules/builder.ts:24:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODModalBuildResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "didCache",
				"comment": "Did the build already got created/cached?",
				"source": "src/core/api/modules/builder.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/defaults/builder.ts:531:12",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODModalInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "WorkerIds",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "build",
				"comment": "Build this modal & compile it for discord.js",
				"source": "src/core/api/modules/builder.ts:1208:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Build this modal & compile it for discord.js",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODModalBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "resetCache",
				"comment": "Reset the current cache",
				"source": "src/core/api/modules/builder.ts:39:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reset the current cache",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODModal_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setCacheMode",
				"comment": "Set if caching is allowed",
				"source": "src/core/api/modules/builder.ts:33:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set if caching is allowed",
					"parameters": [
						{
							"name": "allowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModal_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "WorkerIds",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODModalManager_Default",
		"comment": "## ODModalManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODModalManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.builders.modals`!",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:494:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:1088:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModalManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODModal",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODModal",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/builder.ts:509:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODModalManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/builder.ts:495:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODModal",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODModal",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODModal",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODModal",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "string"
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODModal",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODModal",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSafe",
				"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
				"source": "src/core/api/defaults/builder.ts:516:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModal",
						"target": "class",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							},
							{
								"type": "primitive",
								"name": "any"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODModal",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModal",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModal",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModal",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/builder.ts:502:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODModal",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODButtonManagerIds_Default",
		"comment": "## ODButtonManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODButtonManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:36:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:claim-ticket",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:56:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:clear-continue",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:65:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:close-ticket",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:53:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:delete-ticket",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:54:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-ticket-deprecated-transcript",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:40:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:help-menu-next",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:43:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:help-menu-page",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:44:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:help-menu-previous",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:42:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:help-menu-switch",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:45:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:pin-ticket",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:58:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:reopen-ticket",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:55:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:role-option",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:49:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-option",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:47:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:transcript-error-continue",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:63:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:transcript-error-retry",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:62:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:transcript-html-visit",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:61:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unclaim-ticket",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:57:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unpin-ticket",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:59:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:verifybar-failure",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:38:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:verifybar-success",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:37:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:visit-ticket",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:51:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:website-option",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:48:4",
				"details": {
					"type": "unknown"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODDropdownManagerIds_Default",
		"comment": "## ODDropdownManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODDropdownManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:118:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:panel-dropdown-tickets",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:119:4",
				"details": {
					"type": "unknown"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODEmbedManagerIds_Default",
		"comment": "## ODEmbedManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODEmbedManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:226:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:add-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:266:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-disable",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:292:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-enable",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:290:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:288:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-disable",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:293:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-enable",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:291:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:289:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-add",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:273:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-dm",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:275:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-get",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:272:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-logs",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:276:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-remove",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:274:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-view",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:271:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:claim-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:260:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:clear-logs",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:286:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:clear-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:285:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:clear-verify-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:284:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:close-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:257:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:delete-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:259:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:227:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-channel-rename",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:241:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-no-permissions",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:231:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-no-permissions-blacklisted",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:233:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-no-permissions-cooldown",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:232:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-no-permissions-limits",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:234:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-not-in-guild",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:240:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-option-invalid",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:229:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-option-missing",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:228:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-option-unknown",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:238:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-panel-unknown",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:239:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-responder-timeout",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:235:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-ticket-busy",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:242:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-ticket-deprecated",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:237:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-ticket-unknown",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:236:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-unknown-command",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:230:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:help-menu",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:244:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:move-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:265:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:panel",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:252:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:pin-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:262:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:reaction-role",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:283:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:remove-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:267:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:rename-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:264:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:reopen-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:258:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-global",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:246:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-reset",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:249:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-ticket",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:247:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-ticket-unknown",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:250:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-user",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:248:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-action-dm",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:268:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-action-logs",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:269:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-created",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:253:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-created-dm",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:254:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-created-logs",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:255:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:256:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:transcript-error",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:281:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:transcript-html-progress",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:280:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:transcript-html-ready",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:279:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:transcript-text-ready",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:278:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unclaim-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:261:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unpin-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:263:4",
				"details": {
					"type": "unknown"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODFileManagerIds_Default",
		"comment": "## ODFileManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODFileManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:172:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:text-transcript",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:173:4",
				"details": {
					"type": "unknown"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODMessageManagerIds_Default",
		"comment": "## ODMessageManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODMessageManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:346:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:add-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:397:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-disable",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:423:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-enable",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:421:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:419:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-disable",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:424:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-enable",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:422:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:420:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-add",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:404:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-dm",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:406:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-get",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:403:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-logs",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:407:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-remove",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:405:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-view",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:402:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:claim-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:391:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:clear-logs",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:417:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:clear-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:416:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:clear-verify-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:415:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:close-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:388:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:delete-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:390:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:356:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-channel-rename",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:370:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-no-permissions",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:360:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-no-permissions-blacklisted",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:362:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-no-permissions-cooldown",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:361:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-no-permissions-limits",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:363:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-not-in-guild",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:369:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-option-invalid",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:358:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-option-missing",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:357:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-option-unknown",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:367:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-panel-unknown",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:368:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-responder-timeout",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:364:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-ticket-busy",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:371:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-ticket-deprecated",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:366:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-ticket-unknown",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:365:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:error-unknown-command",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:359:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:help-menu",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:373:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:move-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:396:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:panel",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:381:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:panel-ready",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:382:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:pin-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:393:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:reaction-role",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:414:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:remove-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:398:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:rename-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:395:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:reopen-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:389:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-global",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:375:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-reset",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:378:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-ticket",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:376:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-ticket-unknown",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:379:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-user",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:377:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-action-dm",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:399:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-action-logs",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:400:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-created",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:384:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-created-dm",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:385:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-created-logs",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:386:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:387:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:transcript-error",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:412:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:transcript-html-progress",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:411:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:transcript-html-ready",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:410:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:transcript-text-ready",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:409:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unclaim-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:392:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unpin-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:394:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:verifybar-autoclose-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:354:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:verifybar-claim-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:350:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:verifybar-close-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:348:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:verifybar-pin-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:352:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:verifybar-reopen-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:349:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:verifybar-ticket-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:347:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:verifybar-unclaim-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:351:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:verifybar-unpin-message",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:353:4",
				"details": {
					"type": "unknown"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODModalManagerIds_Default",
		"comment": "## ODModalManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODModalManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/builder.ts:477:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:claim-ticket-reason",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:482:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:close-ticket-reason",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:479:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:delete-ticket-reason",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:481:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:pin-ticket-reason",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:484:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:reopen-ticket-reason",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:480:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-questions",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:478:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unclaim-ticket-reason",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:483:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unpin-ticket-reason",
				"comment": null,
				"source": "src/core/api/defaults/builder.ts:485:4",
				"details": {
					"type": "unknown"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerFunctionManager_Default",
		"comment": "## ODCheckerFunctionManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODCheckerFunctionManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.checkers.functions`!",
		"constant": false,
		"source": "src/core/api/defaults/checker.ts:360:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:251:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerFunctionManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODCheckerFunction",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODCheckerFunction",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "createMessage",
				"comment": "A shortcut to create a warning, info or error message",
				"source": "src/core/api/modules/checker.ts:256:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "A shortcut to create a warning, info or error message",
					"parameters": [
						{
							"name": "checkerId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "filepath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "type",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"info\""
									},
									{
										"type": "literal",
										"name": "\"warning\""
									},
									{
										"type": "literal",
										"name": "\"error\""
									}
								]
							}
						},
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "docs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						},
						{
							"name": "translationParams",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "string"
								}
							}
						},
						{
							"name": "locationId",
							"details": {
								"type": "reference",
								"name": "ODId",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "locationDocs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerMessage",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/checker.ts:375:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODCheckerFunctionManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/checker.ts:361:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCheckerFunction",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCheckerFunction",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODCheckerFunction",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODCheckerFunction",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCheckerFunction",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCheckerFunction",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "locationTraceDeref",
				"comment": "De-reference the locationTrace array. Use this before adding a value to the array",
				"source": "src/core/api/modules/checker.ts:284:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "De-reference the locationTrace array. Use this before adding a value to the array",
					"parameters": [
						{
							"name": "trace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerLocationTrace",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "locationTraceToString",
				"comment": "Create a string from the location trace (path)",
				"source": "src/core/api/modules/checker.ts:272:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Create a string from the location trace (path)",
					"parameters": [
						{
							"name": "trace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODCheckerFunction",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCheckerFunction",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCheckerFunction",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCheckerFunction",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/checker.ts:368:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCheckerFunction",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerManager_Default",
		"comment": "## ODCheckerManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODCheckerManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.checkers`!",
		"constant": false,
		"source": "src/core/api/defaults/checker.ts:27:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:44:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "storage",
							"details": {
								"type": "reference",
								"name": "ODCheckerStorage",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "renderer",
							"details": {
								"type": "reference",
								"name": "ODCheckerRenderer",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "translation",
							"details": {
								"type": "reference",
								"name": "ODCheckerTranslationRegister",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "functions",
							"details": {
								"type": "reference",
								"name": "ODCheckerFunctionManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "functions",
				"comment": "Final functions are global functions executed just before the report is created.",
				"source": "src/core/api/defaults/checker.ts:30:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerFunctionManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "lastResult",
				"comment": "A variable containing the last result returned from `checkAll()`",
				"source": "src/core/api/modules/checker.ts:42:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODCheckerResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "renderer",
				"comment": "The class responsible for rendering the config checker report.",
				"source": "src/core/api/defaults/checker.ts:29:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerRenderer_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "storage",
				"comment": "The global temporary storage shared between all config checkers.",
				"source": "src/core/api/modules/checker.ts:34:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerStorage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "translation",
				"comment": "The class responsible for translating the config checker report.",
				"source": "src/core/api/defaults/checker.ts:28:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerTranslationRegister_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODChecker",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODChecker",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "checkAll",
				"comment": "Check all config checkers registered in this manager.",
				"source": "src/core/api/modules/checker.ts:52:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check all config checkers registered in this manager.",
					"parameters": [
						{
							"name": "sort",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerResult",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/checker.ts:46:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODCheckerManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/checker.ts:32:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODChecker",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODChecker",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODChecker",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODChecker",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODChecker",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODChecker",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODChecker",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODChecker",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODChecker",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/checker.ts:39:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerRenderer_Default",
		"comment": "## ODCheckerRenderer_Default `default_class`\nThis is a special class that adds type definitions & features to the ODCheckerRenderer class.\nIt contains the code that renders the default config checker.\n\nThis default class is made for the global variable `openticket.checkers.renderer`!",
		"constant": false,
		"source": "src/core/api/defaults/checker.ts:60:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": null,
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODCheckerRenderer_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "descriptionSeparator",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:68:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "disableFooter",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:73:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "disableHeader",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:72:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "extraBottomText",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:64:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "extraFooterText",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:62:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "extraHeaderText",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:61:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "extraTopText",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:63:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "footerTipPrefix",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:70:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "headerSeparator",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:69:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "horizontalFiller",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:66:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "verticalFiller",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:67:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "getComponents",
				"comment": "Get all components",
				"source": "src/core/api/defaults/checker.ts:75:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all components",
					"parameters": [
						{
							"name": "compact",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "renderEmpty",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "translation",
							"details": {
								"type": "reference",
								"name": "ODCheckerTranslationRegister_Default",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODCheckerResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "primitive",
							"name": "string"
						}
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render all components",
				"source": "src/core/api/modules/checker.ts:161:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render all components",
					"parameters": [
						{
							"name": "components",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "string"
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerTranslationRegister_Default",
		"comment": "## ODCheckerTranslationRegister_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODCheckerTranslationRegister class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.checkers.translation`!",
		"constant": false,
		"source": "src/core/api/defaults/checker.ts:311:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": null,
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODCheckerTranslationRegister_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "delete",
				"comment": "Delete the translation for a config checker message/sentence.",
				"source": "src/core/api/defaults/checker.ts:328:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Delete the translation for a config checker message/sentence.",
					"parameters": [
						{
							"name": "type",
							"details": {
								"type": "literal",
								"name": "\"other\""
							}
						},
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODCheckerTranslationRegisterOtherIds_Default",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get the translation from a config checker message/sentence",
				"source": "src/core/api/defaults/checker.ts:312:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the translation from a config checker message/sentence",
					"parameters": [
						{
							"name": "type",
							"details": {
								"type": "literal",
								"name": "\"other\""
							}
						},
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODCheckerTranslationRegisterOtherIds_Default",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all translations",
				"source": "src/core/api/modules/checker.ts:211:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all translations",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "unknown"
						}
					}
				}
			},
			{
				"type": "method",
				"name": "insertTranslationParams",
				"comment": "Insert the translation params into the text.",
				"source": "src/core/api/modules/checker.ts:216:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Insert the translation params into the text.",
					"parameters": [
						{
							"name": "text",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "translationParams",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "string"
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "quickTranslate",
				"comment": "A shortcut to copy translations from the `ODLanguageManager` to `ODCheckerTranslationRegister`",
				"source": "src/core/api/defaults/checker.ts:336:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "A shortcut to copy translations from the `ODLanguageManager` to `ODCheckerTranslationRegister`",
					"parameters": [
						{
							"name": "manager",
							"details": {
								"type": "reference",
								"name": "ODLanguageManager_Default",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "translationId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "type",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"message\""
									},
									{
										"type": "literal",
										"name": "\"other\""
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODCheckerTranslationRegisterOtherIds_Default",
										"target": "type",
										"typeArguments": null
									},
									{
										"type": "reference",
										"name": "ODCheckerTranslationRegisterMessageIds_Default",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "any"
					}
				}
			},
			{
				"type": "method",
				"name": "set",
				"comment": "Set the translation for a config checker message/sentence. This function also overwrites existing translations!",
				"source": "src/core/api/defaults/checker.ts:320:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the translation for a config checker message/sentence. This function also overwrites existing translations!",
					"parameters": [
						{
							"name": "type",
							"details": {
								"type": "literal",
								"name": "\"other\""
							}
						},
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODCheckerTranslationRegisterOtherIds_Default",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "translation",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCheckerFunctionManagerIds_Default",
		"comment": "## ODCheckerFunctionManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODCheckerFunctionManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/checker.ts:348:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:dropdown-options",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:351:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerFunction",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:unused-options",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:349:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerFunction",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:unused-questions",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:350:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerFunction",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCheckerManagerIds_Default",
		"comment": "## ODCheckerManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODCheckerManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/checker.ts:13:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:general",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:14:4",
				"details": {
					"type": "reference",
					"name": "ODChecker",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:options",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:16:4",
				"details": {
					"type": "reference",
					"name": "ODChecker",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:panels",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:17:4",
				"details": {
					"type": "reference",
					"name": "ODChecker",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:questions",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:15:4",
				"details": {
					"type": "reference",
					"name": "ODChecker",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:transcripts",
				"comment": null,
				"source": "src/core/api/defaults/checker.ts:18:4",
				"details": {
					"type": "reference",
					"name": "ODChecker",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODCheckerTranslationRegisterMessageIds_Default",
		"comment": "## ODCheckerTranslationRegisterMessageIds_Default `interface`\nThis interface is a list of ids available in the `ODCheckerTranslationRegister_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/checker.ts:235:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"openticket:invalid-type\""
					},
					{
						"type": "literal",
						"name": "\"openticket:property-missing\""
					},
					{
						"type": "literal",
						"name": "\"openticket:property-optional\""
					},
					{
						"type": "literal",
						"name": "\"openticket:object-disabled\""
					},
					{
						"type": "literal",
						"name": "\"openticket:null-invalid\""
					},
					{
						"type": "literal",
						"name": "\"openticket:switch-invalid-type\""
					},
					{
						"type": "literal",
						"name": "\"openticket:object-switch-invalid-type\""
					},
					{
						"type": "literal",
						"name": "\"openticket:string-too-short\""
					},
					{
						"type": "literal",
						"name": "\"openticket:string-too-long\""
					},
					{
						"type": "literal",
						"name": "\"openticket:string-length-invalid\""
					},
					{
						"type": "literal",
						"name": "\"openticket:string-starts-with\""
					},
					{
						"type": "literal",
						"name": "\"openticket:string-ends-with\""
					},
					{
						"type": "literal",
						"name": "\"openticket:string-contains\""
					},
					{
						"type": "literal",
						"name": "\"openticket:string-choices\""
					},
					{
						"type": "literal",
						"name": "\"openticket:string-regex\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-too-short\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-too-long\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-length-invalid\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-too-small\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-too-large\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-not-equal\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-step\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-step-offset\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-starts-with\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-ends-with\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-contains\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-choices\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-float\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-negative\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-positive\""
					},
					{
						"type": "literal",
						"name": "\"openticket:number-zero\""
					},
					{
						"type": "literal",
						"name": "\"openticket:boolean-true\""
					},
					{
						"type": "literal",
						"name": "\"openticket:boolean-false\""
					},
					{
						"type": "literal",
						"name": "\"openticket:array-empty-disabled\""
					},
					{
						"type": "literal",
						"name": "\"openticket:array-empty-required\""
					},
					{
						"type": "literal",
						"name": "\"openticket:array-too-short\""
					},
					{
						"type": "literal",
						"name": "\"openticket:array-too-long\""
					},
					{
						"type": "literal",
						"name": "\"openticket:array-length-invalid\""
					},
					{
						"type": "literal",
						"name": "\"openticket:array-invalid-types\""
					},
					{
						"type": "literal",
						"name": "\"openticket:array-double\""
					},
					{
						"type": "literal",
						"name": "\"openticket:discord-invalid-id\""
					},
					{
						"type": "literal",
						"name": "\"openticket:discord-invalid-id-options\""
					},
					{
						"type": "literal",
						"name": "\"openticket:discord-invalid-token\""
					},
					{
						"type": "literal",
						"name": "\"openticket:color-invalid\""
					},
					{
						"type": "literal",
						"name": "\"openticket:emoji-too-short\""
					},
					{
						"type": "literal",
						"name": "\"openticket:emoji-too-long\""
					},
					{
						"type": "literal",
						"name": "\"openticket:emoji-custom\""
					},
					{
						"type": "literal",
						"name": "\"openticket:emoji-invalid\""
					},
					{
						"type": "literal",
						"name": "\"openticket:url-invalid\""
					},
					{
						"type": "literal",
						"name": "\"openticket:url-invalid-http\""
					},
					{
						"type": "literal",
						"name": "\"openticket:url-invalid-protocol\""
					},
					{
						"type": "literal",
						"name": "\"openticket:url-invalid-hostname\""
					},
					{
						"type": "literal",
						"name": "\"openticket:url-invalid-extension\""
					},
					{
						"type": "literal",
						"name": "\"openticket:url-invalid-path\""
					},
					{
						"type": "literal",
						"name": "\"openticket:id-not-unique\""
					},
					{
						"type": "literal",
						"name": "\"openticket:id-non-existent\""
					},
					{
						"type": "literal",
						"name": "\"openticket:invalid-language\""
					},
					{
						"type": "literal",
						"name": "\"openticket:invalid-button\""
					},
					{
						"type": "literal",
						"name": "\"openticket:unused-option\""
					},
					{
						"type": "literal",
						"name": "\"openticket:unused-question\""
					},
					{
						"type": "literal",
						"name": "\"openticket:dropdown-option\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODCheckerTranslationRegisterOtherIds_Default",
		"comment": "## ODCheckerTranslationRegisterOtherIds_Default `interface`\nThis interface is a list of ids available in the `ODCheckerTranslationRegister_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/checker.ts:215:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"openticket:header-openticket\""
					},
					{
						"type": "literal",
						"name": "\"openticket:header-configchecker\""
					},
					{
						"type": "literal",
						"name": "\"openticket:header-description\""
					},
					{
						"type": "literal",
						"name": "\"openticket:type-error\""
					},
					{
						"type": "literal",
						"name": "\"openticket:type-warning\""
					},
					{
						"type": "literal",
						"name": "\"openticket:type-info\""
					},
					{
						"type": "literal",
						"name": "\"openticket:data-path\""
					},
					{
						"type": "literal",
						"name": "\"openticket:data-docs\""
					},
					{
						"type": "literal",
						"name": "\"openticket:data-message\""
					},
					{
						"type": "literal",
						"name": "\"openticket:compact-information\""
					},
					{
						"type": "literal",
						"name": "\"openticket:footer-error\""
					},
					{
						"type": "literal",
						"name": "\"openticket:footer-warning\""
					},
					{
						"type": "literal",
						"name": "\"openticket:footer-support\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODClientManager_Default",
		"comment": "## ODClientManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODClientManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.client`!",
		"constant": false,
		"source": "src/core/api/defaults/client.ts:13:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/client.ts:80:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODClientManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "activity",
				"comment": "The status manager is responsible for setting the bot status.",
				"source": "src/core/api/modules/client.ts:74:4",
				"details": {
					"type": "reference",
					"name": "ODClientActivityManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "client",
				"comment": "The discord.js `discord.Client`. Only use it when initiated!",
				"source": "src/core/api/modules/client.ts:59:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "Client",
					"typeArguments": [
						{
							"type": "literal",
							"name": "true"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "initiated",
				"comment": "Is the bot initiated?",
				"source": "src/core/api/modules/client.ts:63:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "intents",
				"comment": "List of required bot intents. Add intents to this list using the `onClientLoad` event.",
				"source": "src/core/api/modules/client.ts:40:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODClientIntents",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "loggedIn",
				"comment": "Is the bot logged in?",
				"source": "src/core/api/modules/client.ts:65:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "mainServer",
				"comment": "The main server of the bot. Provided by serverId in the config",
				"source": "src/core/api/modules/client.ts:70:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "Guild",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "partials",
				"comment": "List of required bot partials. Add intents to this list using the `onClientLoad` event. **❌ Only use when neccessery!**",
				"source": "src/core/api/modules/client.ts:44:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODClientPartials",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "permissions",
				"comment": "List of required bot permissions. Add permissions to this list using the `onClientLoad` event.",
				"source": "src/core/api/modules/client.ts:46:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODClientPermissions",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "privileges",
				"comment": "List of required bot privileged intents. Add intents to this list using the `onClientLoad` event.",
				"source": "src/core/api/modules/client.ts:42:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODClientPriviligedIntents",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": "Is the bot ready?",
				"source": "src/core/api/modules/client.ts:67:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "readyListener",
				"comment": "(❌ DO NOD OVERWRITE ❌) Internal Open Ticket function to continue the startup when the client is ready!",
				"source": "src/core/api/modules/client.ts:72:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [],
							"returns": {
								"type": "internal",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "void"
									}
								]
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "rest",
				"comment": "The discord.js REST client. Used for stuff that discord.js can't handle :)",
				"source": "src/core/api/modules/client.ts:61:4",
				"details": {
					"type": "external",
					"package": "@discordjs/rest",
					"name": "REST",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "slashCommands",
				"comment": "The slash command manager is responsible for all slash commands & their events inside the bot.",
				"source": "src/core/api/defaults/client.ts:14:12",
				"details": {
					"type": "reference",
					"name": "ODSlashCommandManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "textCommands",
				"comment": "The text command manager is responsible for all text commands & their events inside the bot.",
				"source": "src/core/api/defaults/client.ts:15:12",
				"details": {
					"type": "reference",
					"name": "ODTextCommandManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "other",
				"name": "token",
				"comment": null,
				"source": "src/core/api/modules/client.ts:48:8",
				"details": null
			},
			{
				"type": "method",
				"name": "checkBotInGuild",
				"comment": "Check if the bot is in a specific guild",
				"source": "src/core/api/modules/client.ts:124:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if the bot is in a specific guild",
					"parameters": [
						{
							"name": "guild",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "Guild",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "checkGuildPerms",
				"comment": "Check if a specific guild has all required permissions (or `Administrator`)",
				"source": "src/core/api/modules/client.ts:128:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if a specific guild has all required permissions (or `Administrator`)",
					"parameters": [
						{
							"name": "guild",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "Guild",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "fetchChannel",
				"comment": "A simplified shortcut to get a `discord.Channel` :)",
				"source": "src/core/api/modules/client.ts:192:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "A simplified shortcut to get a `discord.Channel` :)",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Channel",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchGuild",
				"comment": "A simplified shortcut to get a `discord.Guild` :)",
				"source": "src/core/api/modules/client.ts:181:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "A simplified shortcut to get a `discord.Guild` :)",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchGuildCategoryChannel",
				"comment": "A simplified shortcut to get a `discord.CategoryChannel` :)",
				"source": "src/core/api/modules/client.ts:232:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "A simplified shortcut to get a `discord.CategoryChannel` :)",
					"parameters": [
						{
							"name": "guildId",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "CategoryChannel",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchGuildChannel",
				"comment": "A simplified shortcut to get a `discord.GuildBasedChannel` :)",
				"source": "src/core/api/modules/client.ts:203:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "A simplified shortcut to get a `discord.GuildBasedChannel` :)",
					"parameters": [
						{
							"name": "guildId",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "GuildBasedChannel",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchGuildChannelMessage",
				"comment": "A simplified shortcut to get a `discord.Message` :)",
				"source": "src/core/api/modules/client.ts:275:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "A simplified shortcut to get a `discord.Message` :)",
					"parameters": [
						{
							"name": "guildId",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "channelId",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "TextChannel",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Message",
										"typeArguments": [
											{
												"type": "literal",
												"name": "true"
											}
										]
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchGuildMember",
				"comment": "A simplified shortcut to get a `discord.GuildMember` :)",
				"source": "src/core/api/modules/client.ts:247:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "A simplified shortcut to get a `discord.GuildMember` :)",
					"parameters": [
						{
							"name": "guildId",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "GuildMember",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchGuildRole",
				"comment": "A simplified shortcut to get a `discord.Role` :)",
				"source": "src/core/api/modules/client.ts:261:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "A simplified shortcut to get a `discord.Role` :)",
					"parameters": [
						{
							"name": "guildId",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Role",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchGuildTextChannel",
				"comment": "A simplified shortcut to get a `discord.TextChannel` :)",
				"source": "src/core/api/modules/client.ts:217:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "A simplified shortcut to get a `discord.TextChannel` :)",
					"parameters": [
						{
							"name": "guildId",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "TextChannel",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchUser",
				"comment": "A simplified shortcut to get a `discord.User` :)",
				"source": "src/core/api/modules/client.ts:170:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "A simplified shortcut to get a `discord.User` :)",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getGuilds",
				"comment": "Get all servers the bot is part of.",
				"source": "src/core/api/modules/client.ts:117:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all servers the bot is part of.",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "external",
							"package": "discord.js",
							"name": "Guild",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "initClient",
				"comment": "Initiate the `client` variable & add the intents & partials to the bot.",
				"source": "src/core/api/modules/client.ts:88:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Initiate the `client` variable & add the intents & partials to the bot.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "login",
				"comment": "Log-in with a discord auth token.",
				"source": "src/core/api/modules/client.ts:139:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Log-in with a discord auth token.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "sendUserDm",
				"comment": "A simplified shortcut to send a DM to a user :)",
				"source": "src/core/api/modules/client.ts:295:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "A simplified shortcut to send a DM to a user :)",
					"parameters": [
						{
							"name": "user",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "message",
							"details": {
								"type": "reference",
								"name": "ODMessageBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODMessageBuildSentResult",
								"target": "interface",
								"typeArguments": [
									{
										"type": "literal",
										"name": "false"
									}
								]
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODSlashCommandManager_Default",
		"comment": "## ODSlashCommandManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODSlashCommandManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.client.slashCommands`!",
		"constant": false,
		"source": "src/core/api/defaults/client.ts:50:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/client.ts:789:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "manager",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODSlashCommandManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "commandManager",
				"comment": "Discord.js application commands manager.",
				"source": "src/core/api/modules/client.ts:781:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "ApplicationCommandManager",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "comparator",
				"comment": "A utility class used to compare 2 slash commands with each other.",
				"source": "src/core/api/modules/client.ts:787:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommandComparator",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "listenerLimit",
				"comment": "Set the soft limit for maximum amount of listeners. A warning will be shown when there are more listeners than this limit.",
				"source": "src/core/api/modules/client.ts:785:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "manager",
				"comment": "Refrerence to discord.js client.",
				"source": "src/core/api/modules/client.ts:779:4",
				"details": {
					"type": "reference",
					"name": "ODClientManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODSlashCommand",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODSlashCommand",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "createCmd",
				"comment": "Create a slash command. **(SYSTEM ONLY)** => Use `ODSlashCommandManager` for registering commands the default way!",
				"source": "src/core/api/modules/client.ts:887:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Create a slash command. **(SYSTEM ONLY)** => Use `ODSlashCommandManager` for registering commands the default way!",
					"parameters": [
						{
							"name": "cmd",
							"details": {
								"type": "reference",
								"name": "ODSlashCommand",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "createNewCommands",
				"comment": "Create all commands that are not registered yet.",
				"source": "src/core/api/modules/client.ts:831:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Create all commands that are not registered yet.",
					"parameters": [
						{
							"name": "instances",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODSlashCommand",
									"target": "class",
									"typeArguments": null
								}
							}
						},
						{
							"name": "progress",
							"details": {
								"type": "reference",
								"name": "ODManualProgressBar",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/client.ts:65:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODSlashCommandManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/client.ts:51:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODSlashCommand",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSlashCommand",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getAllRegisteredCommands",
				"comment": "Get all registered & unregistered slash commands.",
				"source": "src/core/api/modules/client.ts:797:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all registered & unregistered slash commands.",
					"parameters": [
						{
							"name": "guildId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODSlashCommandRegisteredResult",
								"target": "type",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODSlashCommand",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODSlashCommand",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSlashCommand",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSlashCommand",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODSlashCommand",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODSlashCommand",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODSlashCommand",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onInteraction",
				"comment": "Callback on interaction from one or multiple slash commands.",
				"source": "src/core/api/defaults/client.ts:72:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Callback on interaction from one or multiple slash commands.",
					"parameters": [
						{
							"name": "commandName",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODSlashCommandManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODSlashCommandInteractionCallback",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODSlashCommand",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/client.ts:58:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODSlashCommand",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "removeUnusedCommands",
				"comment": "Remove all commands that are registered but unused by Open Ticket.",
				"source": "src/core/api/modules/client.ts:862:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove all commands that are registered but unused by Open Ticket.",
					"parameters": [
						{
							"name": "instances",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODSlashCommandUniversalCommand",
									"target": "interface",
									"typeArguments": null
								}
							}
						},
						{
							"name": "guildId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "progress",
							"details": {
								"type": "reference",
								"name": "ODManualProgressBar",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "startListeningToInteractions",
				"comment": "Start listening to the discord.js client `interactionCreate` event.",
				"source": "src/core/api/modules/client.ts:897:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Start listening to the discord.js client `interactionCreate` event.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "updateExistingCommands",
				"comment": "Update all commands that are already registered.",
				"source": "src/core/api/modules/client.ts:848:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Update all commands that are already registered.",
					"parameters": [
						{
							"name": "instances",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODSlashCommand",
									"target": "class",
									"typeArguments": null
								}
							}
						},
						{
							"name": "progress",
							"details": {
								"type": "reference",
								"name": "ODManualProgressBar",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODTextCommandManager_Default",
		"comment": "## ODTextCommandManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODTextCommandManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.client.textCommands`!",
		"constant": false,
		"source": "src/core/api/defaults/client.ts:120:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/client.ts:1284:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "manager",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTextCommandManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "listenerLimit",
				"comment": "Set the soft limit for maximum amount of listeners. A warning will be shown when there are more listeners than this limit.",
				"source": "src/core/api/modules/client.ts:1282:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "manager",
				"comment": "Copy of discord.js client.",
				"source": "src/core/api/modules/client.ts:1276:4",
				"details": {
					"type": "reference",
					"name": "ODClientManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/client.ts:1780:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODTextCommand",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/client.ts:135:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODTextCommandManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/client.ts:121:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODTextCommand",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTextCommand",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODTextCommand",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODTextCommand",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTextCommand",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTextCommand",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODTextCommand",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTextCommand",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTextCommand",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onError",
				"comment": "Callback on error from all the registered text commands",
				"source": "src/core/api/modules/client.ts:1776:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Callback on error from all the registered text commands",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODTextCommandErrorCallback",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onInteraction",
				"comment": "Callback on interaction from one of the registered text commands",
				"source": "src/core/api/defaults/client.ts:142:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Callback on interaction from one of the registered text commands",
					"parameters": [
						{
							"name": "commandPrefix",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "commandName",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "internal",
										"name": "RegExp",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODTextCommandInteractionCallback",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTextCommand",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/client.ts:128:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODTextCommand",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "startListeningToInteractions",
				"comment": "Start listening to the discord.js client `messageCreate` event.",
				"source": "src/core/api/modules/client.ts:1733:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Start listening to the discord.js client `messageCreate` event.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODSlashCommandManagerIds_Default",
		"comment": "## ODSlashCommandManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODSlashCommandManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/client.ts:22:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:add",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:35:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:40:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:41:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:37:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:claim",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:29:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:clear",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:39:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:close",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:26:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:delete",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:27:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:help",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:23:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:move",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:33:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:panel",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:24:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:pin",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:31:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:remove",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:36:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:rename",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:34:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:reopen",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:28:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:stats",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:38:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:25:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:unclaim",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:30:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:unpin",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:32:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommand",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandManagerIds_Default",
		"comment": "## ODTextCommandManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODTextCommandManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/client.ts:84:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:add",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:97:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-disable",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:108:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-enable",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:109:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-disable",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:110:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-enable",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:111:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-add",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:100:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-get",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:102:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-remove",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:101:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-view",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:99:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:claim",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:91:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:clear",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:107:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:close",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:88:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:delete",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:89:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:dump",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:85:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:help",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:86:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:move",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:95:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:panel",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:87:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:pin",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:93:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:remove",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:98:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:rename",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:96:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:reopen",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:90:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-global",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:103:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-reset",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:104:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-ticket",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:105:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-user",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:106:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:unclaim",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:92:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:unpin",
				"comment": null,
				"source": "src/core/api/defaults/client.ts:94:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCodeManager_Default",
		"comment": "## ODCodeManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODCodeManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.code`!",
		"constant": false,
		"source": "src/core/api/defaults/code.ts:36:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/code.ts:41:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCodeManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODCode",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODCode",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "execute",
				"comment": "Execute all `ODCode` functions in order of their priority (high to low).",
				"source": "src/core/api/modules/code.ts:46:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Execute all `ODCode` functions in order of their priority (high to low).",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/code.ts:51:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODCodeManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/code.ts:37:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCode",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCode",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODCode",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODCode",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCode",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCode",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODCode",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCode",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCode",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCode",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/code.ts:44:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCode",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCodeManagerIds_Default",
		"comment": "## ODCodeManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODCodeManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/code.ts:11:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:auto-role-on-join",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:22:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-leave",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:24:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-timeout",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:23:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-leave",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:26:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-timeout",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:25:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-saver",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:21:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:command-error-handling",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:12:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:option-database-cleaner",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:16:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:panel-auto-update",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:19:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:panel-database-cleaner",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:14:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:start-listening-interactions",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:13:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:suffix-database-cleaner",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:15:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-anti-busy",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:27:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-database-cleaner",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:18:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-saver",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:20:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:user-database-cleaner",
				"comment": null,
				"source": "src/core/api/defaults/code.ts:17:4",
				"details": {
					"type": "reference",
					"name": "ODCode",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODConfigManager_Default",
		"comment": "## ODConfigManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODConfigManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.configs`!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:28:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/config.ts:17:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConfigManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODConfig",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODConfig",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/config.ts:43:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODConfigManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/config.ts:29:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODConfig",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODConfig",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODConfig",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODConfig",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODConfig",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODConfig",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init all config files.",
				"source": "src/core/api/modules/config.ts:21:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Init all config files.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODConfig",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODConfig",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODConfig",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODConfig",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/config.ts:36:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODConfig",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODJsonConfig_DefaultGeneral",
		"comment": "## ODJsonConfig_DefaultGeneral `default_class`\nThis is a special class that adds type definitions & typescript to the ODJsonConfig class.\nIt doesn't add any extra features!\n\nThis default class is made for the `general.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:86:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/config.ts:71:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "file",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "customPath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODJsonConfig_DefaultGeneral",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "An object/array of the entire config file! Variables inside it can be edited while the bot is running!",
				"source": "src/core/api/defaults/config.ts:87:12",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/config.ts:40:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/config.ts:42:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the config.",
				"source": "src/core/api/modules/config.ts:78:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Init the config.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "onReload",
				"comment": "Listen for a reload of this JSON file!",
				"source": "src/core/api/modules/config.ts:105:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for a reload of this JSON file!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "internal",
								"name": "Function",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "reload",
				"comment": "Reload the JSON file. Be aware that this doesn't update classes that used individual parts of the config data!",
				"source": "src/core/api/modules/config.ts:88:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reload the JSON file. Be aware that this doesn't update classes that used individual parts of the config data!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "removeAllReloadListeners",
				"comment": "Remove all reload listeners. Not recommended!",
				"source": "src/core/api/modules/config.ts:109:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove all reload listeners. Not recommended!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODJsonConfig_DefaultOptions",
		"comment": "## ODJsonConfig_DefaultOptions `default_class`\nThis is a special class that adds type definitions & typescript to the ODJsonConfig class.\nIt doesn't add any extra features!\n\nThis default class is made for the `options.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:421:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/config.ts:71:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "file",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "customPath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODJsonConfig_DefaultOptions",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "An object/array of the entire config file! Variables inside it can be edited while the bot is running!",
				"source": "src/core/api/defaults/config.ts:422:12",
				"details": {
					"type": "array",
					"child": {
						"type": "union",
						"children": [
							{
								"type": "reference",
								"name": "ODJsonConfig_DefaultOptionTicketType",
								"target": "interface",
								"typeArguments": null
							},
							{
								"type": "reference",
								"name": "ODJsonConfig_DefaultOptionWebsiteType",
								"target": "interface",
								"typeArguments": null
							},
							{
								"type": "reference",
								"name": "ODJsonConfig_DefaultOptionRoleType",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/config.ts:40:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/config.ts:42:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the config.",
				"source": "src/core/api/modules/config.ts:78:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Init the config.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "onReload",
				"comment": "Listen for a reload of this JSON file!",
				"source": "src/core/api/modules/config.ts:105:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for a reload of this JSON file!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "internal",
								"name": "Function",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "reload",
				"comment": "Reload the JSON file. Be aware that this doesn't update classes that used individual parts of the config data!",
				"source": "src/core/api/modules/config.ts:88:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reload the JSON file. Be aware that this doesn't update classes that used individual parts of the config data!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "removeAllReloadListeners",
				"comment": "Remove all reload listeners. Not recommended!",
				"source": "src/core/api/modules/config.ts:109:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove all reload listeners. Not recommended!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODJsonConfig_DefaultPanels",
		"comment": "## ODJsonConfig_DefaultPanels `default_class`\nThis is a special class that adds type definitions & typescript to the ODJsonConfig class.\nIt doesn't add any extra features!\n\nThis default class is made for the `panels.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:509:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/config.ts:71:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "file",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "customPath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODJsonConfig_DefaultPanels",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "An object/array of the entire config file! Variables inside it can be edited while the bot is running!",
				"source": "src/core/api/defaults/config.ts:510:12",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODJsonConfig_DefaultPanelType",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/config.ts:40:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/config.ts:42:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the config.",
				"source": "src/core/api/modules/config.ts:78:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Init the config.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "onReload",
				"comment": "Listen for a reload of this JSON file!",
				"source": "src/core/api/modules/config.ts:105:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for a reload of this JSON file!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "internal",
								"name": "Function",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "reload",
				"comment": "Reload the JSON file. Be aware that this doesn't update classes that used individual parts of the config data!",
				"source": "src/core/api/modules/config.ts:88:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reload the JSON file. Be aware that this doesn't update classes that used individual parts of the config data!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "removeAllReloadListeners",
				"comment": "Remove all reload listeners. Not recommended!",
				"source": "src/core/api/modules/config.ts:109:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove all reload listeners. Not recommended!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODJsonConfig_DefaultQuestions",
		"comment": "## ODJsonConfig_DefaultQuestions `default_class`\nThis is a special class that adds type definitions & typescript to the ODJsonConfig class.\nIt doesn't add any extra features!\n\nThis default class is made for the `questions.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:571:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/config.ts:71:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "file",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "customPath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODJsonConfig_DefaultQuestions",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "An object/array of the entire config file! Variables inside it can be edited while the bot is running!",
				"source": "src/core/api/defaults/config.ts:572:12",
				"details": {
					"type": "array",
					"child": {
						"type": "union",
						"children": [
							{
								"type": "reference",
								"name": "ODJsonConfig_DefaultShortQuestionType",
								"target": "interface",
								"typeArguments": null
							},
							{
								"type": "reference",
								"name": "ODJsonConfig_DefaultParagraphQuestionType",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/config.ts:40:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/config.ts:42:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the config.",
				"source": "src/core/api/modules/config.ts:78:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Init the config.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "onReload",
				"comment": "Listen for a reload of this JSON file!",
				"source": "src/core/api/modules/config.ts:105:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for a reload of this JSON file!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "internal",
								"name": "Function",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "reload",
				"comment": "Reload the JSON file. Be aware that this doesn't update classes that used individual parts of the config data!",
				"source": "src/core/api/modules/config.ts:88:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reload the JSON file. Be aware that this doesn't update classes that used individual parts of the config data!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "removeAllReloadListeners",
				"comment": "Remove all reload listeners. Not recommended!",
				"source": "src/core/api/modules/config.ts:109:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove all reload listeners. Not recommended!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODJsonConfig_DefaultTranscripts",
		"comment": "## ODJsonConfig_DefaultTranscripts `default_class`\nThis is a special class that adds type definitions & typescript to the ODJsonConfig class.\nIt doesn't add any extra features!\n\nThis default class is made for the `transcripts.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:584:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/config.ts:71:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "file",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "customPath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODJsonConfig_DefaultTranscripts",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "An object/array of the entire config file! Variables inside it can be edited while the bot is running!",
				"source": "src/core/api/defaults/config.ts:585:12",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/config.ts:40:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/config.ts:42:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the config.",
				"source": "src/core/api/modules/config.ts:78:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Init the config.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "onReload",
				"comment": "Listen for a reload of this JSON file!",
				"source": "src/core/api/modules/config.ts:105:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for a reload of this JSON file!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "internal",
								"name": "Function",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "reload",
				"comment": "Reload the JSON file. Be aware that this doesn't update classes that used individual parts of the config data!",
				"source": "src/core/api/modules/config.ts:88:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reload the JSON file. Be aware that this doesn't update classes that used individual parts of the config data!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "removeAllReloadListeners",
				"comment": "Remove all reload listeners. Not recommended!",
				"source": "src/core/api/modules/config.ts:109:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove all reload listeners. Not recommended!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODConfigManagerIds_Default",
		"comment": "## ODConfigManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODConfigManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:14:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:general",
				"comment": null,
				"source": "src/core/api/defaults/config.ts:15:4",
				"details": {
					"type": "reference",
					"name": "ODJsonConfig_DefaultGeneral",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:options",
				"comment": null,
				"source": "src/core/api/defaults/config.ts:16:4",
				"details": {
					"type": "reference",
					"name": "ODJsonConfig_DefaultOptions",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:panels",
				"comment": null,
				"source": "src/core/api/defaults/config.ts:17:4",
				"details": {
					"type": "reference",
					"name": "ODJsonConfig_DefaultPanels",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:questions",
				"comment": null,
				"source": "src/core/api/defaults/config.ts:18:4",
				"details": {
					"type": "reference",
					"name": "ODJsonConfig_DefaultQuestions",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:transcripts",
				"comment": null,
				"source": "src/core/api/defaults/config.ts:19:4",
				"details": {
					"type": "reference",
					"name": "ODJsonConfig_DefaultTranscripts",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODJsonConfig_DefaultMessageSettingsType",
		"comment": "## ODJsonConfig_DefaultMessageSettingsType `interface`\nThis interface is an object which has all properties for the \"system\".\"messages\".... object in the `general.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:68:17",
		"children": [
			{
				"type": "property",
				"name": "dm",
				"comment": "Enable sending DM logs to the ticket creator for this action.",
				"source": "src/core/api/defaults/config.ts:70:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "logs",
				"comment": "Enable sending logsto the log channel for this action.",
				"source": "src/core/api/defaults/config.ts:72:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODJsonConfig_DefaultOptionButtonSettingsType",
		"comment": "## ODJsonConfig_DefaultOptionButtonSettingsType `interface`\nThis interface is an object which has all button settings for ticket & reaction role options in the `options.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:244:17",
		"children": [
			{
				"type": "property",
				"name": "color",
				"comment": "The color of the button (not available in options with the 'website' type!)",
				"source": "src/core/api/defaults/config.ts:250:4",
				"details": {
					"type": "reference",
					"name": "ODValidButtonColor",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "emoji",
				"comment": "The emoji of the button. (can also be empty)",
				"source": "src/core/api/defaults/config.ts:246:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "label",
				"comment": "The label of the button (can also be empty)",
				"source": "src/core/api/defaults/config.ts:248:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODJsonConfig_DefaultOptionEmbedSettingsType",
		"comment": "## ODJsonConfig_DefaultOptionEmbedSettingsType `interface`\nThis interface is an object which has all message embed settings for ticket options in the `options.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:256:17",
		"children": [
			{
				"type": "property",
				"name": "customColor",
				"comment": "A custom color for this embed. (The default bot color is used when empty)",
				"source": "src/core/api/defaults/config.ts:264:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "ColorResolvable",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "description",
				"comment": "The description of this embed.",
				"source": "src/core/api/defaults/config.ts:262:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "enabled",
				"comment": "Is this embed enabled?",
				"source": "src/core/api/defaults/config.ts:258:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "fields",
				"comment": "A list of fields displayed in the embed.",
				"source": "src/core/api/defaults/config.ts:271:4",
				"details": {
					"type": "array",
					"child": {
						"type": "unknown"
					}
				}
			},
			{
				"type": "property",
				"name": "image",
				"comment": "A URL to an image displayed in the embed.",
				"source": "src/core/api/defaults/config.ts:267:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "thumbnail",
				"comment": "A URL to a thumbnail displayed in the embed.",
				"source": "src/core/api/defaults/config.ts:269:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "timestamp",
				"comment": "Enable setting the timestamp of the embed to the current time.",
				"source": "src/core/api/defaults/config.ts:279:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "title",
				"comment": "The title of the embed.",
				"source": "src/core/api/defaults/config.ts:260:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODJsonConfig_DefaultOptionPingSettingsType",
		"comment": "## ODJsonConfig_DefaultOptionPingSettingsType `interface`\nThis interface is an object which has all message ping settings for ticket options in the `options.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:285:17",
		"children": [
			{
				"type": "property",
				"name": "@everyone",
				"comment": "Ping `@everyone`.",
				"source": "src/core/api/defaults/config.ts:289:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "@here",
				"comment": "Ping `@here`.",
				"source": "src/core/api/defaults/config.ts:287:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "custom",
				"comment": "A list of custom discord role ids to ping.",
				"source": "src/core/api/defaults/config.ts:291:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODJsonConfig_DefaultOptionRoleType",
		"comment": "## ODJsonConfig_DefaultOptionRoleType `interface`\nThis interface is an object which has all reaction role properties for options in the `options.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:402:17",
		"children": [
			{
				"type": "property",
				"name": "addOnMemberJoin",
				"comment": "Automatically add these roles when the user joins the server.",
				"source": "src/core/api/defaults/config.ts:412:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "button",
				"comment": "All settings related to the button for the 3 option types.",
				"source": "src/core/api/defaults/config.ts:404:4",
				"details": {
					"type": "reference",
					"name": "ODJsonConfig_DefaultOptionButtonSettingsType",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "description",
				"comment": "The description of this option.",
				"source": "src/core/api/defaults/config.ts:229:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this option.",
				"source": "src/core/api/defaults/config.ts:225:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "mode",
				"comment": "The mode determines what will happen with the affected roles on the user.",
				"source": "src/core/api/defaults/config.ts:408:4",
				"details": {
					"type": "reference",
					"name": "ODRoleUpdateMode",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option.",
				"source": "src/core/api/defaults/config.ts:227:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "removeRolesOnAdd",
				"comment": "A list of roles to remove from the user when given at least one of the affected roles.",
				"source": "src/core/api/defaults/config.ts:410:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "roles",
				"comment": "All roles which will be affected by this button.",
				"source": "src/core/api/defaults/config.ts:406:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option. This type also determines the other option-specific variables.",
				"source": "src/core/api/defaults/config.ts:403:4",
				"details": {
					"type": "literal",
					"name": "\"role\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODJsonConfig_DefaultOptionTicketType",
		"comment": "## ODJsonConfig_DefaultOptionTicketType `interface`\nThis interface is an object which has all ticket properties for options in the `options.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:297:17",
		"children": [
			{
				"type": "property",
				"name": "allowCreationByBlacklistedUsers",
				"comment": "When enabled, blacklisted users can still create this ticket type. (used for appeals, etc)",
				"source": "src/core/api/defaults/config.ts:305:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "autoclose",
				"comment": "All settings related to autoclosing this ticket type.",
				"source": "src/core/api/defaults/config.ts:351:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "autodelete",
				"comment": "All settings related to autodeleting this ticket type.",
				"source": "src/core/api/defaults/config.ts:362:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "button",
				"comment": "All settings related to the button for the 3 option types.",
				"source": "src/core/api/defaults/config.ts:299:4",
				"details": {
					"type": "reference",
					"name": "ODJsonConfig_DefaultOptionButtonSettingsType",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "channel",
				"comment": "All settings related to the ticket channel itself.",
				"source": "src/core/api/defaults/config.ts:309:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "cooldown",
				"comment": "All settings related to the cooldown of this ticket type",
				"source": "src/core/api/defaults/config.ts:373:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "description",
				"comment": "The description of this option.",
				"source": "src/core/api/defaults/config.ts:229:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "dmMessage",
				"comment": "All settings related to the message sent in DM to the creator when the ticket is created.",
				"source": "src/core/api/defaults/config.ts:331:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this option.",
				"source": "src/core/api/defaults/config.ts:225:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "limits",
				"comment": "All settings related to the limits of this ticket type",
				"source": "src/core/api/defaults/config.ts:380:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option.",
				"source": "src/core/api/defaults/config.ts:227:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "questions",
				"comment": "A list of valid question ids from the `questions.json` config.",
				"source": "src/core/api/defaults/config.ts:307:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "readonlyAdmins",
				"comment": "A list of discord role ids which are able to access this ticket type but can't write in the chat.",
				"source": "src/core/api/defaults/config.ts:303:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "ticketAdmins",
				"comment": "A list of discord role ids which are able to access this ticket type & use commands.",
				"source": "src/core/api/defaults/config.ts:301:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "ticketMessage",
				"comment": "All settings related to the message sent in the ticket channel when the ticket is created.",
				"source": "src/core/api/defaults/config.ts:340:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option. This type also determines the other option-specific variables.",
				"source": "src/core/api/defaults/config.ts:298:4",
				"details": {
					"type": "literal",
					"name": "\"ticket\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODJsonConfig_DefaultOptionType",
		"comment": "## ODJsonConfig_DefaultOptionType `interface`\nThis interface is an object which has all basic properties for options in the `options.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:223:17",
		"children": [
			{
				"type": "property",
				"name": "button",
				"comment": "All settings related to the button for the 3 option types.",
				"source": "src/core/api/defaults/config.ts:233:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "description",
				"comment": "The description of this option.",
				"source": "src/core/api/defaults/config.ts:229:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this option.",
				"source": "src/core/api/defaults/config.ts:225:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option.",
				"source": "src/core/api/defaults/config.ts:227:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option. This type also determines the other option-specific variables.",
				"source": "src/core/api/defaults/config.ts:231:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"role\""
						},
						{
							"type": "literal",
							"name": "\"ticket\""
						},
						{
							"type": "literal",
							"name": "\"website\""
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODJsonConfig_DefaultOptionWebsiteType",
		"comment": "## ODJsonConfig_DefaultOptionWebsiteType `interface`\nThis interface is an object which has all website properties for options in the `options.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:393:17",
		"children": [
			{
				"type": "property",
				"name": "button",
				"comment": "All settings related to the button for the 3 option types.",
				"source": "src/core/api/defaults/config.ts:233:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "description",
				"comment": "The description of this option.",
				"source": "src/core/api/defaults/config.ts:229:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this option.",
				"source": "src/core/api/defaults/config.ts:225:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option.",
				"source": "src/core/api/defaults/config.ts:227:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option. This type also determines the other option-specific variables.",
				"source": "src/core/api/defaults/config.ts:394:4",
				"details": {
					"type": "literal",
					"name": "\"website\""
				}
			},
			{
				"type": "property",
				"name": "url",
				"comment": "The URL this button will point to.",
				"source": "src/core/api/defaults/config.ts:396:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODJsonConfig_DefaultPanelEmbedSettingsType",
		"comment": "## ODJsonConfig_DefaultPanelEmbedSettingsType `interface`\nThis interface is an object which has all message embed settings for panels in the `panels.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:432:17",
		"children": [
			{
				"type": "property",
				"name": "customColor",
				"comment": "A custom color for this embed. (The default bot color is used when empty)",
				"source": "src/core/api/defaults/config.ts:441:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "ColorResolvable",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "description",
				"comment": "The description of this embed.",
				"source": "src/core/api/defaults/config.ts:438:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "enabled",
				"comment": "Is this embed enabled?",
				"source": "src/core/api/defaults/config.ts:434:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "fields",
				"comment": "A list of fields displayed in the embed. (except when using \"describeOptionsInEmbedFields\")",
				"source": "src/core/api/defaults/config.ts:453:4",
				"details": {
					"type": "array",
					"child": {
						"type": "unknown"
					}
				}
			},
			{
				"type": "property",
				"name": "footer",
				"comment": "The footer of this embed.",
				"source": "src/core/api/defaults/config.ts:451:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "image",
				"comment": "A URL to an image displayed in the embed.",
				"source": "src/core/api/defaults/config.ts:446:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "thumbnail",
				"comment": "A URL to a thumbnail displayed in the embed.",
				"source": "src/core/api/defaults/config.ts:448:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "timestamp",
				"comment": "Enable setting the timestamp of the embed to the current time.",
				"source": "src/core/api/defaults/config.ts:461:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "title",
				"comment": "The title of the embed.",
				"source": "src/core/api/defaults/config.ts:436:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "url",
				"comment": "An optional URL used in the title of the embed.",
				"source": "src/core/api/defaults/config.ts:443:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODJsonConfig_DefaultPanelType",
		"comment": "## ODJsonConfig_DefaultPanelType `interface`\nThis interface is an object which has all properties for panels in the `panels.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:467:17",
		"children": [
			{
				"type": "property",
				"name": "dropdown",
				"comment": "When enabled, the panel uses a dropdown instead of buttons.",
				"source": "src/core/api/defaults/config.ts:473:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "embed",
				"comment": "The embed of this panel.",
				"source": "src/core/api/defaults/config.ts:480:4",
				"details": {
					"type": "reference",
					"name": "ODJsonConfig_DefaultPanelEmbedSettingsType",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this panel.",
				"source": "src/core/api/defaults/config.ts:469:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this panel.",
				"source": "src/core/api/defaults/config.ts:471:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "A list of valid options ids from the `options.json` config.",
				"source": "src/core/api/defaults/config.ts:475:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "settings",
				"comment": null,
				"source": "src/core/api/defaults/config.ts:481:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "text",
				"comment": "The raw text contents of this panel. (empty for embed only)",
				"source": "src/core/api/defaults/config.ts:478:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODJsonConfig_DefaultParagraphQuestionType",
		"comment": "## ODJsonConfig_DefaultParagraphQuestionType `interface`\nThis interface is an object which has all properties for paragraph questions in the `questions.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:542:17",
		"children": [
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this question.",
				"source": "src/core/api/defaults/config.ts:544:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "length",
				"comment": "Settings related to the length of the input.",
				"source": "src/core/api/defaults/config.ts:555:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this question.",
				"source": "src/core/api/defaults/config.ts:546:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "placeholder",
				"comment": "A placeholder for the question.",
				"source": "src/core/api/defaults/config.ts:553:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "required",
				"comment": "Is this question required?",
				"source": "src/core/api/defaults/config.ts:551:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this question.",
				"source": "src/core/api/defaults/config.ts:548:4",
				"details": {
					"type": "literal",
					"name": "\"paragraph\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODJsonConfig_DefaultShortQuestionType",
		"comment": "## ODJsonConfig_DefaultShortQuestionType `interface`\nThis interface is an object which has all properties for short questions in the `questions.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:516:17",
		"children": [
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this question.",
				"source": "src/core/api/defaults/config.ts:518:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "length",
				"comment": "Settings related to the length of the input.",
				"source": "src/core/api/defaults/config.ts:529:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this question.",
				"source": "src/core/api/defaults/config.ts:520:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "placeholder",
				"comment": "A placeholder for the question.",
				"source": "src/core/api/defaults/config.ts:527:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "required",
				"comment": "Is this question required?",
				"source": "src/core/api/defaults/config.ts:525:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this question.",
				"source": "src/core/api/defaults/config.ts:522:4",
				"details": {
					"type": "literal",
					"name": "\"short\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODJsonConfig_DefaultStatusType",
		"comment": "## ODJsonConfig_DefaultStatusType `interface`\nThis interface is an object which has all properties for the status object in the `general.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:54:17",
		"children": [
			{
				"type": "property",
				"name": "enabled",
				"comment": "Is the status enabled?",
				"source": "src/core/api/defaults/config.ts:56:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "status",
				"comment": "The status of the bot (e.g. online, invisible, idle, do not disturb)",
				"source": "src/core/api/defaults/config.ts:62:4",
				"details": {
					"type": "reference",
					"name": "ODClientActivityStatus",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "text",
				"comment": "The text for the status.",
				"source": "src/core/api/defaults/config.ts:60:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of status (e.g. playing, listening, custom, ...)",
				"source": "src/core/api/defaults/config.ts:58:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"playing\""
						},
						{
							"type": "literal",
							"name": "\"listening\""
						},
						{
							"type": "literal",
							"name": "\"watching\""
						},
						{
							"type": "literal",
							"name": "\"custom\""
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODJsonConfig_DefaultCmdPermissionSettingsType",
		"comment": "## ODJsonConfig_DefaultCmdPermissionSettingsType `type`\nThis type is a collection of command permission settings for the \"system\".\"permissions\".... object in the `general.json` config!",
		"constant": false,
		"source": "src/core/api/defaults/config.ts:78:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"admin\""
					},
					{
						"type": "literal",
						"name": "\"everyone\""
					},
					{
						"type": "literal",
						"name": "\"none\""
					},
					{
						"type": "primitive",
						"name": "string"
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODLiveStatusManager_Default",
		"comment": "## ODLiveStatusManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODLiveStatusManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.livestatus`!",
		"constant": false,
		"source": "src/core/api/defaults/console.ts:21:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:595:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "main",
							"details": {
								"type": "reference",
								"name": "ODMain",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODLiveStatusManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "renderer",
				"comment": "The class responsible for rendering the livestatus messages.",
				"source": "src/core/api/modules/console.ts:591:4",
				"details": {
					"type": "reference",
					"name": "ODLiveStatusRenderer",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODLiveStatusSource",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODLiveStatusSource",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/console.ts:36:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "literal",
								"name": "\"openticket:default-djdj-dev\""
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/console.ts:22:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODLiveStatusSource",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODLiveStatusSource",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getAllMessages",
				"comment": "Get the messages from all sources combined!",
				"source": "src/core/api/modules/console.ts:602:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the messages from all sources combined!",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODLiveStatusSourceData",
									"target": "interface",
									"typeArguments": null
								}
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODLiveStatusSource",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODLiveStatusSource",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODLiveStatusSource",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODLiveStatusSource",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODLiveStatusSource",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODLiveStatusSource",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODLiveStatusSource",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODLiveStatusSource",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/console.ts:29:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODLiveStatusSource",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODLiveStatusManagerIds_Default",
		"comment": "## ODLiveStatusManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODLiveStatusManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/console.ts:11:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:default-djdj-dev",
				"comment": null,
				"source": "src/core/api/defaults/console.ts:12:4",
				"details": {
					"type": "reference",
					"name": "ODLiveStatusUrlSource",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCooldownManager_Default",
		"comment": "## ODCooldownManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODCooldownManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.cooldowns`!",
		"constant": false,
		"source": "src/core/api/defaults/cooldown.ts:21:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/cooldown.ts:15:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCooldownManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODCooldown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "object"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODCooldown",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "object"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/cooldown.ts:36:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "never"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/cooldown.ts:22:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCooldown",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "object"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCooldown",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "object"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODCooldown",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "object"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODCooldown",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "object"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCooldown",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "object"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCooldown",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "object"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initiate all cooldowns in this manager.",
				"source": "src/core/api/modules/cooldown.ts:19:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Initiate all cooldowns in this manager.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODCooldown",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "object"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCooldown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "object"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCooldown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "object"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCooldown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "object"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/cooldown.ts:29:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCooldown",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "object"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCooldownManagerIds_Default",
		"comment": "## ODCooldownManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODCooldownManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/cooldown.ts:11:17",
		"children": [],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODDatabaseManager_Default",
		"comment": "## ODDatabaseManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODDatabaseManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.databases`!",
		"constant": false,
		"source": "src/core/api/defaults/database.ts:27:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/database.ts:18:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDatabaseManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODDatabase",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODDatabase",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/database.ts:42:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODDatabaseManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/database.ts:28:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDatabase",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODDatabase",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODDatabase",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDatabase",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDatabase",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init all database files.",
				"source": "src/core/api/modules/database.ts:23:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Init all database files.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODDatabase",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDatabase",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDatabase",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDatabase",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/database.ts:35:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODFormattedJsonDatabase_DefaultGlobal",
		"comment": "## ODFormattedJsonDatabase_DefaultGlobal `default_class`\nThis is a special class that adds type definitions & typescript to the ODFormattedJsonDatabase class.\nIt doesn't add any extra features!\n\nThis default class is made for the `global.json` database!",
		"constant": false,
		"source": "src/core/api/defaults/database.ts:67:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/database.ts:193:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "file",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "formatter",
							"details": {
								"type": "external",
								"package": "formatted-json-stringify",
								"name": "ArrayFormatter",
								"typeArguments": null
							}
						},
						{
							"name": "customPath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFormattedJsonDatabase_DefaultGlobal",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/database.ts:42:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "formatter",
				"comment": "The formatter to use on the database array",
				"source": "src/core/api/modules/database.ts:191:4",
				"details": {
					"type": "external",
					"package": "formatted-json-stringify",
					"name": "ArrayFormatter",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/database.ts:44:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "delete",
				"comment": "Remove the value of `category` & `key`. Returns `undefined` when non-existent!",
				"source": "src/core/api/defaults/database.ts:82:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove the value of `category` & `key`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if a value of `category` & `key` exists. Returns `false` when non-existent!",
				"source": "src/core/api/defaults/database.ts:89:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if a value of `category` & `key` exists. Returns `false` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODFormattedJsonDatabaseIds_DefaultGlobal",
									"target": "interface",
									"typeArguments": null
								}
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get the value of `category` & `key`. Returns `undefined` when non-existent!",
				"source": "src/core/api/defaults/database.ts:75:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the value of `category` & `key`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all values in `category`.",
				"source": "src/core/api/modules/database.ts:259:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all values in `category`.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODJsonDatabaseStructure",
								"target": "type",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getCategory",
				"comment": "Get all values in `category`. Returns `undefined` when non-existent!",
				"source": "src/core/api/defaults/database.ts:96:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all values in `category`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "undefined"
									},
									{
										"type": "array",
										"child": {
											"type": "unknown"
										}
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the database.",
				"source": "src/core/api/modules/database.ts:201:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Init the database.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "set",
				"comment": "Set/overwrite the value of `category` & `key`. Returns `true` when overwritten!",
				"source": "src/core/api/defaults/database.ts:68:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set/overwrite the value of `category` & `key`. Returns `true` when overwritten!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODFormattedJsonDatabase_DefaultOptions",
		"comment": "## ODFormattedJsonDatabase_DefaultOptions `default_class`\nThis is a special class that adds type definitions & typescript to the ODFormattedJsonDatabase class.\nIt doesn't add any extra features!\n\nThis default class is made for the `options.json` database!",
		"constant": false,
		"source": "src/core/api/defaults/database.ts:221:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/database.ts:193:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "file",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "formatter",
							"details": {
								"type": "external",
								"package": "formatted-json-stringify",
								"name": "ArrayFormatter",
								"typeArguments": null
							}
						},
						{
							"name": "customPath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFormattedJsonDatabase_DefaultOptions",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/database.ts:42:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "formatter",
				"comment": "The formatter to use on the database array",
				"source": "src/core/api/modules/database.ts:191:4",
				"details": {
					"type": "external",
					"package": "formatted-json-stringify",
					"name": "ArrayFormatter",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/database.ts:44:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "delete",
				"comment": "Remove the value of `category` & `key`. Returns `undefined` when non-existent!",
				"source": "src/core/api/defaults/database.ts:236:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove the value of `category` & `key`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if a value of `category` & `key` exists. Returns `false` when non-existent!",
				"source": "src/core/api/defaults/database.ts:243:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if a value of `category` & `key` exists. Returns `false` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "literal",
								"name": "\"openticket:used-option\""
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get the value of `category` & `key`. Returns `undefined` when non-existent!",
				"source": "src/core/api/defaults/database.ts:229:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the value of `category` & `key`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all values in `category`.",
				"source": "src/core/api/modules/database.ts:259:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all values in `category`.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODJsonDatabaseStructure",
								"target": "type",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getCategory",
				"comment": "Get all values in `category`. Returns `undefined` when non-existent!",
				"source": "src/core/api/defaults/database.ts:250:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all values in `category`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "undefined"
									},
									{
										"type": "array",
										"child": {
											"type": "unknown"
										}
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the database.",
				"source": "src/core/api/modules/database.ts:201:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Init the database.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "set",
				"comment": "Set/overwrite the value of `category` & `key`. Returns `true` when overwritten!",
				"source": "src/core/api/defaults/database.ts:222:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set/overwrite the value of `category` & `key`. Returns `true` when overwritten!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODFormattedJsonDatabase_DefaultTickets",
		"comment": "## ODFormattedJsonDatabase_DefaultTickets `default_class`\nThis is a special class that adds type definitions & typescript to the ODFormattedJsonDatabase class.\nIt doesn't add any extra features!\n\nThis default class is made for the `tickets.json` database!",
		"constant": false,
		"source": "src/core/api/defaults/database.ts:118:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/database.ts:193:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "file",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "formatter",
							"details": {
								"type": "external",
								"package": "formatted-json-stringify",
								"name": "ArrayFormatter",
								"typeArguments": null
							}
						},
						{
							"name": "customPath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFormattedJsonDatabase_DefaultTickets",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/database.ts:42:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "formatter",
				"comment": "The formatter to use on the database array",
				"source": "src/core/api/modules/database.ts:191:4",
				"details": {
					"type": "external",
					"package": "formatted-json-stringify",
					"name": "ArrayFormatter",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/database.ts:44:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "delete",
				"comment": "Remove the value of `category` & `key`. Returns `undefined` when non-existent!",
				"source": "src/core/api/defaults/database.ts:133:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove the value of `category` & `key`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if a value of `category` & `key` exists. Returns `false` when non-existent!",
				"source": "src/core/api/defaults/database.ts:140:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if a value of `category` & `key` exists. Returns `false` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "literal",
								"name": "\"openticket:ticket\""
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get the value of `category` & `key`. Returns `undefined` when non-existent!",
				"source": "src/core/api/defaults/database.ts:126:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the value of `category` & `key`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all values in `category`.",
				"source": "src/core/api/modules/database.ts:259:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all values in `category`.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODJsonDatabaseStructure",
								"target": "type",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getCategory",
				"comment": "Get all values in `category`. Returns `undefined` when non-existent!",
				"source": "src/core/api/defaults/database.ts:147:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all values in `category`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "undefined"
									},
									{
										"type": "array",
										"child": {
											"type": "unknown"
										}
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the database.",
				"source": "src/core/api/modules/database.ts:201:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Init the database.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "set",
				"comment": "Set/overwrite the value of `category` & `key`. Returns `true` when overwritten!",
				"source": "src/core/api/defaults/database.ts:119:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set/overwrite the value of `category` & `key`. Returns `true` when overwritten!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODFormattedJsonDatabase_DefaultUsers",
		"comment": "## ODFormattedJsonDatabase_DefaultUsers `default_class`\nThis is a special class that adds type definitions & typescript to the ODFormattedJsonDatabase class.\nIt doesn't add any extra features!\n\nThis default class is made for the `users.json` database!",
		"constant": false,
		"source": "src/core/api/defaults/database.ts:169:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/database.ts:193:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "file",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "formatter",
							"details": {
								"type": "external",
								"package": "formatted-json-stringify",
								"name": "ArrayFormatter",
								"typeArguments": null
							}
						},
						{
							"name": "customPath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFormattedJsonDatabase_DefaultUsers",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/database.ts:42:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "formatter",
				"comment": "The formatter to use on the database array",
				"source": "src/core/api/modules/database.ts:191:4",
				"details": {
					"type": "external",
					"package": "formatted-json-stringify",
					"name": "ArrayFormatter",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/database.ts:44:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "delete",
				"comment": "Remove the value of `category` & `key`. Returns `undefined` when non-existent!",
				"source": "src/core/api/defaults/database.ts:184:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove the value of `category` & `key`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if a value of `category` & `key` exists. Returns `false` when non-existent!",
				"source": "src/core/api/defaults/database.ts:191:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if a value of `category` & `key` exists. Returns `false` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "literal",
								"name": "\"openticket:blacklist\""
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get the value of `category` & `key`. Returns `undefined` when non-existent!",
				"source": "src/core/api/defaults/database.ts:177:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the value of `category` & `key`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all values in `category`.",
				"source": "src/core/api/modules/database.ts:259:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all values in `category`.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODJsonDatabaseStructure",
								"target": "type",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getCategory",
				"comment": "Get all values in `category`. Returns `undefined` when non-existent!",
				"source": "src/core/api/defaults/database.ts:198:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all values in `category`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "undefined"
									},
									{
										"type": "array",
										"child": {
											"type": "unknown"
										}
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the database.",
				"source": "src/core/api/modules/database.ts:201:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Init the database.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "set",
				"comment": "Set/overwrite the value of `category` & `key`. Returns `true` when overwritten!",
				"source": "src/core/api/defaults/database.ts:170:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set/overwrite the value of `category` & `key`. Returns `true` when overwritten!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODDatabaseManagerIds_Default",
		"comment": "## ODDatabaseManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODDatabaseManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/database.ts:13:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:global",
				"comment": null,
				"source": "src/core/api/defaults/database.ts:14:4",
				"details": {
					"type": "reference",
					"name": "ODFormattedJsonDatabase_DefaultGlobal",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:options",
				"comment": null,
				"source": "src/core/api/defaults/database.ts:18:4",
				"details": {
					"type": "reference",
					"name": "ODFormattedJsonDatabase_DefaultOptions",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:stats",
				"comment": null,
				"source": "src/core/api/defaults/database.ts:15:4",
				"details": {
					"type": "reference",
					"name": "ODFormattedJsonDatabase",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets",
				"comment": null,
				"source": "src/core/api/defaults/database.ts:16:4",
				"details": {
					"type": "reference",
					"name": "ODFormattedJsonDatabase_DefaultTickets",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:users",
				"comment": null,
				"source": "src/core/api/defaults/database.ts:17:4",
				"details": {
					"type": "reference",
					"name": "ODFormattedJsonDatabase_DefaultUsers",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODFormattedJsonDatabaseIds_DefaultGlobal",
		"comment": "## ODFormattedJsonDatabaseIds_DefaultGlobal `type`\nThis interface is a list of ids available in the `ODFormattedJsonDatabase_DefaultGlobal` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/database.ts:54:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:last-version",
				"comment": null,
				"source": "src/core/api/defaults/database.ts:58:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "openticket:option-suffix-counter",
				"comment": null,
				"source": "src/core/api/defaults/database.ts:56:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "openticket:option-suffix-history",
				"comment": null,
				"source": "src/core/api/defaults/database.ts:57:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "openticket:panel-update",
				"comment": null,
				"source": "src/core/api/defaults/database.ts:55:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODFormattedJsonDatabaseIds_DefaultOptions",
		"comment": "## ODFormattedJsonDatabaseIds_DefaultOptions `type`\nThis interface is a list of ids available in the `ODDatabaseManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/database.ts:211:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:used-option",
				"comment": null,
				"source": "src/core/api/defaults/database.ts:212:4",
				"details": {
					"type": "reference",
					"name": "ODOptionJson",
					"target": "interface",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODFormattedJsonDatabaseIds_DefaultTickets",
		"comment": "## ODFormattedJsonDatabaseIds_DefaultTickets `type`\nThis interface is a list of ids available in the `ODDatabaseManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/database.ts:108:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:ticket",
				"comment": null,
				"source": "src/core/api/defaults/database.ts:109:4",
				"details": {
					"type": "reference",
					"name": "ODTicketJson",
					"target": "interface",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODFormattedJsonDatabaseIds_DefaultUsers",
		"comment": "## ODFormattedJsonDatabaseIds_DefaultUsers `type`\nThis interface is a list of ids available in the `ODDatabaseManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/database.ts:159:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:blacklist",
				"comment": null,
				"source": "src/core/api/defaults/database.ts:160:4",
				"details": {
					"type": "reference",
					"name": "ODTicketJson",
					"target": "interface",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODEvent_Default",
		"comment": "## ODEventManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODEvent class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.events`!",
		"constant": false,
		"source": "src/core/api/defaults/event.ts:330:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/base.ts:176:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEvent_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Callback",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "listenerLimit",
				"comment": "The max listener limit before a possible memory leak will be announced",
				"source": "src/core/api/modules/event.ts:21:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "listeners",
				"comment": "The list of permanent listeners.",
				"source": "src/core/api/modules/event.ts:17:4",
				"details": {
					"type": "array",
					"child": {
						"type": "internal",
						"name": "Function",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "oncelisteners",
				"comment": "The list of one-time listeners. List is cleared every time the event is emitted.",
				"source": "src/core/api/modules/event.ts:19:4",
				"details": {
					"type": "array",
					"child": {
						"type": "internal",
						"name": "Function",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "emit",
				"comment": "Emit this event to all listeners. You are required to provide all parameters of the event!",
				"source": "src/core/api/defaults/event.ts:341:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Emit this event to all listeners. You are required to provide all parameters of the event!",
					"parameters": [
						{
							"name": "params",
							"details": {
								"type": "internal",
								"name": "Parameters",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "Callback",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "listen",
				"comment": "Add a permanent callback to this event. This will stay as long as the bot is running!",
				"source": "src/core/api/defaults/event.ts:331:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add a permanent callback to this event. This will stay as long as the bot is running!",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "typeParam",
								"name": "Callback",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "listenOnce",
				"comment": "Add a one-time-only callback to this event. This will only trigger the callback once!",
				"source": "src/core/api/defaults/event.ts:334:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add a one-time-only callback to this event. This will only trigger the callback once!",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "typeParam",
								"name": "Callback",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "setListenerLimit",
				"comment": "Edit the listener limit",
				"source": "src/core/api/modules/event.ts:37:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Edit the listener limit",
					"parameters": [
						{
							"name": "limit",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/event.ts:24:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODDebugger",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "wait",
				"comment": "Wait until this event is fired! Be carefull with it, because it could block the entire bot when wrongly used!",
				"source": "src/core/api/defaults/event.ts:337:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Wait until this event is fired! Be carefull with it, because it could block the entire bot when wrongly used!",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "internal",
								"name": "Parameters",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "Callback",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Callback",
				"type": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "args",
							"details": {
								"type": "primitive",
								"name": "any"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODEventManager_Default",
		"comment": "## ODEventManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODEvent class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.events`!",
		"constant": false,
		"source": "src/core/api/defaults/event.ts:301:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/event.ts:85:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEventManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/event.ts:90:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODEvent",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/event.ts:316:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODEventIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/event.ts:302:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODEvent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODEvent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODEvent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODEvent",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODEvent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODEvent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODEvent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODEvent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODEvent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODEvent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/event.ts:309:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODEvent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODEventIds_Default",
		"comment": "## ODEventIds_Default `interface`\nThis interface is a list of ids available in the `ODEvent_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/event.ts:50:17",
		"children": [
			{
				"type": "property",
				"name": "afterActionsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:239:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterBlacklistLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:195:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "blacklist",
									"details": {
										"type": "reference",
										"name": "ODBlacklistManager",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterButtonBuildersLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "buttons",
									"details": {
										"type": "reference",
										"name": "ODButtonManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "builders",
									"details": {
										"type": "reference",
										"name": "ODBuilderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterButtonRespondersLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:231:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "buttons",
									"details": {
										"type": "reference",
										"name": "ODButtonResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "responders",
									"details": {
										"type": "reference",
										"name": "ODResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterCheckerFunctionsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:100:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "functions",
									"details": {
										"type": "reference",
										"name": "ODCheckerFunctionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "checkers",
									"details": {
										"type": "reference",
										"name": "ODCheckerManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterCheckersExecuted",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:102:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "result",
									"details": {
										"type": "reference",
										"name": "ODCheckerResult",
										"target": "interface",
										"typeArguments": null
									}
								},
								{
									"name": "checkers",
									"details": {
										"type": "reference",
										"name": "ODCheckerManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterCheckersLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:98:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "checkers",
									"details": {
										"type": "reference",
										"name": "ODCheckerManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterCheckersRendered",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:106:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "renderer",
									"details": {
										"type": "reference",
										"name": "ODCheckerRenderer_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "checkers",
									"details": {
										"type": "reference",
										"name": "ODCheckerManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterCheckerTranslationsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:104:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "translations",
									"details": {
										"type": "reference",
										"name": "ODCheckerTranslationRegister_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "checkers",
									"details": {
										"type": "reference",
										"name": "ODCheckerManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterClientActivityInitiated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:119:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "activity",
									"details": {
										"type": "reference",
										"name": "ODClientActivityManager",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterClientActivityLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:117:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "activity",
									"details": {
										"type": "reference",
										"name": "ODClientActivityManager",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterClientInitiated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:113:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterClientLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:111:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterClientReady",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:115:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterCodeExecuted",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:279:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "code",
									"details": {
										"type": "reference",
										"name": "ODCodeManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterCodeLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:277:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "code",
									"details": {
										"type": "reference",
										"name": "ODCodeManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterCommandRespondersLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:229:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "commands",
									"details": {
										"type": "reference",
										"name": "ODCommandResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "responders",
									"details": {
										"type": "reference",
										"name": "ODResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterConfigsInitiated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:76:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "configs",
									"details": {
										"type": "reference",
										"name": "ODConfigManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterConfigsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:74:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "configs",
									"details": {
										"type": "reference",
										"name": "ODConfigManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterCooldownsInitiated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:259:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "cooldowns",
									"details": {
										"type": "reference",
										"name": "ODCooldownManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterCooldownsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:257:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "cooldowns",
									"details": {
										"type": "reference",
										"name": "ODCooldownManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterDatabasesInitiated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:82:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "databases",
									"details": {
										"type": "reference",
										"name": "ODDatabaseManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterDatabasesLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:80:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "databases",
									"details": {
										"type": "reference",
										"name": "ODDatabaseManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterDropdownBuildersLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:217:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "dropdowns",
									"details": {
										"type": "reference",
										"name": "ODDropdownManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "builders",
									"details": {
										"type": "reference",
										"name": "ODBuilderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterDropdownRespondersLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:233:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "dropdowns",
									"details": {
										"type": "reference",
										"name": "ODDropdownResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "responders",
									"details": {
										"type": "reference",
										"name": "ODResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterEmbedBuildersLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:221:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "embeds",
									"details": {
										"type": "reference",
										"name": "ODEmbedManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "builders",
									"details": {
										"type": "reference",
										"name": "ODBuilderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterErrorHandling",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:53:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "error",
									"details": {
										"type": "internal",
										"name": "Error",
										"typeArguments": null
									}
								},
								{
									"name": "origin",
									"details": {
										"type": "external",
										"package": "@types/node",
										"name": "UncaughtExceptionOrigin",
										"typeArguments": null
									}
								},
								{
									"name": "message",
									"details": {
										"type": "reference",
										"name": "ODError",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterFileBuildersLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:219:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "files",
									"details": {
										"type": "reference",
										"name": "ODFileManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "builders",
									"details": {
										"type": "reference",
										"name": "ODBuilderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterFlagsInitiated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:64:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "flags",
									"details": {
										"type": "reference",
										"name": "ODFlagManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterFlagsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:62:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "flags",
									"details": {
										"type": "reference",
										"name": "ODFlagManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterHelpMenuCategoriesLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:263:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "menu",
									"details": {
										"type": "reference",
										"name": "ODHelpMenuManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterHelpMenuComponentsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:265:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "menu",
									"details": {
										"type": "reference",
										"name": "ODHelpMenuManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterLanguagesInitiated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:88:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "languages",
									"details": {
										"type": "reference",
										"name": "ODLanguageManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterLanguagesLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:86:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "languages",
									"details": {
										"type": "reference",
										"name": "ODLanguageManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterLanguagesSelected",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:90:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "main",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "reference",
												"name": "ODLanguage",
												"target": "class",
												"typeArguments": null
											}
										]
									}
								},
								{
									"name": "backup",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "reference",
												"name": "ODLanguage",
												"target": "class",
												"typeArguments": null
											}
										]
									}
								},
								{
									"name": "languages",
									"details": {
										"type": "reference",
										"name": "ODLanguageManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterLiveStatusSourcesLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:283:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "livestatus",
									"details": {
										"type": "reference",
										"name": "ODLiveStatusManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterMessageBuildersLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:223:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "messages",
									"details": {
										"type": "reference",
										"name": "ODMessageManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "builders",
									"details": {
										"type": "reference",
										"name": "ODBuilderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterModalBuildersLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:225:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "modals",
									"details": {
										"type": "reference",
										"name": "ODModalManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "builders",
									"details": {
										"type": "reference",
										"name": "ODBuilderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterModalRespondersLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:235:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "modals",
									"details": {
										"type": "reference",
										"name": "ODModalResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "responders",
									"details": {
										"type": "reference",
										"name": "ODResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterOptionsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:137:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "options",
									"details": {
										"type": "reference",
										"name": "ODOptionManager",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterPanelsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:141:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "panels",
									"details": {
										"type": "reference",
										"name": "ODPanelManager",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterPanelSpawned",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:143:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "panel",
									"details": {
										"type": "reference",
										"name": "ODPanel",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterPermissionsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:247:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "permissions",
									"details": {
										"type": "reference",
										"name": "ODPermissionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterPluginClassesLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:58:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "classes",
									"details": {
										"type": "reference",
										"name": "ODPluginClassManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "plugins",
									"details": {
										"type": "reference",
										"name": "ODPluginManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterPluginsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:56:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "plugins",
									"details": {
										"type": "reference",
										"name": "ODPluginManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterPostsInitiated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:253:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "posts",
									"details": {
										"type": "reference",
										"name": "ODPostManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterPostsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:251:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "posts",
									"details": {
										"type": "reference",
										"name": "ODPostManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterProgressBarRenderersLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:68:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "renderers",
									"details": {
										"type": "reference",
										"name": "ODProgressBarRendererManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterProgressBarsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:70:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "progressbars",
									"details": {
										"type": "reference",
										"name": "ODProgressBarManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterQuestionsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:133:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "questions",
									"details": {
										"type": "reference",
										"name": "ODQuestionManager",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterRolesLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:189:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "roles",
									"details": {
										"type": "reference",
										"name": "ODRoleManager",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterRolesUpdated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:191:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "role",
									"details": {
										"type": "reference",
										"name": "ODRole",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterSessionsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:94:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "languages",
									"details": {
										"type": "reference",
										"name": "ODSessionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterSlashCommandsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:123:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "slash",
									"details": {
										"type": "reference",
										"name": "ODSlashCommandManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterSlashCommandsRegistered",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:125:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "slash",
									"details": {
										"type": "reference",
										"name": "ODSlashCommandManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterStartScreensLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:287:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "startscreen",
									"details": {
										"type": "reference",
										"name": "ODStartScreenManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterStartScreensRendered",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:289:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "startscreen",
									"details": {
										"type": "reference",
										"name": "ODStartScreenManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterStatScopesLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:269:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "stats",
									"details": {
										"type": "reference",
										"name": "ODStatsManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterStatsInitiated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:273:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "stats",
									"details": {
										"type": "reference",
										"name": "ODStatsManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterStatsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:271:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "stats",
									"details": {
										"type": "reference",
										"name": "ODStatsManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTextCommandsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:129:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "text",
									"details": {
										"type": "reference",
										"name": "ODTextCommandManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketChannelCreated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:151:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "option",
									"details": {
										"type": "reference",
										"name": "ODTicketOption",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketChannelDeleted",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:153:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketClaimed",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:171:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "claimer",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketClosed",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:163:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "closer",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketCreated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:161:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "creator",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketDeleted",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:167:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "deleter",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketMainMessageCreated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:157:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "message",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "Message",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketMoved",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:169:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "mover",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketPermissionsCreated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:155:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "option",
									"details": {
										"type": "reference",
										"name": "ODTicketOption",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "permissions",
									"details": {
										"type": "reference",
										"name": "ODPermissionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketPinned",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:175:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "pinner",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketRenamed",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:183:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "renamer",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketReopened",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:165:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "reopener",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketsCleared",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:185:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "tickets",
									"details": {
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODTicket",
											"target": "class",
											"typeArguments": null
										}
									}
								},
								{
									"name": "clearer",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "filter",
									"details": {
										"type": "reference",
										"name": "ODTicketClearFilter",
										"target": "type",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:147:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "tickets",
									"details": {
										"type": "reference",
										"name": "ODTicketManager",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketUnclaimed",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:173:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "unclaimer",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketUnpinned",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:177:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "unpinner",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketUserAdded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:179:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "adder",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTicketUserRemoved",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:181:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "remover",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTranscriptCompiled",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:209:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "transcripts",
									"details": {
										"type": "reference",
										"name": "ODTranscriptManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "TextChannel",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTranscriptCompilersLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:199:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "transcripts",
									"details": {
										"type": "reference",
										"name": "ODTranscriptManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTranscriptCreated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:205:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "transcripts",
									"details": {
										"type": "reference",
										"name": "ODTranscriptManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "TextChannel",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTranscriptHistoryLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:201:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "transcripts",
									"details": {
										"type": "reference",
										"name": "ODTranscriptManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTranscriptInitiated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:207:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "transcripts",
									"details": {
										"type": "reference",
										"name": "ODTranscriptManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "TextChannel",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterTranscriptReady",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:211:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "transcripts",
									"details": {
										"type": "reference",
										"name": "ODTranscriptManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "TextChannel",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "afterVerifyBarsLoaded",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:243:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "verifybars",
									"details": {
										"type": "reference",
										"name": "ODVerifyBarManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onActionLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:238:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onBlacklistLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:194:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "blacklist",
									"details": {
										"type": "reference",
										"name": "ODBlacklistManager",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onButtonBuilderLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:214:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "buttons",
									"details": {
										"type": "reference",
										"name": "ODButtonManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "builders",
									"details": {
										"type": "reference",
										"name": "ODBuilderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onButtonResponderLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:230:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "buttons",
									"details": {
										"type": "reference",
										"name": "ODButtonResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "responders",
									"details": {
										"type": "reference",
										"name": "ODResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onCheckerExecute",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:101:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "checkers",
									"details": {
										"type": "reference",
										"name": "ODCheckerManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onCheckerFunctionLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:99:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "functions",
									"details": {
										"type": "reference",
										"name": "ODCheckerFunctionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "checkers",
									"details": {
										"type": "reference",
										"name": "ODCheckerManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onCheckerLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:97:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "checkers",
									"details": {
										"type": "reference",
										"name": "ODCheckerManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onCheckerQuit",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:107:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "checkers",
									"details": {
										"type": "reference",
										"name": "ODCheckerManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onCheckerRender",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:105:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "renderer",
									"details": {
										"type": "reference",
										"name": "ODCheckerRenderer_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "checkers",
									"details": {
										"type": "reference",
										"name": "ODCheckerManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onCheckerTranslationLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:103:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "translations",
									"details": {
										"type": "reference",
										"name": "ODCheckerTranslationRegister_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "enabled",
									"details": {
										"type": "primitive",
										"name": "boolean"
									}
								},
								{
									"name": "checkers",
									"details": {
										"type": "reference",
										"name": "ODCheckerManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onClientActivityInit",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:118:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "activity",
									"details": {
										"type": "reference",
										"name": "ODClientActivityManager",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onClientActivityLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:116:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "activity",
									"details": {
										"type": "reference",
										"name": "ODClientActivityManager",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onClientInit",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:112:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onClientLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:110:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onClientReady",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:114:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onCodeExecute",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:278:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "code",
									"details": {
										"type": "reference",
										"name": "ODCodeManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onCodeLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:276:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "code",
									"details": {
										"type": "reference",
										"name": "ODCodeManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onCommandResponderLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:228:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "commands",
									"details": {
										"type": "reference",
										"name": "ODCommandResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "responders",
									"details": {
										"type": "reference",
										"name": "ODResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onConfigInit",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:75:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "configs",
									"details": {
										"type": "reference",
										"name": "ODConfigManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onConfigLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:73:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "configs",
									"details": {
										"type": "reference",
										"name": "ODConfigManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onCooldownInit",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:258:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "cooldowns",
									"details": {
										"type": "reference",
										"name": "ODCooldownManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onCooldownLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:256:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "cooldowns",
									"details": {
										"type": "reference",
										"name": "ODCooldownManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onDatabaseInit",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:81:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "databases",
									"details": {
										"type": "reference",
										"name": "ODDatabaseManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onDatabaseLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:79:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "databases",
									"details": {
										"type": "reference",
										"name": "ODDatabaseManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onDropdownBuilderLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:216:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "dropdowns",
									"details": {
										"type": "reference",
										"name": "ODDropdownManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "builders",
									"details": {
										"type": "reference",
										"name": "ODBuilderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onDropdownResponderLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:232:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "dropdowns",
									"details": {
										"type": "reference",
										"name": "ODDropdownResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "responders",
									"details": {
										"type": "reference",
										"name": "ODResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onEmbedBuilderLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:220:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "embeds",
									"details": {
										"type": "reference",
										"name": "ODEmbedManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "builders",
									"details": {
										"type": "reference",
										"name": "ODBuilderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onErrorHandling",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:52:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "error",
									"details": {
										"type": "internal",
										"name": "Error",
										"typeArguments": null
									}
								},
								{
									"name": "origin",
									"details": {
										"type": "external",
										"package": "@types/node",
										"name": "UncaughtExceptionOrigin",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onFileBuilderLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:218:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "files",
									"details": {
										"type": "reference",
										"name": "ODFileManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "builders",
									"details": {
										"type": "reference",
										"name": "ODBuilderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onFlagInit",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:63:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "flags",
									"details": {
										"type": "reference",
										"name": "ODFlagManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onFlagLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:61:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "flags",
									"details": {
										"type": "reference",
										"name": "ODFlagManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onHelpMenuCategoryLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:262:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "menu",
									"details": {
										"type": "reference",
										"name": "ODHelpMenuManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onHelpMenuComponentLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:264:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "menu",
									"details": {
										"type": "reference",
										"name": "ODHelpMenuManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onLanguageInit",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:87:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "languages",
									"details": {
										"type": "reference",
										"name": "ODLanguageManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onLanguageLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:85:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "languages",
									"details": {
										"type": "reference",
										"name": "ODLanguageManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onLanguageSelect",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:89:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "languages",
									"details": {
										"type": "reference",
										"name": "ODLanguageManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onLiveStatusSourceLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:282:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "livestatus",
									"details": {
										"type": "reference",
										"name": "ODLiveStatusManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onMessageBuilderLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:222:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "messages",
									"details": {
										"type": "reference",
										"name": "ODMessageManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "builders",
									"details": {
										"type": "reference",
										"name": "ODBuilderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onModalBuilderLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:224:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "modals",
									"details": {
										"type": "reference",
										"name": "ODModalManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "builders",
									"details": {
										"type": "reference",
										"name": "ODBuilderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onModalResponderLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:234:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "modals",
									"details": {
										"type": "reference",
										"name": "ODModalResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "responders",
									"details": {
										"type": "reference",
										"name": "ODResponderManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "actions",
									"details": {
										"type": "reference",
										"name": "ODActionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onOptionLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:136:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "options",
									"details": {
										"type": "reference",
										"name": "ODOptionManager",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onPanelLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:140:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "panels",
									"details": {
										"type": "reference",
										"name": "ODPanelManager",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onPanelSpawn",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:142:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "panel",
									"details": {
										"type": "reference",
										"name": "ODPanel",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onPermissionLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:246:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "permissions",
									"details": {
										"type": "reference",
										"name": "ODPermissionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onPluginClassLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:57:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "classes",
									"details": {
										"type": "reference",
										"name": "ODPluginClassManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "plugins",
									"details": {
										"type": "reference",
										"name": "ODPluginManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onPostInit",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:252:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "posts",
									"details": {
										"type": "reference",
										"name": "ODPostManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onPostLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:250:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "posts",
									"details": {
										"type": "reference",
										"name": "ODPostManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onProgressBarLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:69:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "progressbars",
									"details": {
										"type": "reference",
										"name": "ODProgressBarManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onProgressBarRendererLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:67:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "renderers",
									"details": {
										"type": "reference",
										"name": "ODProgressBarRendererManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onQuestionLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:132:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "questions",
									"details": {
										"type": "reference",
										"name": "ODQuestionManager",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onReadyForUsage",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:292:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onRoleLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:188:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "roles",
									"details": {
										"type": "reference",
										"name": "ODRoleManager",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onRoleUpdate",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:190:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "role",
									"details": {
										"type": "reference",
										"name": "ODRole",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onSessionLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:93:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "languages",
									"details": {
										"type": "reference",
										"name": "ODSessionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onSlashCommandLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:122:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "slash",
									"details": {
										"type": "reference",
										"name": "ODSlashCommandManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onSlashCommandRegister",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:124:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "slash",
									"details": {
										"type": "reference",
										"name": "ODSlashCommandManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onStartScreenLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:286:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "startscreen",
									"details": {
										"type": "reference",
										"name": "ODStartScreenManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onStartScreenRender",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:288:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "startscreen",
									"details": {
										"type": "reference",
										"name": "ODStartScreenManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onStatInit",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:272:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "stats",
									"details": {
										"type": "reference",
										"name": "ODStatsManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onStatLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:270:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "stats",
									"details": {
										"type": "reference",
										"name": "ODStatsManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onStatScopeLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:268:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "stats",
									"details": {
										"type": "reference",
										"name": "ODStatsManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTextCommandLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:128:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "text",
									"details": {
										"type": "reference",
										"name": "ODTextCommandManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "client",
									"details": {
										"type": "reference",
										"name": "ODClientManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketChannelCreation",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:150:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "option",
									"details": {
										"type": "reference",
										"name": "ODTicketOption",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketChannelDeletion",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:152:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketClaim",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:170:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "claimer",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketClose",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:162:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "closer",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketCreate",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:160:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "creator",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketDelete",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:166:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "deleter",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:146:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "tickets",
									"details": {
										"type": "reference",
										"name": "ODTicketManager",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketMainMessageCreated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:156:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketMove",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:168:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "mover",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketPermissionsCreated",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:154:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "option",
									"details": {
										"type": "reference",
										"name": "ODTicketOption",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "permissions",
									"details": {
										"type": "reference",
										"name": "ODPermissionManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketPin",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "pinner",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketRename",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:182:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "renamer",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketReopen",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:164:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "reopener",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketsClear",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:184:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "tickets",
									"details": {
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODTicket",
											"target": "class",
											"typeArguments": null
										}
									}
								},
								{
									"name": "clearer",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "filter",
									"details": {
										"type": "reference",
										"name": "ODTicketClearFilter",
										"target": "type",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketUnclaim",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:172:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "unclaimer",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketUnpin",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:176:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "unpinner",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketUserAdd",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:178:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "adder",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTicketUserRemove",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:180:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "remover",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								},
								{
									"name": "reason",
									"details": {
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "null"
											},
											{
												"type": "primitive",
												"name": "string"
											}
										]
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTranscriptCompile",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:208:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "transcripts",
									"details": {
										"type": "reference",
										"name": "ODTranscriptManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "TextChannel",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTranscriptCompilerLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:198:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "transcripts",
									"details": {
										"type": "reference",
										"name": "ODTranscriptManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTranscriptCreate",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:204:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "transcripts",
									"details": {
										"type": "reference",
										"name": "ODTranscriptManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "TextChannel",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTranscriptHistoryLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:200:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "transcripts",
									"details": {
										"type": "reference",
										"name": "ODTranscriptManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTranscriptInit",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:206:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "transcripts",
									"details": {
										"type": "reference",
										"name": "ODTranscriptManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "TextChannel",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onTranscriptReady",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:210:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "transcripts",
									"details": {
										"type": "reference",
										"name": "ODTranscriptManager_Default",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "ticket",
									"details": {
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								},
								{
									"name": "channel",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "TextChannel",
										"typeArguments": null
									}
								},
								{
									"name": "user",
									"details": {
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "onVerifyBarLoad",
				"comment": null,
				"source": "src/core/api/defaults/event.ts:242:4",
				"details": {
					"type": "reference",
					"name": "ODEvent_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [
								{
									"name": "verifybars",
									"details": {
										"type": "reference",
										"name": "ODVerifyBarManager_Default",
										"target": "class",
										"typeArguments": null
									}
								}
							],
							"returns": {
								"type": "reference",
								"name": "ODPromiseVoid",
								"target": "type",
								"typeArguments": null
							}
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODFlagManager_Default",
		"comment": "## ODFlagManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODFlagManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.flags`!",
		"constant": false,
		"source": "src/core/api/defaults/flag.ts:34:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/flag.ts:63:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFlagManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODFlag",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODFlag",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/flag.ts:49:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODFlagManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/flag.ts:35:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODFlag",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODFlag",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODFlag",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODFlag",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODFlag",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODFlag",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Set all flags to their `process.argv` value.",
				"source": "src/core/api/modules/flag.ts:68:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set all flags to their `process.argv` value.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODFlag",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODFlag",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODFlag",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODFlag",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/flag.ts:42:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODFlag",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODFlagManagerIds_Default",
		"comment": "## ODFlagManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODFlagManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/flag.ts:11:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:checker",
				"comment": null,
				"source": "src/core/api/defaults/flag.ts:19:4",
				"details": {
					"type": "reference",
					"name": "ODFlag",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:compile-only",
				"comment": null,
				"source": "src/core/api/defaults/flag.ts:25:4",
				"details": {
					"type": "reference",
					"name": "ODFlag",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:crash",
				"comment": null,
				"source": "src/core/api/defaults/flag.ts:16:4",
				"details": {
					"type": "reference",
					"name": "ODFlag",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:debug",
				"comment": null,
				"source": "src/core/api/defaults/flag.ts:15:4",
				"details": {
					"type": "reference",
					"name": "ODFlag",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:dev-config",
				"comment": null,
				"source": "src/core/api/defaults/flag.ts:13:4",
				"details": {
					"type": "reference",
					"name": "ODFlag",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:dev-database",
				"comment": null,
				"source": "src/core/api/defaults/flag.ts:14:4",
				"details": {
					"type": "reference",
					"name": "ODFlag",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:force-slash-update",
				"comment": null,
				"source": "src/core/api/defaults/flag.ts:23:4",
				"details": {
					"type": "reference",
					"name": "ODFlag",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:no-checker",
				"comment": null,
				"source": "src/core/api/defaults/flag.ts:18:4",
				"details": {
					"type": "reference",
					"name": "ODFlag",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:no-compile",
				"comment": null,
				"source": "src/core/api/defaults/flag.ts:24:4",
				"details": {
					"type": "reference",
					"name": "ODFlag",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:no-easter",
				"comment": null,
				"source": "src/core/api/defaults/flag.ts:20:4",
				"details": {
					"type": "reference",
					"name": "ODFlag",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:no-migration",
				"comment": null,
				"source": "src/core/api/defaults/flag.ts:12:4",
				"details": {
					"type": "reference",
					"name": "ODFlag",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:no-plugins",
				"comment": null,
				"source": "src/core/api/defaults/flag.ts:21:4",
				"details": {
					"type": "reference",
					"name": "ODFlag",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:no-transcripts",
				"comment": null,
				"source": "src/core/api/defaults/flag.ts:17:4",
				"details": {
					"type": "reference",
					"name": "ODFlag",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:soft-plugins",
				"comment": null,
				"source": "src/core/api/defaults/flag.ts:22:4",
				"details": {
					"type": "reference",
					"name": "ODFlag",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODHelpMenuCategory_DefaultAdmin",
		"comment": "## ODHelpMenuCategory_DefaultAdmin `default_class`\nThis is a special class that adds type definitions & typescript to the ODHelpMenuManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the `openticket:admin` category in `openticket.helpmenu`!",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:225:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/helpmenu.ts:111:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "newPage",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODHelpMenuCategory_DefaultAdmin",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this category.",
				"source": "src/core/api/modules/helpmenu.ts:103:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this category. (can include emoji's)",
				"source": "src/core/api/modules/helpmenu.ts:107:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "newPage",
				"comment": "When enabled, it automatically starts this category on a new page.",
				"source": "src/core/api/modules/helpmenu.ts:109:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this category. The higher, the earlier it will appear in the menu.",
				"source": "src/core/api/modules/helpmenu.ts:105:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/helpmenu.ts:240:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODHelpMenuManagerCategoryIds_DefaultAdmin",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/helpmenu.ts:226:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODHelpMenuComponent",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/helpmenu.ts:233:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this category and it's components.",
				"source": "src/core/api/modules/helpmenu.ts:120:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this category and it's components.",
					"parameters": [
						{
							"name": "page",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"text\""
									},
									{
										"type": "literal",
										"name": "\"slash\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODHelpMenuCategory_DefaultAdvanced",
		"comment": "## ODHelpMenuCategory_DefaultAdvanced `default_class`\nThis is a special class that adds type definitions & typescript to the ODHelpMenuManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the `openticket:advanced` category in `openticket.helpmenu`!",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:267:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/helpmenu.ts:111:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "newPage",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODHelpMenuCategory_DefaultAdvanced",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this category.",
				"source": "src/core/api/modules/helpmenu.ts:103:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this category. (can include emoji's)",
				"source": "src/core/api/modules/helpmenu.ts:107:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "newPage",
				"comment": "When enabled, it automatically starts this category on a new page.",
				"source": "src/core/api/modules/helpmenu.ts:109:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this category. The higher, the earlier it will appear in the menu.",
				"source": "src/core/api/modules/helpmenu.ts:105:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/helpmenu.ts:282:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODHelpMenuManagerCategoryIds_DefaultAdvanced",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/helpmenu.ts:268:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODHelpMenuComponent",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/helpmenu.ts:275:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this category and it's components.",
				"source": "src/core/api/modules/helpmenu.ts:120:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this category and it's components.",
					"parameters": [
						{
							"name": "page",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"text\""
									},
									{
										"type": "literal",
										"name": "\"slash\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODHelpMenuCategory_DefaultExtra",
		"comment": "## ODHelpMenuCategory_DefaultExtra `default_class`\nThis is a special class that adds type definitions & typescript to the ODHelpMenuManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the `openticket:general` category in `openticket.helpmenu`!",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:302:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/helpmenu.ts:111:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "newPage",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODHelpMenuCategory_DefaultExtra",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this category.",
				"source": "src/core/api/modules/helpmenu.ts:103:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this category. (can include emoji's)",
				"source": "src/core/api/modules/helpmenu.ts:107:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "newPage",
				"comment": "When enabled, it automatically starts this category on a new page.",
				"source": "src/core/api/modules/helpmenu.ts:109:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this category. The higher, the earlier it will appear in the menu.",
				"source": "src/core/api/modules/helpmenu.ts:105:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/helpmenu.ts:317:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "never"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/helpmenu.ts:303:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODHelpMenuComponent",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/helpmenu.ts:310:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this category and it's components.",
				"source": "src/core/api/modules/helpmenu.ts:120:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this category and it's components.",
					"parameters": [
						{
							"name": "page",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"text\""
									},
									{
										"type": "literal",
										"name": "\"slash\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODHelpMenuCategory_DefaultGeneral",
		"comment": "## ODHelpMenuCategory_DefaultGeneral `default_class`\nThis is a special class that adds type definitions & typescript to the ODHelpMenuManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the `openticket:general` category in `openticket.helpmenu`!",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:65:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/helpmenu.ts:111:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "newPage",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODHelpMenuCategory_DefaultGeneral",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this category.",
				"source": "src/core/api/modules/helpmenu.ts:103:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this category. (can include emoji's)",
				"source": "src/core/api/modules/helpmenu.ts:107:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "newPage",
				"comment": "When enabled, it automatically starts this category on a new page.",
				"source": "src/core/api/modules/helpmenu.ts:109:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this category. The higher, the earlier it will appear in the menu.",
				"source": "src/core/api/modules/helpmenu.ts:105:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/helpmenu.ts:80:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODHelpMenuManagerCategoryIds_DefaultGeneral",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/helpmenu.ts:66:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODHelpMenuComponent",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/helpmenu.ts:73:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this category and it's components.",
				"source": "src/core/api/modules/helpmenu.ts:120:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this category and it's components.",
					"parameters": [
						{
							"name": "page",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"text\""
									},
									{
										"type": "literal",
										"name": "\"slash\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODHelpMenuCategory_DefaultTicketAdvanced",
		"comment": "## ODHelpMenuCategory_DefaultTicketAdvanced `default_class`\nThis is a special class that adds type definitions & typescript to the ODHelpMenuManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the `openticket:ticket` category in `openticket.helpmenu`!",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:144:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/helpmenu.ts:111:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "newPage",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODHelpMenuCategory_DefaultTicketAdvanced",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this category.",
				"source": "src/core/api/modules/helpmenu.ts:103:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this category. (can include emoji's)",
				"source": "src/core/api/modules/helpmenu.ts:107:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "newPage",
				"comment": "When enabled, it automatically starts this category on a new page.",
				"source": "src/core/api/modules/helpmenu.ts:109:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this category. The higher, the earlier it will appear in the menu.",
				"source": "src/core/api/modules/helpmenu.ts:105:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/helpmenu.ts:159:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODHelpMenuManagerCategoryIds_DefaultTicketAdvanced",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/helpmenu.ts:145:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODHelpMenuComponent",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/helpmenu.ts:152:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this category and it's components.",
				"source": "src/core/api/modules/helpmenu.ts:120:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this category and it's components.",
					"parameters": [
						{
							"name": "page",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"text\""
									},
									{
										"type": "literal",
										"name": "\"slash\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODHelpMenuCategory_DefaultTicketBasic",
		"comment": "## ODHelpMenuCategory_DefaultTicketBasic `default_class`\nThis is a special class that adds type definitions & typescript to the ODHelpMenuManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the `openticket:ticket` category in `openticket.helpmenu`!",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:104:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/helpmenu.ts:111:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "newPage",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODHelpMenuCategory_DefaultTicketBasic",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this category.",
				"source": "src/core/api/modules/helpmenu.ts:103:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this category. (can include emoji's)",
				"source": "src/core/api/modules/helpmenu.ts:107:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "newPage",
				"comment": "When enabled, it automatically starts this category on a new page.",
				"source": "src/core/api/modules/helpmenu.ts:109:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this category. The higher, the earlier it will appear in the menu.",
				"source": "src/core/api/modules/helpmenu.ts:105:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/helpmenu.ts:119:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODHelpMenuManagerCategoryIds_DefaultTicketBasic",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/helpmenu.ts:105:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODHelpMenuComponent",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/helpmenu.ts:112:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this category and it's components.",
				"source": "src/core/api/modules/helpmenu.ts:120:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this category and it's components.",
					"parameters": [
						{
							"name": "page",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"text\""
									},
									{
										"type": "literal",
										"name": "\"slash\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODHelpMenuCategory_DefaultTicketUser",
		"comment": "## ODHelpMenuCategory_DefaultTicketUser `default_class`\nThis is a special class that adds type definitions & typescript to the ODHelpMenuManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the `openticket:ticket` category in `openticket.helpmenu`!",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:184:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/helpmenu.ts:111:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "newPage",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODHelpMenuCategory_DefaultTicketUser",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this category.",
				"source": "src/core/api/modules/helpmenu.ts:103:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this category. (can include emoji's)",
				"source": "src/core/api/modules/helpmenu.ts:107:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "newPage",
				"comment": "When enabled, it automatically starts this category on a new page.",
				"source": "src/core/api/modules/helpmenu.ts:109:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this category. The higher, the earlier it will appear in the menu.",
				"source": "src/core/api/modules/helpmenu.ts:105:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/helpmenu.ts:199:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODHelpMenuManagerCategoryIds_DefaultTicketUser",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/helpmenu.ts:185:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODHelpMenuComponent",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/helpmenu.ts:192:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this category and it's components.",
				"source": "src/core/api/modules/helpmenu.ts:120:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this category and it's components.",
					"parameters": [
						{
							"name": "page",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"text\""
									},
									{
										"type": "literal",
										"name": "\"slash\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODHelpMenuManager_Default",
		"comment": "## ODHelpMenuManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODHelpMenuManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.helpmenu`!",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:27:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/helpmenu.ts:164:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODHelpMenuManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "categoriesPerPage",
				"comment": "The amount of categories per-page.",
				"source": "src/core/api/modules/helpmenu.ts:162:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/helpmenu.ts:169:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODHelpMenuCategory",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/helpmenu.ts:42:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODHelpMenuManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/helpmenu.ts:28:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuCategory",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuCategory",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuCategory",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODHelpMenuCategory",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuCategory",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuCategory",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuCategory",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuCategory",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuCategory",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuCategory",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/helpmenu.ts:35:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuCategory",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this entire help menu & return a `ODHelpMenuRenderResult`.",
				"source": "src/core/api/modules/helpmenu.ts:175:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this entire help menu & return a `ODHelpMenuRenderResult`.",
					"parameters": [
						{
							"name": "mode",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"text\""
									},
									{
										"type": "literal",
										"name": "\"slash\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODHelpMenuRenderResult",
								"target": "type",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODHelpMenuManagerCategoryIds_DefaultAdmin",
		"comment": "## ODHelpMenuManagerCategoryIds_DefaultAdmin `type`\nThis interface is a list of ids available in the `ODHelpMenuCategory_DefaultAdmin` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:211:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:blacklist-add",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:214:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-get",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:216:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-remove",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist-view",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:213:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:panel",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:212:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODHelpMenuManagerCategoryIds_DefaultAdvanced",
		"comment": "## ODHelpMenuManagerCategoryIds_DefaultAdvanced `type`\nThis interface is a list of ids available in the `ODHelpMenuCategory_DefaultAdvanced` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:252:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:autoclose-disable",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:257:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-enable",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:258:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-global",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:253:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-reset",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:254:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-ticket",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:255:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:stats-user",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:256:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODHelpMenuManagerCategoryIds_DefaultExtra",
		"comment": "## ODHelpMenuManagerCategoryIds_DefaultExtra `type`\nThis interface is a list of ids available in the `ODHelpMenuCategory_DefaultExtra` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:294:17",
		"children": [],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODHelpMenuManagerCategoryIds_DefaultGeneral",
		"comment": "## ODHelpMenuManagerCategoryIds_DefaultGeneral `type`\nThis interface is a list of ids available in the `ODHelpMenuCategory_DefaultGeneral` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:54:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:help",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:55:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:56:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODHelpMenuCommandComponent",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODHelpMenuManagerCategoryIds_DefaultTicketAdvanced",
		"comment": "## ODHelpMenuManagerCategoryIds_DefaultTicketAdvanced `type`\nThis interface is a list of ids available in the `ODHelpMenuCategory_DefaultTicketAdvanced` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:131:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:move",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:134:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:pin",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:132:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:rename",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:135:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:unpin",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:133:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODHelpMenuManagerCategoryIds_DefaultTicketBasic",
		"comment": "## ODHelpMenuManagerCategoryIds_DefaultTicketBasic `type`\nThis interface is a list of ids available in the `ODHelpMenuCategory_DefaultTicketBasic` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:92:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:close",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:93:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:delete",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:94:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:reopen",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:95:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODHelpMenuManagerCategoryIds_DefaultTicketUser",
		"comment": "## ODHelpMenuManagerCategoryIds_DefaultTicketUser `type`\nThis interface is a list of ids available in the `ODHelpMenuCategory_DefaultTicketUser` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:171:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:add",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:claim",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:172:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:remove",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:175:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:unclaim",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:173:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCommandComponent",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODHelpMenuManagerIds_Default",
		"comment": "## ODHelpMenuManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODHelpMenuManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/helpmenu.ts:11:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:admin",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:16:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCategory_DefaultAdmin",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:advanced",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:17:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCategory_DefaultAdvanced",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:extra",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:18:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCategory_DefaultExtra",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:general",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:12:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCategory_DefaultGeneral",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-advanced",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:14:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCategory_DefaultTicketAdvanced",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-basic",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:13:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCategory_DefaultTicketBasic",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-user",
				"comment": null,
				"source": "src/core/api/defaults/helpmenu.ts:15:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuCategory_DefaultTicketUser",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODLanguageManager_Default",
		"comment": "## ODLanguageManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODLanguageManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.languages`!",
		"constant": false,
		"source": "src/core/api/defaults/language.ts:479:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/language.ts:41:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "presets",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODLanguageManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "backup",
				"comment": "The currently selected backup language. (used when translation missing in current language)",
				"source": "src/core/api/modules/language.ts:37:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODLanguage",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "current",
				"comment": "The currently selected language.",
				"source": "src/core/api/modules/language.ts:35:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODLanguage",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODLanguage",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODLanguage",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/language.ts:494:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODLanguageManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/language.ts:480:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODLanguage",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODLanguage",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getBackupLanguage",
				"comment": "Get the backup language (same as `this.backup`)",
				"source": "src/core/api/modules/language.ts:74:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the backup language (same as `this.backup`)",
					"parameters": [],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODLanguage",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getCurrentLanguage",
				"comment": "Get the current language (same as `this.current`)",
				"source": "src/core/api/modules/language.ts:60:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the current language (same as `this.current`)",
					"parameters": [],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODLanguage",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getCurrentLanguageId",
				"comment": "Get the ID (string) of the current language. (Not backup language)",
				"source": "src/core/api/modules/language.ts:83:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the ID (string) of the current language. (Not backup language)",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODLanguage",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODLanguage",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODLanguage",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLanguageMetadata",
				"comment": "Get the metadata of the current/backup language.",
				"source": "src/core/api/modules/language.ts:78:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the metadata of the current/backup language.",
					"parameters": [
						{
							"name": "frombackup",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODLanguageMetadata",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODLanguage",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getTranslation",
				"comment": "Get a translation string by JSON location. (e.g. `\"checker.system.typeError\"`)",
				"source": "src/core/api/defaults/language.ts:501:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a translation string by JSON location. (e.g. `\"checker.system.typeError\"`)",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODLanguageManagerTranslations_Default",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "getTranslationWithParams",
				"comment": "Get a backup translation string by JSON location and replace `{0}`,`{1}`,`{2}`,... with the provided parameters.",
				"source": "src/core/api/defaults/language.ts:522:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a backup translation string by JSON location and replace `{0}`,`{1}`,`{2}`,... with the provided parameters.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODLanguageManagerTranslations_Default",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "string"
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init all language files.",
				"source": "src/core/api/modules/language.ts:135:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Init all language files.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODLanguage",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODLanguage",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODLanguage",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODLanguage",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/language.ts:487:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODLanguage",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setBackupLanguage",
				"comment": "Set the backup language by providing the ID of a language which is registered in this manager.",
				"source": "src/core/api/defaults/language.ts:515:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the backup language by providing the ID of a language which is registered in this manager.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODLanguageManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "setCurrentLanguage",
				"comment": "Set the current language by providing the ID of a language which is registered in this manager.",
				"source": "src/core/api/defaults/language.ts:508:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the current language by providing the ID of a language which is registered in this manager.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODLanguageManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODLanguageManagerIds_Default",
		"comment": "## ODLanguageManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODLanguageManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/language.ts:446:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:arabic",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:466:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:catalan",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:453:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:custom",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:447:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:czech",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:451:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:danish",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:462:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:dutch",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:449:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:english",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:448:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:estonian",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:460:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:finnish",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:461:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:french",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:465:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:german",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:452:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:hindi",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:467:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:hungarian",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:454:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:indonesian",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:458:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:italian",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:459:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:lithuanian",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:468:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:polish",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:469:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:portuguese",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:450:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:romanian",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:456:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:spanish",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:455:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:thai",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:463:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:turkish",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:464:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:ukrainian",
				"comment": null,
				"source": "src/core/api/defaults/language.ts:457:4",
				"details": {
					"type": "reference",
					"name": "ODLanguage",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODLanguageManagerTranslations_Default",
		"comment": "## ODLanguageManagerTranslations_Default `type`\nThis interface is a list of ids available in the `ODLanguageManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/language.ts:11:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"checker.system.headerOpenTicket\""
					},
					{
						"type": "literal",
						"name": "\"checker.system.typeError\""
					},
					{
						"type": "literal",
						"name": "\"checker.system.typeWarning\""
					},
					{
						"type": "literal",
						"name": "\"checker.system.typeInfo\""
					},
					{
						"type": "literal",
						"name": "\"checker.system.headerConfigChecker\""
					},
					{
						"type": "literal",
						"name": "\"checker.system.headerDescription\""
					},
					{
						"type": "literal",
						"name": "\"checker.system.footerError\""
					},
					{
						"type": "literal",
						"name": "\"checker.system.footerWarning\""
					},
					{
						"type": "literal",
						"name": "\"checker.system.footerSupport\""
					},
					{
						"type": "literal",
						"name": "\"checker.system.compactInformation\""
					},
					{
						"type": "literal",
						"name": "\"checker.system.dataPath\""
					},
					{
						"type": "literal",
						"name": "\"checker.system.dataDocs\""
					},
					{
						"type": "literal",
						"name": "\"checker.system.dataMessages\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.invalidType\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.propertyMissing\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.propertyOptional\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.objectDisabled\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.nullInvalid\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.switchInvalidType\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.objectSwitchInvalid\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.stringTooShort\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.stringTooLong\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.stringLengthInvalid\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.stringStartsWith\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.stringEndsWith\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.stringContains\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.stringChoices\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.stringRegex\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberTooShort\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberTooLong\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberLengthInvalid\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberTooSmall\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberTooLarge\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberNotEqual\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberStep\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberStepOffset\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberStartsWith\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberEndsWith\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberContains\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberChoices\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberFloat\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberNegative\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberPositive\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.numberZero\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.booleanTrue\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.booleanFalse\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.arrayEmptyDisabled\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.arrayEmptyRequired\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.arrayTooShort\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.arrayTooLong\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.arrayLengthInvalid\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.arrayInvalidTypes\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.arrayDouble\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.discordInvalidId\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.discordInvalidIdOptions\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.discordInvalidToken\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.colorInvalid\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.emojiTooShort\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.emojiTooLong\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.emojiCustom\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.emojiInvalid\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.urlInvalid\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.urlInvalidHttp\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.urlInvalidProtocol\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.urlInvalidHostname\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.urlInvalidExtension\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.urlInvalidPath\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.idNotUnique\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.idNonExistent\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.invalidLanguage\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.invalidButton\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.unusedOption\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.unusedQuestion\""
					},
					{
						"type": "literal",
						"name": "\"checker.messages.dropdownOption\""
					},
					{
						"type": "literal",
						"name": "\"actions.buttons.create\""
					},
					{
						"type": "literal",
						"name": "\"actions.buttons.close\""
					},
					{
						"type": "literal",
						"name": "\"actions.buttons.delete\""
					},
					{
						"type": "literal",
						"name": "\"actions.buttons.reopen\""
					},
					{
						"type": "literal",
						"name": "\"actions.buttons.claim\""
					},
					{
						"type": "literal",
						"name": "\"actions.buttons.unclaim\""
					},
					{
						"type": "literal",
						"name": "\"actions.buttons.pin\""
					},
					{
						"type": "literal",
						"name": "\"actions.buttons.unpin\""
					},
					{
						"type": "literal",
						"name": "\"actions.buttons.clear\""
					},
					{
						"type": "literal",
						"name": "\"actions.buttons.helpSwitchSlash\""
					},
					{
						"type": "literal",
						"name": "\"actions.buttons.helpSwitchText\""
					},
					{
						"type": "literal",
						"name": "\"actions.buttons.helpPage\""
					},
					{
						"type": "literal",
						"name": "\"actions.buttons.withReason\""
					},
					{
						"type": "literal",
						"name": "\"actions.buttons.withoutTranscript\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.created\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.close\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.delete\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.reopen\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.claim\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.unclaim\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.pin\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.unpin\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.rename\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.move\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.add\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.remove\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.help\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.statsReset\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.blacklistAdd\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.blacklistRemove\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.blacklistGet\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.blacklistView\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.blacklistAddDm\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.blacklistRemoveDm\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.clear\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.roles\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.autoclose\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.autocloseEnabled\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.autocloseDisabled\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.autodelete\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.autodeleteEnabled\""
					},
					{
						"type": "literal",
						"name": "\"actions.titles.autodeleteDisabled\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.create\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.close\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.delete\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.reopen\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.claim\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.unclaim\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.pin\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.unpin\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.rename\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.move\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.add\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.remove\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.helpExplanation\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.statsReset\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.statsError\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.blacklistAdd\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.blacklistRemove\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.blacklistGetSuccess\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.blacklistGetEmpty\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.blacklistViewEmpty\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.blacklistViewTip\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.clearVerify\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.clearReady\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.rolesEmpty\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.autocloseLeave\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.autocloseTimeout\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.autodeleteLeave\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.autodeleteTimeout\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.autocloseEnabled\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.autocloseDisabled\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.autodeleteEnabled\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.autodeleteDisabled\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.ticketMessageLimit\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.ticketMessageAutoclose\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.ticketMessageAutodelete\""
					},
					{
						"type": "literal",
						"name": "\"actions.descriptions.panelReady\""
					},
					{
						"type": "literal",
						"name": "\"actions.modal.closePlaceholder\""
					},
					{
						"type": "literal",
						"name": "\"actions.modal.deletePlaceholder\""
					},
					{
						"type": "literal",
						"name": "\"actions.modal.reopenPlaceholder\""
					},
					{
						"type": "literal",
						"name": "\"actions.modal.claimPlaceholder\""
					},
					{
						"type": "literal",
						"name": "\"actions.modal.unclaimPlaceholder\""
					},
					{
						"type": "literal",
						"name": "\"actions.modal.pinPlaceholder\""
					},
					{
						"type": "literal",
						"name": "\"actions.modal.unpinPlaceholder\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.createLog\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.closeLog\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.closeDm\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.deleteLog\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.deleteDm\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.reopenLog\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.reopenDm\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.claimLog\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.claimDm\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.unclaimLog\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.unclaimDm\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.pinLog\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.pinDm\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.unpinLog\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.unpinDm\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.renameLog\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.renameDm\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.moveLog\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.moveDm\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.addLog\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.addDm\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.removeLog\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.removeDm\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.blacklistAddLog\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.blacklistRemoveLog\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.blacklistAddDm\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.blacklistRemoveDm\""
					},
					{
						"type": "literal",
						"name": "\"actions.logs.clearLog\""
					},
					{
						"type": "literal",
						"name": "\"transcripts.success.visit\""
					},
					{
						"type": "literal",
						"name": "\"transcripts.success.ready\""
					},
					{
						"type": "literal",
						"name": "\"transcripts.success.textFileDescription\""
					},
					{
						"type": "literal",
						"name": "\"transcripts.success.htmlProgress\""
					},
					{
						"type": "literal",
						"name": "\"transcripts.success.createdChannel\""
					},
					{
						"type": "literal",
						"name": "\"transcripts.success.createdCreator\""
					},
					{
						"type": "literal",
						"name": "\"transcripts.success.createdParticipant\""
					},
					{
						"type": "literal",
						"name": "\"transcripts.success.createdActiveAdmin\""
					},
					{
						"type": "literal",
						"name": "\"transcripts.success.createdEveryAdmin\""
					},
					{
						"type": "literal",
						"name": "\"transcripts.success.createdOther\""
					},
					{
						"type": "literal",
						"name": "\"transcripts.errors.retry\""
					},
					{
						"type": "literal",
						"name": "\"transcripts.errors.continue\""
					},
					{
						"type": "literal",
						"name": "\"transcripts.errors.backup\""
					},
					{
						"type": "literal",
						"name": "\"transcripts.errors.error\""
					},
					{
						"type": "literal",
						"name": "\"errors.titles.internalError\""
					},
					{
						"type": "literal",
						"name": "\"errors.titles.optionMissing\""
					},
					{
						"type": "literal",
						"name": "\"errors.titles.optionInvalid\""
					},
					{
						"type": "literal",
						"name": "\"errors.titles.unknownCommand\""
					},
					{
						"type": "literal",
						"name": "\"errors.titles.noPermissions\""
					},
					{
						"type": "literal",
						"name": "\"errors.titles.unknownTicket\""
					},
					{
						"type": "literal",
						"name": "\"errors.titles.deprecatedTicket\""
					},
					{
						"type": "literal",
						"name": "\"errors.titles.unknownOption\""
					},
					{
						"type": "literal",
						"name": "\"errors.titles.unknownPanel\""
					},
					{
						"type": "literal",
						"name": "\"errors.titles.notInGuild\""
					},
					{
						"type": "literal",
						"name": "\"errors.titles.channelRename\""
					},
					{
						"type": "literal",
						"name": "\"errors.titles.busy\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.askForInfo\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.askForInfoResolve\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.internalError\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.optionMissing\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.optionInvalid\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.optionInvalidChoose\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.unknownCommand\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.noPermissions\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.noPermissionsList\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.noPermissionsCooldown\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.noPermissionsBlacklist\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.noPermissionsLimitGlobal\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.noPermissionsLimitGlobalUser\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.noPermissionsLimitOption\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.noPermissionsLimitOptionUser\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.unknownTicket\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.deprecatedTicket\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.notInGuild\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.channelRename\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.channelRenameSource\""
					},
					{
						"type": "literal",
						"name": "\"errors.descriptions.busy\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.stringRegex\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.stringMinLength\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.stringMaxLength\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.numberInvalid\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.numberMin\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.numberMax\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.numberDecimal\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.numberNegative\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.numberPositive\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.numberZero\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.channelNotFound\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.userNotFound\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.roleNotFound\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.memberNotFound\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.mentionableNotFound\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.channelType\""
					},
					{
						"type": "literal",
						"name": "\"errors.optionInvalidReasons.notInGuild\""
					},
					{
						"type": "literal",
						"name": "\"errors.permissions.developer\""
					},
					{
						"type": "literal",
						"name": "\"errors.permissions.owner\""
					},
					{
						"type": "literal",
						"name": "\"errors.permissions.admin\""
					},
					{
						"type": "literal",
						"name": "\"errors.permissions.moderator\""
					},
					{
						"type": "literal",
						"name": "\"errors.permissions.support\""
					},
					{
						"type": "literal",
						"name": "\"errors.permissions.member\""
					},
					{
						"type": "literal",
						"name": "\"errors.permissions.discord-administrator\""
					},
					{
						"type": "literal",
						"name": "\"errors.actionInvalid.close\""
					},
					{
						"type": "literal",
						"name": "\"errors.actionInvalid.reopen\""
					},
					{
						"type": "literal",
						"name": "\"errors.actionInvalid.claim\""
					},
					{
						"type": "literal",
						"name": "\"errors.actionInvalid.unclaim\""
					},
					{
						"type": "literal",
						"name": "\"errors.actionInvalid.pin\""
					},
					{
						"type": "literal",
						"name": "\"errors.actionInvalid.unpin\""
					},
					{
						"type": "literal",
						"name": "\"errors.actionInvalid.add\""
					},
					{
						"type": "literal",
						"name": "\"errors.actionInvalid.remove\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.ticket\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.tickets\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.reason\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.creator\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.remaining\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.added\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.removed\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.filter\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.claimedBy\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.method\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.type\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.blacklisted\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.panel\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.command\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.system\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.true\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.false\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.syntax\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.originalName\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.newName\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.until\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.validOptions\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.validPanels\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.autoclose\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.autodelete\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.startupDate\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.version\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.name\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.role\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.status\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.claimed\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.pinned\""
					},
					{
						"type": "literal",
						"name": "\"params.uppercase.creationDate\""
					},
					{
						"type": "literal",
						"name": "\"params.lowercase.text\""
					},
					{
						"type": "literal",
						"name": "\"params.lowercase.html\""
					},
					{
						"type": "literal",
						"name": "\"params.lowercase.command\""
					},
					{
						"type": "literal",
						"name": "\"params.lowercase.modal\""
					},
					{
						"type": "literal",
						"name": "\"params.lowercase.button\""
					},
					{
						"type": "literal",
						"name": "\"params.lowercase.dropdown\""
					},
					{
						"type": "literal",
						"name": "\"params.lowercase.method\""
					},
					{
						"type": "literal",
						"name": "\"commands.reason\""
					},
					{
						"type": "literal",
						"name": "\"commands.help\""
					},
					{
						"type": "literal",
						"name": "\"commands.panel\""
					},
					{
						"type": "literal",
						"name": "\"commands.panelId\""
					},
					{
						"type": "literal",
						"name": "\"commands.panelAutoUpdate\""
					},
					{
						"type": "literal",
						"name": "\"commands.ticket\""
					},
					{
						"type": "literal",
						"name": "\"commands.ticketId\""
					},
					{
						"type": "literal",
						"name": "\"commands.close\""
					},
					{
						"type": "literal",
						"name": "\"commands.delete\""
					},
					{
						"type": "literal",
						"name": "\"commands.deleteNoTranscript\""
					},
					{
						"type": "literal",
						"name": "\"commands.reopen\""
					},
					{
						"type": "literal",
						"name": "\"commands.claim\""
					},
					{
						"type": "literal",
						"name": "\"commands.claimUser\""
					},
					{
						"type": "literal",
						"name": "\"commands.unclaim\""
					},
					{
						"type": "literal",
						"name": "\"commands.pin\""
					},
					{
						"type": "literal",
						"name": "\"commands.unpin\""
					},
					{
						"type": "literal",
						"name": "\"commands.move\""
					},
					{
						"type": "literal",
						"name": "\"commands.moveId\""
					},
					{
						"type": "literal",
						"name": "\"commands.rename\""
					},
					{
						"type": "literal",
						"name": "\"commands.renameName\""
					},
					{
						"type": "literal",
						"name": "\"commands.add\""
					},
					{
						"type": "literal",
						"name": "\"commands.addUser\""
					},
					{
						"type": "literal",
						"name": "\"commands.remove\""
					},
					{
						"type": "literal",
						"name": "\"commands.removeUser\""
					},
					{
						"type": "literal",
						"name": "\"commands.blacklist\""
					},
					{
						"type": "literal",
						"name": "\"commands.blacklistView\""
					},
					{
						"type": "literal",
						"name": "\"commands.blacklistAdd\""
					},
					{
						"type": "literal",
						"name": "\"commands.blacklistRemove\""
					},
					{
						"type": "literal",
						"name": "\"commands.blacklistGet\""
					},
					{
						"type": "literal",
						"name": "\"commands.blacklistGetUser\""
					},
					{
						"type": "literal",
						"name": "\"commands.stats\""
					},
					{
						"type": "literal",
						"name": "\"commands.statsReset\""
					},
					{
						"type": "literal",
						"name": "\"commands.statsGlobal\""
					},
					{
						"type": "literal",
						"name": "\"commands.statsUser\""
					},
					{
						"type": "literal",
						"name": "\"commands.statsUserUser\""
					},
					{
						"type": "literal",
						"name": "\"commands.statsTicket\""
					},
					{
						"type": "literal",
						"name": "\"commands.statsTicketTicket\""
					},
					{
						"type": "literal",
						"name": "\"commands.clear\""
					},
					{
						"type": "literal",
						"name": "\"commands.clearFilter\""
					},
					{
						"type": "literal",
						"name": "\"commands.clearFilters.all\""
					},
					{
						"type": "literal",
						"name": "\"commands.clearFilters.open\""
					},
					{
						"type": "literal",
						"name": "\"commands.clearFilters.close\""
					},
					{
						"type": "literal",
						"name": "\"commands.clearFilters.claim\""
					},
					{
						"type": "literal",
						"name": "\"commands.clearFilters.unclaim\""
					},
					{
						"type": "literal",
						"name": "\"commands.clearFilters.pin\""
					},
					{
						"type": "literal",
						"name": "\"commands.clearFilters.unpin\""
					},
					{
						"type": "literal",
						"name": "\"commands.clearFilters.autoclose\""
					},
					{
						"type": "literal",
						"name": "\"commands.autoclose\""
					},
					{
						"type": "literal",
						"name": "\"commands.autocloseDisable\""
					},
					{
						"type": "literal",
						"name": "\"commands.autocloseEnable\""
					},
					{
						"type": "literal",
						"name": "\"commands.autocloseEnableTime\""
					},
					{
						"type": "literal",
						"name": "\"commands.autodelete\""
					},
					{
						"type": "literal",
						"name": "\"commands.autodeleteDisable\""
					},
					{
						"type": "literal",
						"name": "\"commands.autodeleteEnable\""
					},
					{
						"type": "literal",
						"name": "\"commands.autodeleteEnableTime\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.help\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.ticket\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.close\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.delete\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.reopen\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.pin\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.unpin\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.move\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.rename\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.claim\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.unclaim\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.add\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.remove\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.panel\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.blacklistView\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.blacklistAdd\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.blacklistRemove\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.blacklistGet\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.statsGlobal\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.statsTicket\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.statsUser\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.statsReset\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.autocloseDisable\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.autocloseEnable\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.autodeleteDisable\""
					},
					{
						"type": "literal",
						"name": "\"helpMenu.autodeleteEnable\""
					},
					{
						"type": "literal",
						"name": "\"stats.scopes.global\""
					},
					{
						"type": "literal",
						"name": "\"stats.scopes.system\""
					},
					{
						"type": "literal",
						"name": "\"stats.scopes.user\""
					},
					{
						"type": "literal",
						"name": "\"stats.scopes.ticket\""
					},
					{
						"type": "literal",
						"name": "\"stats.scopes.participants\""
					},
					{
						"type": "literal",
						"name": "\"stats.properties.ticketsCreated\""
					},
					{
						"type": "literal",
						"name": "\"stats.properties.ticketsClosed\""
					},
					{
						"type": "literal",
						"name": "\"stats.properties.ticketsDeleted\""
					},
					{
						"type": "literal",
						"name": "\"stats.properties.ticketsReopened\""
					},
					{
						"type": "literal",
						"name": "\"stats.properties.ticketsAutoclosed\""
					},
					{
						"type": "literal",
						"name": "\"stats.properties.ticketsClaimed\""
					},
					{
						"type": "literal",
						"name": "\"stats.properties.ticketsPinned\""
					},
					{
						"type": "literal",
						"name": "\"stats.properties.ticketsMoved\""
					},
					{
						"type": "literal",
						"name": "\"stats.properties.usersBlacklisted\""
					},
					{
						"type": "literal",
						"name": "\"stats.properties.transcriptsCreated\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODPermissionManager_Default",
		"comment": "## ODPermissionManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODPermissionManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.permissions`!",
		"constant": false,
		"source": "src/core/api/defaults/permission.ts:13:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/defaults/permission.ts:14:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPermissionManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "defaultResult",
				"comment": "The result which is returned when no other permissions match. (`member` by default)",
				"source": "src/core/api/modules/permission.ts:115:4",
				"details": {
					"type": "reference",
					"name": "ODPermissionResult",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODPermission",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODPermission",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPermission",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPermission",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODPermission",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODPermission",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPermission",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getPermissions",
				"comment": "Get an `ODPermissionResult` based on a few context factors. Use `hasPermissions()` to simplify the result.",
				"source": "src/core/api/modules/permission.ts:136:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get an `ODPermissionResult` based on a few context factors. Use `hasPermissions()` to simplify the result.",
					"parameters": [
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						},
						{
							"name": "channel",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Channel",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "guild",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "settings",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODPermissionSettings",
										"target": "interface",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODPermissionResult",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPermission",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "hasPermissions",
				"comment": "Simplifies the `ODPermissionResult` returned from `getPermissions()` and returns a boolean to check if the user matches the required permissions.",
				"source": "src/core/api/modules/permission.ts:146:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Simplifies the `ODPermissionResult` returned from `getPermissions()` and returns a boolean to check if the user matches the required permissions.",
					"parameters": [
						{
							"name": "minimum",
							"details": {
								"type": "reference",
								"name": "ODPermissionType",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODPermissionResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODPermission",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPermission",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPermission",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPermission",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPermission",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setCalculation",
				"comment": "Edit the permission calculation function in this manager.",
				"source": "src/core/api/modules/permission.ts:128:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Edit the permission calculation function in this manager.",
					"parameters": [
						{
							"name": "calculation",
							"details": {
								"type": "reference",
								"name": "ODPermissionCalculationCallback",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "setDefaultResult",
				"comment": "Edit the result which is returned when no other permissions match. (`member` by default)",
				"source": "src/core/api/modules/permission.ts:132:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Edit the result which is returned when no other permissions match. (`member` by default)",
					"parameters": [
						{
							"name": "result",
							"details": {
								"type": "reference",
								"name": "ODPermissionResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODPermissionEmbedType",
		"comment": "## ODPermissionEmbedType `type`\nThis type contains all types available in the `openticket:no-permissions` embed.",
		"constant": false,
		"source": "src/core/api/defaults/permission.ts:22:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"developer\""
					},
					{
						"type": "literal",
						"name": "\"owner\""
					},
					{
						"type": "literal",
						"name": "\"admin\""
					},
					{
						"type": "literal",
						"name": "\"moderator\""
					},
					{
						"type": "literal",
						"name": "\"support\""
					},
					{
						"type": "literal",
						"name": "\"member\""
					},
					{
						"type": "literal",
						"name": "\"discord-administrator\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODPluginClassManager_Default",
		"comment": "## ODPluginClassManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODPluginClassManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.plugins.classes`!",
		"constant": false,
		"source": "src/core/api/defaults/plugin.ts:56:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/plugin.ts:231:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPluginClassManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODManagerData",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODManagerData",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/plugin.ts:71:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODPluginClassManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/plugin.ts:57:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODManagerData",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODManagerData",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODManagerData",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODManagerData",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODManagerData",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODManagerData",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODManagerData",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODManagerData",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODManagerData",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODManagerData",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/plugin.ts:64:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODManagerData",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODPluginManager_Default",
		"comment": "## ODPluginManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODPluginManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.plugins`!",
		"constant": false,
		"source": "src/core/api/defaults/plugin.ts:19:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/plugin.ts:33:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPluginManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "classes",
				"comment": "A manager for all custom managers registered by plugins.",
				"source": "src/core/api/defaults/plugin.ts:20:12",
				"details": {
					"type": "reference",
					"name": "ODPluginClassManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "unknownCrashedPlugins",
				"comment": "A list of basic details from all plugins that crashed while loading the `plugin.json` file.",
				"source": "src/core/api/modules/plugin.ts:31:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODUnknownCrashedPlugin",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODPlugin",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODPlugin",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/plugin.ts:36:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODPluginManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/plugin.ts:22:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPlugin",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPlugin",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODPlugin",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODPlugin",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPlugin",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPlugin",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "isPluginLoaded",
				"comment": "Check if a plugin has been loaded successfully and is available for usage.",
				"source": "src/core/api/modules/plugin.ts:39:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if a plugin has been loaded successfully and is available for usage.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODPlugin",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPlugin",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPlugin",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPlugin",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/plugin.ts:29:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPlugin",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODPluginClassManagerIds_Default",
		"comment": "## ODPluginClassManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODPluginClassManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/plugin.ts:48:17",
		"children": [],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODPluginManagerIds_Default",
		"comment": "## ODPluginManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODPluginManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/plugin.ts:11:17",
		"children": [],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODPostManager_Default",
		"comment": "## ODPostManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODPostManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.code`!",
		"constant": false,
		"source": "src/core/api/defaults/post.ts:23:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/post.ts:20:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPostManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/post.ts:24:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODPost",
								"target": "class",
								"typeArguments": [
									{
										"type": "external",
										"package": "discord.js",
										"name": "GuildBasedChannel",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/post.ts:38:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODPostManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/post.ts:24:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPost",
								"target": "class",
								"typeArguments": [
									{
										"type": "external",
										"package": "discord.js",
										"name": "GuildBasedChannel",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPost",
							"target": "class",
							"typeArguments": [
								{
									"type": "external",
									"package": "discord.js",
									"name": "GuildBasedChannel",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODPost",
											"target": "class",
											"typeArguments": [
												{
													"type": "external",
													"package": "discord.js",
													"name": "GuildBasedChannel",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODPost",
												"target": "class",
												"typeArguments": [
													{
														"type": "external",
														"package": "discord.js",
														"name": "GuildBasedChannel",
														"typeArguments": null
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPost",
							"target": "class",
							"typeArguments": [
								{
									"type": "external",
									"package": "discord.js",
									"name": "GuildBasedChannel",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPost",
							"target": "class",
							"typeArguments": [
								{
									"type": "external",
									"package": "discord.js",
									"name": "GuildBasedChannel",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initialize the post manager & all posts.",
				"source": "src/core/api/modules/post.ts:29:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Initialize the post manager & all posts.",
					"parameters": [
						{
							"name": "guild",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "Guild",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODPost",
											"target": "class",
											"typeArguments": [
												{
													"type": "external",
													"package": "discord.js",
													"name": "GuildBasedChannel",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPost",
										"target": "class",
										"typeArguments": [
											{
												"type": "external",
												"package": "discord.js",
												"name": "GuildBasedChannel",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPost",
										"target": "class",
										"typeArguments": [
											{
												"type": "external",
												"package": "discord.js",
												"name": "GuildBasedChannel",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPost",
										"target": "class",
										"typeArguments": [
											{
												"type": "external",
												"package": "discord.js",
												"name": "GuildBasedChannel",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/post.ts:31:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPost",
								"target": "class",
								"typeArguments": [
									{
										"type": "external",
										"package": "discord.js",
										"name": "GuildBasedChannel",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODPostManagerIds_Default",
		"comment": "## ODPostManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODPostManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/post.ts:12:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:logs",
				"comment": null,
				"source": "src/core/api/defaults/post.ts:13:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODPost",
							"target": "class",
							"typeArguments": [
								{
									"type": "external",
									"package": "discord.js",
									"name": "GuildTextBasedChannel",
									"typeArguments": null
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:transcripts",
				"comment": null,
				"source": "src/core/api/defaults/post.ts:14:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODPost",
							"target": "class",
							"typeArguments": [
								{
									"type": "external",
									"package": "discord.js",
									"name": "GuildTextBasedChannel",
									"typeArguments": null
								}
							]
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODProgressBarManager_Default",
		"comment": "## ODProgressBarManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODProgressBarManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.progressbars`!",
		"constant": false,
		"source": "src/core/api/defaults/progressbar.ts:145:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/progressbar.ts:31:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODProgressBarManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "renderers",
				"comment": null,
				"source": "src/core/api/defaults/progressbar.ts:146:12",
				"details": {
					"type": "reference",
					"name": "ODProgressBarRendererManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODProgressBar",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODProgressBar",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/progressbar.ts:162:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODProgressBarManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/progressbar.ts:148:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODProgressBar",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODProgressBar",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODProgressBar",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODProgressBar",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODProgressBar",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODProgressBar",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODProgressBar",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODProgressBar",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODProgressBar",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODProgressBar",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/progressbar.ts:155:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODProgressBar",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODProgressBarRenderer_Default",
		"comment": "## ODProgressBarRenderer `class`\nThis is an Open Ticket console progress bar renderer.\n\nIt is used to render a progress bar in the console of the bot.\n\nThere are already a lot of default options available if you just want an easy progress bar!",
		"constant": false,
		"source": "src/core/api/defaults/progressbar.ts:54:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/defaults/progressbar.ts:55:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "settings",
							"details": {
								"type": "reference",
								"name": "ODProgressBarRenderer_DefaultSettings",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODProgressBarRenderer_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "settings",
				"comment": null,
				"source": "src/core/api/modules/progressbar.ts:50:4",
				"details": {
					"type": "reference",
					"name": "ODProgressBarRenderer_DefaultSettings",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render a progress bar using this renderer.",
				"source": "src/core/api/modules/progressbar.ts:60:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render a progress bar using this renderer.",
					"parameters": [
						{
							"name": "min",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "max",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "prefix",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						},
						{
							"name": "suffix",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "withAdditionalSettings",
				"comment": null,
				"source": "src/core/api/modules/progressbar.ts:69:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [
						{
							"name": "settings",
							"details": {
								"type": "internal",
								"name": "Partial",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODProgressBarRenderer_DefaultSettings",
										"target": "interface",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODProgressBarRenderer",
						"target": "class",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODProgressBarRenderer_DefaultSettings",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODProgressBarRendererManager_Default",
		"comment": "## ODProgressBarRendererManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODProgressBarRendererManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.progressbars.renderers`!",
		"constant": false,
		"source": "src/core/api/defaults/progressbar.ts:106:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/progressbar.ts:16:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODProgressBarRendererManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODProgressBarRenderer",
										"target": "class",
										"typeArguments": [
											{
												"type": "unknown"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODProgressBarRenderer",
											"target": "class",
											"typeArguments": [
												{
													"type": "unknown"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/progressbar.ts:121:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODProgressBarRendererManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/progressbar.ts:107:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODProgressBarRenderer",
								"target": "class",
								"typeArguments": [
									{
										"type": "unknown"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODProgressBarRenderer",
							"target": "class",
							"typeArguments": [
								{
									"type": "unknown"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODProgressBarRenderer",
											"target": "class",
											"typeArguments": [
												{
													"type": "unknown"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODProgressBarRenderer",
												"target": "class",
												"typeArguments": [
													{
														"type": "unknown"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODProgressBarRenderer",
							"target": "class",
							"typeArguments": [
								{
									"type": "unknown"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODProgressBarRenderer",
							"target": "class",
							"typeArguments": [
								{
									"type": "unknown"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODProgressBarRenderer",
											"target": "class",
											"typeArguments": [
												{
													"type": "unknown"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODProgressBarRenderer",
										"target": "class",
										"typeArguments": [
											{
												"type": "unknown"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODProgressBarRenderer",
										"target": "class",
										"typeArguments": [
											{
												"type": "unknown"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODProgressBarRenderer",
										"target": "class",
										"typeArguments": [
											{
												"type": "unknown"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/progressbar.ts:114:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODProgressBarRenderer",
								"target": "class",
								"typeArguments": [
									{
										"type": "unknown"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODProgressBarManagerIds_Default",
		"comment": "## ODProgressBarManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODProgressBarManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/progressbar.ts:133:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:slash-command-create",
				"comment": null,
				"source": "src/core/api/defaults/progressbar.ts:135:4",
				"details": {
					"type": "reference",
					"name": "ODManualProgressBar",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:slash-command-remove",
				"comment": null,
				"source": "src/core/api/defaults/progressbar.ts:134:4",
				"details": {
					"type": "reference",
					"name": "ODManualProgressBar",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:slash-command-update",
				"comment": null,
				"source": "src/core/api/defaults/progressbar.ts:136:4",
				"details": {
					"type": "reference",
					"name": "ODManualProgressBar",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODProgressBarRenderer_DefaultSettings",
		"comment": "## ODProgressBarRenderer_DefaultSettings `interface`\nThis interface contains the settings for the default progress bar renderer.",
		"constant": false,
		"source": "src/core/api/defaults/progressbar.ts:17:17",
		"children": [
			{
				"type": "property",
				"name": "barWidth",
				"comment": "The width of the bar. (50 characters by default)",
				"source": "src/core/api/defaults/progressbar.ts:44:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "borderColor",
				"comment": "The color of the progress bar border.",
				"source": "src/core/api/defaults/progressbar.ts:19:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "reference",
							"name": "ODValidConsoleColor",
							"target": "type",
							"typeArguments": null
						},
						{
							"type": "literal",
							"name": "\"openticket\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "emptyBarChar",
				"comment": "The character used in the empty side of the progress bar.",
				"source": "src/core/api/defaults/progressbar.ts:38:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "emptyBarColor",
				"comment": "The color of the progress bar (empty side).",
				"source": "src/core/api/defaults/progressbar.ts:23:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "reference",
							"name": "ODValidConsoleColor",
							"target": "type",
							"typeArguments": null
						},
						{
							"type": "literal",
							"name": "\"openticket\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "filledBarChar",
				"comment": "The character used in the filled side of the progress bar.",
				"source": "src/core/api/defaults/progressbar.ts:36:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "filledBarColor",
				"comment": "The color of the progress bar (filled side).",
				"source": "src/core/api/defaults/progressbar.ts:21:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "reference",
							"name": "ODValidConsoleColor",
							"target": "type",
							"typeArguments": null
						},
						{
							"type": "literal",
							"name": "\"openticket\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "labelColor",
				"comment": "The color of the progress bar label.",
				"source": "src/core/api/defaults/progressbar.ts:29:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "reference",
							"name": "ODValidConsoleColor",
							"target": "type",
							"typeArguments": null
						},
						{
							"type": "literal",
							"name": "\"openticket\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "labelPosition",
				"comment": "The position of the label.",
				"source": "src/core/api/defaults/progressbar.ts:42:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"start\""
						},
						{
							"type": "literal",
							"name": "\"end\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "labelType",
				"comment": "The label type. (will show a number related to the progress)",
				"source": "src/core/api/defaults/progressbar.ts:40:4",
				"details": {
					"type": "reference",
					"name": "ODProgressBarRenderer_DefaultSettingsLabel",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "leftBorderChar",
				"comment": "The character used in the left border.",
				"source": "src/core/api/defaults/progressbar.ts:32:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "prefixColor",
				"comment": "The color of the text before the progress bar.",
				"source": "src/core/api/defaults/progressbar.ts:25:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "reference",
							"name": "ODValidConsoleColor",
							"target": "type",
							"typeArguments": null
						},
						{
							"type": "literal",
							"name": "\"openticket\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "rightBorderChar",
				"comment": "The character used in the right border.",
				"source": "src/core/api/defaults/progressbar.ts:34:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "showBar",
				"comment": "Show the bar.",
				"source": "src/core/api/defaults/progressbar.ts:47:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "showBorder",
				"comment": "Show the border.",
				"source": "src/core/api/defaults/progressbar.ts:51:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "showLabel",
				"comment": "Show the label.",
				"source": "src/core/api/defaults/progressbar.ts:49:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "suffixColor",
				"comment": "The color of the text after the progress bar.",
				"source": "src/core/api/defaults/progressbar.ts:27:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "reference",
							"name": "ODValidConsoleColor",
							"target": "type",
							"typeArguments": null
						},
						{
							"type": "literal",
							"name": "\"openticket\""
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODProgressBarRendererManagerIds_Default",
		"comment": "## ODProgressBarRendererManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODProgressBarRendererManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/progressbar.ts:91:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:fraction-renderer",
				"comment": null,
				"source": "src/core/api/defaults/progressbar.ts:93:4",
				"details": {
					"type": "reference",
					"name": "ODProgressBarRenderer_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:percentage-renderer",
				"comment": null,
				"source": "src/core/api/defaults/progressbar.ts:94:4",
				"details": {
					"type": "reference",
					"name": "ODProgressBarRenderer_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:time-min-renderer",
				"comment": null,
				"source": "src/core/api/defaults/progressbar.ts:97:4",
				"details": {
					"type": "reference",
					"name": "ODProgressBarRenderer_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:time-ms-renderer",
				"comment": null,
				"source": "src/core/api/defaults/progressbar.ts:95:4",
				"details": {
					"type": "reference",
					"name": "ODProgressBarRenderer_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:time-sec-renderer",
				"comment": null,
				"source": "src/core/api/defaults/progressbar.ts:96:4",
				"details": {
					"type": "reference",
					"name": "ODProgressBarRenderer_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:value-renderer",
				"comment": null,
				"source": "src/core/api/defaults/progressbar.ts:92:4",
				"details": {
					"type": "reference",
					"name": "ODProgressBarRenderer_Default",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODProgressBarRenderer_DefaultSettingsLabel",
		"comment": "## ODProgressBarRenderer_DefaultSettingsLabel `type`\nAll available label types for the default progress bar renderer",
		"constant": false,
		"source": "src/core/api/defaults/progressbar.ts:12:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"value\""
					},
					{
						"type": "literal",
						"name": "\"percentage\""
					},
					{
						"type": "literal",
						"name": "\"fraction\""
					},
					{
						"type": "literal",
						"name": "\"time-ms\""
					},
					{
						"type": "literal",
						"name": "\"time-sec\""
					},
					{
						"type": "literal",
						"name": "\"time-min\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODButtonResponder_Default",
		"comment": "## ODButtonResponder_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODButtonResponder class.\nIt doesn't add any extra features!\n\nThis default class is made for the default `ODButtonResponder`'s!",
		"constant": false,
		"source": "src/core/api/defaults/responder.ts:152:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:24:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "match",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "internal",
										"name": "RegExp",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButtonResponderInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButtonResponder_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "match",
				"comment": "The `commandName` or `customId` needs to match this string or regex for this responder to be executed.",
				"source": "src/core/api/modules/responder.ts:22:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "string"
						},
						{
							"type": "internal",
							"name": "RegExp",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/defaults/responder.ts:153:12",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODButtonResponderInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "WorkerIds",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "respond",
				"comment": "Respond to this button",
				"source": "src/core/api/modules/responder.ts:640:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Respond to this button",
					"parameters": [
						{
							"name": "instance",
							"details": {
								"type": "reference",
								"name": "ODButtonResponderInstance",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "WorkerIds",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODButtonResponderManager_Default",
		"comment": "## ODButtonResponderManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODButtonResponderManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.responders.buttons`!",
		"constant": false,
		"source": "src/core/api/defaults/responder.ts:123:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:473:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "client",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButtonResponderManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/responder.ts:489:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODButtonResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"button\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/responder.ts:138:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODButtonResponderManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/responder.ts:124:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODButtonResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"button\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODButtonResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"button\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODButtonResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "literal",
													"name": "\"button\""
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODButtonResponder",
												"target": "class",
												"typeArguments": [
													{
														"type": "literal",
														"name": "\"button\""
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODButtonResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"button\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODButtonResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"button\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODButtonResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "literal",
													"name": "\"button\""
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButtonResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"button\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButtonResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"button\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButtonResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"button\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/responder.ts:131:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODButtonResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"button\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setTimeoutErrorCallback",
				"comment": "Set the message to send when the response times out!",
				"source": "src/core/api/modules/responder.ts:484:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the message to send when the response times out!",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODResponderTimeoutErrorCallback",
										"target": "type",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODButtonResponderInstance",
												"target": "class",
												"typeArguments": null
											},
											{
												"type": "literal",
												"name": "\"button\""
											}
										]
									}
								]
							}
						},
						{
							"name": "ms",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCommandResponder_Default",
		"comment": "## ODCommandResponder_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODCommandResponder class.\nIt doesn't add any extra features!\n\nThis default class is made for the default `ODCommandResponder`'s!",
		"constant": false,
		"source": "src/core/api/defaults/responder.ts:85:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:438:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "prefix",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "match",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "internal",
										"name": "RegExp",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCommandResponderInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCommandResponder_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "match",
				"comment": "The `commandName` or `customId` needs to match this string or regex for this responder to be executed.",
				"source": "src/core/api/modules/responder.ts:22:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "string"
						},
						{
							"type": "internal",
							"name": "RegExp",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "prefix",
				"comment": "The prefix of the text command needs to match this",
				"source": "src/core/api/modules/responder.ts:436:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/defaults/responder.ts:86:12",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODCommandResponderInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "WorkerIds",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "respond",
				"comment": "Respond to this command",
				"source": "src/core/api/modules/responder.ts:444:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Respond to this command",
					"parameters": [
						{
							"name": "instance",
							"details": {
								"type": "reference",
								"name": "ODCommandResponderInstance",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"slash\""
						},
						{
							"type": "literal",
							"name": "\"text\""
						}
					]
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "WorkerIds",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODCommandResponderManager_Default",
		"comment": "## ODCommandResponderManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODCommandResponderManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.responders.commands`!",
		"constant": false,
		"source": "src/core/api/defaults/responder.ts:56:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:95:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "client",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCommandResponderManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/responder.ts:106:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODCommandResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "\"text\""
											},
											{
												"type": "literal",
												"name": "\"slash\""
											}
										]
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/responder.ts:71:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODCommandResponderManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/responder.ts:57:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCommandResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "\"text\""
											},
											{
												"type": "literal",
												"name": "\"slash\""
											}
										]
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCommandResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "union",
									"children": [
										{
											"type": "literal",
											"name": "\"text\""
										},
										{
											"type": "literal",
											"name": "\"slash\""
										}
									]
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODCommandResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "union",
													"children": [
														{
															"type": "literal",
															"name": "\"text\""
														},
														{
															"type": "literal",
															"name": "\"slash\""
														}
													]
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODCommandResponder",
												"target": "class",
												"typeArguments": [
													{
														"type": "union",
														"children": [
															{
																"type": "literal",
																"name": "\"text\""
															},
															{
																"type": "literal",
																"name": "\"slash\""
															}
														]
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCommandResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "union",
									"children": [
										{
											"type": "literal",
											"name": "\"text\""
										},
										{
											"type": "literal",
											"name": "\"slash\""
										}
									]
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCommandResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "union",
									"children": [
										{
											"type": "literal",
											"name": "\"text\""
										},
										{
											"type": "literal",
											"name": "\"slash\""
										}
									]
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODCommandResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "union",
													"children": [
														{
															"type": "literal",
															"name": "\"text\""
														},
														{
															"type": "literal",
															"name": "\"slash\""
														}
													]
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCommandResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "union",
												"children": [
													{
														"type": "literal",
														"name": "\"text\""
													},
													{
														"type": "literal",
														"name": "\"slash\""
													}
												]
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCommandResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "union",
												"children": [
													{
														"type": "literal",
														"name": "\"text\""
													},
													{
														"type": "literal",
														"name": "\"slash\""
													}
												]
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCommandResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "union",
												"children": [
													{
														"type": "literal",
														"name": "\"text\""
													},
													{
														"type": "literal",
														"name": "\"slash\""
													}
												]
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/responder.ts:64:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCommandResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "\"text\""
											},
											{
												"type": "literal",
												"name": "\"slash\""
											}
										]
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setTimeoutErrorCallback",
				"comment": "Set the message to send when the response times out!",
				"source": "src/core/api/modules/responder.ts:101:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the message to send when the response times out!",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODResponderTimeoutErrorCallback",
										"target": "type",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODCommandResponderInstance",
												"target": "class",
												"typeArguments": null
											},
											{
												"type": "union",
												"children": [
													{
														"type": "literal",
														"name": "\"text\""
													},
													{
														"type": "literal",
														"name": "\"slash\""
													}
												]
											}
										]
									}
								]
							}
						},
						{
							"name": "ms",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODDropdownResponder_Default",
		"comment": "## ODDropdownResponder_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODDropdownResponder class.\nIt doesn't add any extra features!\n\nThis default class is made for the default `ODDropdownResponder`'s!",
		"constant": false,
		"source": "src/core/api/defaults/responder.ts:199:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:24:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "match",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "internal",
										"name": "RegExp",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdownResponderInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownResponder_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "match",
				"comment": "The `commandName` or `customId` needs to match this string or regex for this responder to be executed.",
				"source": "src/core/api/modules/responder.ts:22:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "string"
						},
						{
							"type": "internal",
							"name": "RegExp",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/defaults/responder.ts:200:12",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODDropdownResponderInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "WorkerIds",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "respond",
				"comment": "Respond to this dropdown",
				"source": "src/core/api/modules/responder.ts:927:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Respond to this dropdown",
					"parameters": [
						{
							"name": "instance",
							"details": {
								"type": "reference",
								"name": "ODDropdownResponderInstance",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "WorkerIds",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODDropdownResponderManager_Default",
		"comment": "## ODDropdownResponderManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODDropdownResponderManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.responders.dropdowns`!",
		"constant": false,
		"source": "src/core/api/defaults/responder.ts:170:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:669:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "client",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownResponderManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/responder.ts:685:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODDropdownResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"dropdown\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/responder.ts:185:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODDropdownResponderManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/responder.ts:171:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODDropdownResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"dropdown\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDropdownResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"dropdown\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODDropdownResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "literal",
													"name": "\"dropdown\""
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODDropdownResponder",
												"target": "class",
												"typeArguments": [
													{
														"type": "literal",
														"name": "\"dropdown\""
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDropdownResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"dropdown\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDropdownResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"dropdown\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODDropdownResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "literal",
													"name": "\"dropdown\""
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdownResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"dropdown\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdownResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"dropdown\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdownResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"dropdown\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/responder.ts:178:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODDropdownResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"dropdown\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setTimeoutErrorCallback",
				"comment": "Set the message to send when the response times out!",
				"source": "src/core/api/modules/responder.ts:680:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the message to send when the response times out!",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODResponderTimeoutErrorCallback",
										"target": "type",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODDropdownResponderInstance",
												"target": "class",
												"typeArguments": null
											},
											{
												"type": "literal",
												"name": "\"dropdown\""
											}
										]
									}
								]
							}
						},
						{
							"name": "ms",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODModalResponder_Default",
		"comment": "## ODModalResponder_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODModalResponder class.\nIt doesn't add any extra features!\n\nThis default class is made for the default `ODModalResponder`'s!",
		"constant": false,
		"source": "src/core/api/defaults/responder.ts:253:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:24:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "match",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "internal",
										"name": "RegExp",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModalResponderInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModalResponder_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "match",
				"comment": "The `commandName` or `customId` needs to match this string or regex for this responder to be executed.",
				"source": "src/core/api/modules/responder.ts:22:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "string"
						},
						{
							"type": "internal",
							"name": "RegExp",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/defaults/responder.ts:254:12",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODModalResponderInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "WorkerIds",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "respond",
				"comment": "Respond to this modal",
				"source": "src/core/api/modules/responder.ts:1110:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Respond to this modal",
					"parameters": [
						{
							"name": "instance",
							"details": {
								"type": "reference",
								"name": "ODModalResponderInstance",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "WorkerIds",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODModalResponderManager_Default",
		"comment": "## ODModalResponderManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODModalResponderManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.responders.dropdowns`!",
		"constant": false,
		"source": "src/core/api/defaults/responder.ts:224:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:956:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "client",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModalResponderManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/responder.ts:972:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODModalResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"modal\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/responder.ts:239:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODModalResponderManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/responder.ts:225:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODModalResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"modal\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODModalResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"modal\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODModalResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "literal",
													"name": "\"modal\""
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODModalResponder",
												"target": "class",
												"typeArguments": [
													{
														"type": "literal",
														"name": "\"modal\""
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODModalResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"modal\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODModalResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"modal\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODModalResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "literal",
													"name": "\"modal\""
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModalResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"modal\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModalResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"modal\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModalResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"modal\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/responder.ts:232:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODModalResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"modal\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setTimeoutErrorCallback",
				"comment": "Set the message to send when the response times out!",
				"source": "src/core/api/modules/responder.ts:967:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the message to send when the response times out!",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODResponderTimeoutErrorCallback",
										"target": "type",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODModalResponderInstance",
												"target": "class",
												"typeArguments": null
											},
											{
												"type": "literal",
												"name": "\"modal\""
											}
										]
									}
								]
							}
						},
						{
							"name": "ms",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODResponderManager_Default",
		"comment": "## ODResponderManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODResponderManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.responders`!",
		"constant": false,
		"source": "src/core/api/defaults/responder.ts:14:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:65:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "client",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODResponderManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "buttons",
				"comment": "A manager for all button responders.",
				"source": "src/core/api/defaults/responder.ts:16:12",
				"details": {
					"type": "reference",
					"name": "ODButtonResponderManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "commands",
				"comment": "A manager for all (text & slash) command responders.",
				"source": "src/core/api/defaults/responder.ts:15:12",
				"details": {
					"type": "reference",
					"name": "ODCommandResponderManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "dropdowns",
				"comment": "A manager for all dropdown/select menu responders.",
				"source": "src/core/api/defaults/responder.ts:17:12",
				"details": {
					"type": "reference",
					"name": "ODDropdownResponderManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "modals",
				"comment": "A manager for all modal responders.",
				"source": "src/core/api/defaults/responder.ts:18:12",
				"details": {
					"type": "reference",
					"name": "ODModalResponderManager_Default",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODButtonResponderManagerIds_Default",
		"comment": "## ODButtonResponderManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODButtonResponderManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/responder.ts:93:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:claim-ticket",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:104:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:clear-continue",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:114:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:close-ticket",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:108:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:delete-ticket",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:110:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:help-menu-next",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:99:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:help-menu-previous",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:98:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:help-menu-switch",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:97:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:pin-ticket",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:106:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:reopen-ticket",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:109:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:role-option",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:102:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-option",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:101:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:transcript-error-continue",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:113:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:transcript-error-retry",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:112:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unclaim-ticket",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:105:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unpin-ticket",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:107:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:verifybar-failure",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:95:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:verifybar-success",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:94:4",
				"details": {
					"type": "unknown"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCommandResponderManagerIds_Default",
		"comment": "## ODCommandResponderManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODCommandResponderManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/responder.ts:25:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:add",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:42:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:46:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:47:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:blacklist",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:30:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:claim",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:35:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:clear",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:44:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:close",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:32:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:delete",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:34:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:help",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:26:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:move",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:41:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:panel",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:28:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:pin",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:37:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:remove",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:43:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:rename",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:40:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:reopen",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:33:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:stats",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:27:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:29:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unclaim",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:36:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unpin",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:38:4",
				"details": {
					"type": "unknown"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODDropdownResponderManagerIds_Default",
		"comment": "## ODDropdownResponderManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODDropdownResponderManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/responder.ts:160:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:panel-dropdown-tickets",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:161:4",
				"details": {
					"type": "unknown"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODModalResponderManagerIds_Default",
		"comment": "## ODModalResponderManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODModalResponderManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/responder.ts:207:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:claim-ticket-reason",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:212:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:close-ticket-reason",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:209:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:delete-ticket-reason",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:211:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:pin-ticket-reason",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:214:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:reopen-ticket-reason",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:210:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-questions",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:208:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unclaim-ticket-reason",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:213:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unpin-ticket-reason",
				"comment": null,
				"source": "src/core/api/defaults/responder.ts:215:4",
				"details": {
					"type": "unknown"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODSessionManager_Default",
		"comment": "## ODSessionManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODSessionManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.sessions`!",
		"constant": false,
		"source": "src/core/api/defaults/session.ts:21:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/session.ts:17:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODSessionManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODSession",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODSession",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/session.ts:36:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "never"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/session.ts:22:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODSession",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSession",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODSession",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODSession",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSession",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSession",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODSession",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODSession",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODSession",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODSession",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/session.ts:29:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODSession",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODSessionManagerIds_Default",
		"comment": "## ODSessionManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODSessionManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/session.ts:11:17",
		"children": [],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStartScreenManager_Default",
		"comment": "## ODStartScreenManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODStartScreenManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.startscreen`!",
		"constant": false,
		"source": "src/core/api/defaults/startscreen.ts:27:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/startscreen.ts:27:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "livestatus",
							"details": {
								"type": "reference",
								"name": "ODLiveStatusManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStartScreenManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "livestatus",
				"comment": "Alias to the livestatus manager.",
				"source": "src/core/api/modules/startscreen.ts:25:4",
				"details": {
					"type": "reference",
					"name": "ODLiveStatusManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODStartScreenComponent",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODStartScreenComponent",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/startscreen.ts:42:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODStartScreenManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/startscreen.ts:28:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStartScreenComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStartScreenComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODStartScreenComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODStartScreenComponent",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStartScreenComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStartScreenComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSortedComponents",
				"comment": "Get all components in sorted order.",
				"source": "src/core/api/modules/startscreen.ts:34:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all components in sorted order.",
					"parameters": [
						{
							"name": "priority",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"ascending\""
									},
									{
										"type": "literal",
										"name": "\"descending\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStartScreenComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODStartScreenComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStartScreenComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStartScreenComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStartScreenComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/startscreen.ts:35:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStartScreenComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "renderAllComponents",
				"comment": "Render all startscreen components in priority order.",
				"source": "src/core/api/modules/startscreen.ts:41:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render all startscreen components in priority order.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODStartScreenManagerIds_Default",
		"comment": "## ODStartScreenManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODStartScreenManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/startscreen.ts:11:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:flags",
				"comment": null,
				"source": "src/core/api/defaults/startscreen.ts:14:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenFlagsCategoryComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:header",
				"comment": null,
				"source": "src/core/api/defaults/startscreen.ts:13:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenHeaderComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:livestatus",
				"comment": null,
				"source": "src/core/api/defaults/startscreen.ts:17:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenLiveStatusCategoryComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:logo",
				"comment": null,
				"source": "src/core/api/defaults/startscreen.ts:12:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenLogoComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:logs",
				"comment": null,
				"source": "src/core/api/defaults/startscreen.ts:18:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenCategoryComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:plugins",
				"comment": null,
				"source": "src/core/api/defaults/startscreen.ts:15:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenPluginsCategoryComponent",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:stats",
				"comment": null,
				"source": "src/core/api/defaults/startscreen.ts:16:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenPropertiesCategoryComponent",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStatGlobalScope_DefaultGlobal",
		"comment": "## ODStatGlobalScope_DefaultGlobal `default_class`\nThis is a special class that adds type definitions & typescript to the ODStatsManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the `openticket:global` category in `openticket.stats`!",
		"constant": false,
		"source": "src/core/api/defaults/stat.ts:73:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/stat.ts:117:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStatGlobalScope_DefaultGlobal",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "database",
				"comment": "Alias to Open Ticket stats database.",
				"source": "src/core/api/modules/stat.ts:113:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODDatabase",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this statistics scope.",
				"source": "src/core/api/modules/stat.ts:109:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this scope (used in embed title)",
				"source": "src/core/api/modules/stat.ts:115:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": "Is this stat scope already initialized?",
				"source": "src/core/api/modules/stat.ts:111:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/stat.ts:88:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODStatGlobalScopeIds_DefaultGlobal",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/stat.ts:74:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStat",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODStat",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getStat",
				"comment": "Get the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/defaults/stat.ts:95:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODValidStatValue",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initialize this stat scope & return a list of all statistic ids in the following format: `<scopeid>_<statid>`",
				"source": "src/core/api/modules/stat.ts:170:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Initialize this stat scope & return a list of all statistic ids in the following format: `<scopeid>_<statid>`",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "primitive",
							"name": "string"
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/stat.ts:81:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStat",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render all stats in this scope for usage in a discord message/embed.",
				"source": "src/core/api/modules/stat.ts:222:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render all stats in this scope for usage in a discord message/embed.",
					"parameters": [
						{
							"name": "scopeId",
							"details": {
								"type": "literal",
								"name": "\"GLOBAL\""
							}
						},
						{
							"name": "guild",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "Guild",
								"typeArguments": null
							}
						},
						{
							"name": "channel",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "TextBasedChannel",
								"typeArguments": null
							}
						},
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "resetStat",
				"comment": "Reset the value of a statistic to the initial value. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/defaults/stat.ts:109:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Reset the value of a statistic to the initial value. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODValidStatValue",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setStat",
				"comment": "Set, increase or decrease the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/defaults/stat.ts:102:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set, increase or decrease the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidStatValue",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "reference",
								"name": "ODStatScopeSetMode",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDatabase",
				"comment": "Select the database to use to read/write all stats from/to. (Automatically assigned when used in `ODStatsManager`)",
				"source": "src/core/api/modules/stat.ts:124:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Select the database to use to read/write all stats from/to. (Automatically assigned when used in `ODStatsManager`)",
					"parameters": [
						{
							"name": "database",
							"details": {
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStatGlobalScope_DefaultSystem",
		"comment": "## ODStatGlobalScope_DefaultSystem `default_class`\nThis is a special class that adds type definitions & typescript to the ODStatsManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the `openticket:system` category in `openticket.stats`!",
		"constant": false,
		"source": "src/core/api/defaults/stat.ts:132:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/stat.ts:117:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStatGlobalScope_DefaultSystem",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "database",
				"comment": "Alias to Open Ticket stats database.",
				"source": "src/core/api/modules/stat.ts:113:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODDatabase",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this statistics scope.",
				"source": "src/core/api/modules/stat.ts:109:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this scope (used in embed title)",
				"source": "src/core/api/modules/stat.ts:115:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": "Is this stat scope already initialized?",
				"source": "src/core/api/modules/stat.ts:111:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/stat.ts:147:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODStatGlobalScopeIds_DefaultSystem",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/stat.ts:133:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStat",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODStat",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getStat",
				"comment": "Get the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/defaults/stat.ts:154:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODValidStatValue",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initialize this stat scope & return a list of all statistic ids in the following format: `<scopeid>_<statid>`",
				"source": "src/core/api/modules/stat.ts:170:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Initialize this stat scope & return a list of all statistic ids in the following format: `<scopeid>_<statid>`",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "primitive",
							"name": "string"
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/stat.ts:140:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStat",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render all stats in this scope for usage in a discord message/embed.",
				"source": "src/core/api/modules/stat.ts:222:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render all stats in this scope for usage in a discord message/embed.",
					"parameters": [
						{
							"name": "scopeId",
							"details": {
								"type": "literal",
								"name": "\"GLOBAL\""
							}
						},
						{
							"name": "guild",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "Guild",
								"typeArguments": null
							}
						},
						{
							"name": "channel",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "TextBasedChannel",
								"typeArguments": null
							}
						},
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "resetStat",
				"comment": "Reset the value of a statistic to the initial value. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/defaults/stat.ts:168:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Reset the value of a statistic to the initial value. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODValidStatValue",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setStat",
				"comment": "Set, increase or decrease the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/defaults/stat.ts:161:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set, increase or decrease the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidStatValue",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "reference",
								"name": "ODStatScopeSetMode",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDatabase",
				"comment": "Select the database to use to read/write all stats from/to. (Automatically assigned when used in `ODStatsManager`)",
				"source": "src/core/api/modules/stat.ts:124:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Select the database to use to read/write all stats from/to. (Automatically assigned when used in `ODStatsManager`)",
					"parameters": [
						{
							"name": "database",
							"details": {
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStatScope_DefaultParticipants",
		"comment": "## ODStatScope_DefaultParticipants `default_class`\nThis is a special class that adds type definitions & typescript to the ODStatsManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the `openticket:participants` category in `openticket.stats`!",
		"constant": false,
		"source": "src/core/api/defaults/stat.ts:321:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/stat.ts:117:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStatScope_DefaultParticipants",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "database",
				"comment": "Alias to Open Ticket stats database.",
				"source": "src/core/api/modules/stat.ts:113:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODDatabase",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this statistics scope.",
				"source": "src/core/api/modules/stat.ts:109:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this scope (used in embed title)",
				"source": "src/core/api/modules/stat.ts:115:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": "Is this stat scope already initialized?",
				"source": "src/core/api/modules/stat.ts:111:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/stat.ts:336:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "literal",
								"name": "\"openticket:participants\""
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/stat.ts:322:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStat",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODStat",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getStat",
				"comment": "Get the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/defaults/stat.ts:343:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODValidStatValue",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initialize this stat scope & return a list of all statistic ids in the following format: `<scopeid>_<statid>`",
				"source": "src/core/api/modules/stat.ts:170:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Initialize this stat scope & return a list of all statistic ids in the following format: `<scopeid>_<statid>`",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "primitive",
							"name": "string"
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/stat.ts:329:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStat",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render all stats in this scope for usage in a discord message/embed.",
				"source": "src/core/api/modules/stat.ts:176:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render all stats in this scope for usage in a discord message/embed.",
					"parameters": [
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "guild",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "Guild",
								"typeArguments": null
							}
						},
						{
							"name": "channel",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "TextBasedChannel",
								"typeArguments": null
							}
						},
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "resetStat",
				"comment": "Reset the value of a statistic to the initial value. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/defaults/stat.ts:357:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Reset the value of a statistic to the initial value. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODValidStatValue",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setStat",
				"comment": "Set, increase or decrease the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/defaults/stat.ts:350:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set, increase or decrease the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidStatValue",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "reference",
								"name": "ODStatScopeSetMode",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDatabase",
				"comment": "Select the database to use to read/write all stats from/to. (Automatically assigned when used in `ODStatsManager`)",
				"source": "src/core/api/modules/stat.ts:124:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Select the database to use to read/write all stats from/to. (Automatically assigned when used in `ODStatsManager`)",
					"parameters": [
						{
							"name": "database",
							"details": {
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStatScope_DefaultTicket",
		"comment": "## ODStatScope_DefaultTicket `default_class`\nThis is a special class that adds type definitions & typescript to the ODStatsManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the `openticket:ticket` category in `openticket.stats`!",
		"constant": false,
		"source": "src/core/api/defaults/stat.ts:263:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/stat.ts:117:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStatScope_DefaultTicket",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "database",
				"comment": "Alias to Open Ticket stats database.",
				"source": "src/core/api/modules/stat.ts:113:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODDatabase",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this statistics scope.",
				"source": "src/core/api/modules/stat.ts:109:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this scope (used in embed title)",
				"source": "src/core/api/modules/stat.ts:115:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": "Is this stat scope already initialized?",
				"source": "src/core/api/modules/stat.ts:111:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/stat.ts:278:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODStatScopeIds_DefaultTicket",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/stat.ts:264:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStat",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODStat",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getStat",
				"comment": "Get the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/defaults/stat.ts:285:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODValidStatValue",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initialize this stat scope & return a list of all statistic ids in the following format: `<scopeid>_<statid>`",
				"source": "src/core/api/modules/stat.ts:170:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Initialize this stat scope & return a list of all statistic ids in the following format: `<scopeid>_<statid>`",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "primitive",
							"name": "string"
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/stat.ts:271:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStat",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render all stats in this scope for usage in a discord message/embed.",
				"source": "src/core/api/modules/stat.ts:176:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render all stats in this scope for usage in a discord message/embed.",
					"parameters": [
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "guild",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "Guild",
								"typeArguments": null
							}
						},
						{
							"name": "channel",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "TextBasedChannel",
								"typeArguments": null
							}
						},
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "resetStat",
				"comment": "Reset the value of a statistic to the initial value. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/defaults/stat.ts:299:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Reset the value of a statistic to the initial value. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODValidStatValue",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setStat",
				"comment": "Set, increase or decrease the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/defaults/stat.ts:292:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set, increase or decrease the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidStatValue",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "reference",
								"name": "ODStatScopeSetMode",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDatabase",
				"comment": "Select the database to use to read/write all stats from/to. (Automatically assigned when used in `ODStatsManager`)",
				"source": "src/core/api/modules/stat.ts:124:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Select the database to use to read/write all stats from/to. (Automatically assigned when used in `ODStatsManager`)",
					"parameters": [
						{
							"name": "database",
							"details": {
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStatScope_DefaultUser",
		"comment": "## ODStatScope_DefaultUser `default_class`\nThis is a special class that adds type definitions & typescript to the ODStatsManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the `openticket:user` category in `openticket.stats`!",
		"constant": false,
		"source": "src/core/api/defaults/stat.ts:200:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/stat.ts:117:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStatScope_DefaultUser",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "database",
				"comment": "Alias to Open Ticket stats database.",
				"source": "src/core/api/modules/stat.ts:113:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODDatabase",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this statistics scope.",
				"source": "src/core/api/modules/stat.ts:109:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this scope (used in embed title)",
				"source": "src/core/api/modules/stat.ts:115:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": "Is this stat scope already initialized?",
				"source": "src/core/api/modules/stat.ts:111:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/stat.ts:215:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODStatScopeIds_DefaultUser",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/stat.ts:201:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStat",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODStat",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getStat",
				"comment": "Get the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/defaults/stat.ts:222:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODValidStatValue",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initialize this stat scope & return a list of all statistic ids in the following format: `<scopeid>_<statid>`",
				"source": "src/core/api/modules/stat.ts:170:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Initialize this stat scope & return a list of all statistic ids in the following format: `<scopeid>_<statid>`",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "primitive",
							"name": "string"
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/stat.ts:208:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStat",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render all stats in this scope for usage in a discord message/embed.",
				"source": "src/core/api/modules/stat.ts:176:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render all stats in this scope for usage in a discord message/embed.",
					"parameters": [
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "guild",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "Guild",
								"typeArguments": null
							}
						},
						{
							"name": "channel",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "TextBasedChannel",
								"typeArguments": null
							}
						},
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "resetStat",
				"comment": "Reset the value of a statistic to the initial value. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/defaults/stat.ts:236:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Reset the value of a statistic to the initial value. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODValidStatValue",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setStat",
				"comment": "Set, increase or decrease the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/defaults/stat.ts:229:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set, increase or decrease the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidStatValue",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "reference",
								"name": "ODStatScopeSetMode",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDatabase",
				"comment": "Select the database to use to read/write all stats from/to. (Automatically assigned when used in `ODStatsManager`)",
				"source": "src/core/api/modules/stat.ts:124:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Select the database to use to read/write all stats from/to. (Automatically assigned when used in `ODStatsManager`)",
					"parameters": [
						{
							"name": "database",
							"details": {
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStatsManager_Default",
		"comment": "## ODStatsManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODStatsManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.stats`!",
		"constant": false,
		"source": "src/core/api/defaults/stat.ts:26:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/stat.ts:42:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStatsManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "database",
				"comment": "Alias to Open Ticket stats database.",
				"source": "src/core/api/modules/stat.ts:38:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODDatabase",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/stat.ts:51:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODStatScope",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/stat.ts:41:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODStatsManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/stat.ts:27:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStatScope",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStatScope",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODStatScope",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODStatScope",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStatScope",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStatScope",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init all stats and run `onInit()` listeners.",
				"source": "src/core/api/modules/stat.ts:57:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Init all stats and run `onInit()` listeners.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODStatScope",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStatScope",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStatScope",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onInit",
				"comment": "Run a function when the stats are initialized. This can be used to clear stats from users that left the server or tickets which don't exist anymore.",
				"source": "src/core/api/modules/stat.ts:94:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run a function when the stats are initialized. This can be used to clear stats from users that left the server or tickets which don't exist anymore.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODStatsManagerInitCallback",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStatScope",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/stat.ts:34:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStatScope",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "reset",
				"comment": "Reset all stats. (clears the entire database)",
				"source": "src/core/api/modules/stat.ts:85:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reset all stats. (clears the entire database)",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDatabase",
				"comment": "Select the database to use to read/write all stats from/to.",
				"source": "src/core/api/modules/stat.ts:48:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Select the database to use to read/write all stats from/to.",
					"parameters": [
						{
							"name": "database",
							"details": {
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODStatGlobalScopeIds_DefaultGlobal",
		"comment": "## ODStatGlobalScopeIds_DefaultGlobal `type`\nThis interface is a list of ids available in the `ODStatGlobalScope_DefaultGlobal` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/stat.ts:53:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:tickets-autoclosed",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:58:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets-autodeleted",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:59:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets-claimed",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:60:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets-closed",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:55:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets-created",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:54:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets-deleted",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:56:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets-moved",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:62:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets-pinned",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:61:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets-reopened",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:57:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:transcripts-created",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:64:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:users-blacklisted",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:63:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODStatGlobalScopeIds_DefaultSystem",
		"comment": "## ODStatGlobalScopeIds_DefaultSystem `type`\nThis interface is a list of ids available in the `ODStatScope_DefaultSystem` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/stat.ts:121:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:startup-date",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:122:4",
				"details": {
					"type": "reference",
					"name": "ODDynamicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:version",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:123:4",
				"details": {
					"type": "reference",
					"name": "ODDynamicStat",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODStatScopeIds_DefaultParticipants",
		"comment": "## ODStatScopeIds_DefaultParticipants `type`\nThis interface is a list of ids available in the `ODStatScope_DefaultParticipants` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/stat.ts:311:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:participants",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:312:4",
				"details": {
					"type": "reference",
					"name": "ODDynamicStat",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODStatScopeIds_DefaultTicket",
		"comment": "## ODStatScopeIds_DefaultTicket `type`\nThis interface is a list of ids available in the `ODStatScope_DefaultTicket` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/stat.ts:248:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:claimed",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:251:4",
				"details": {
					"type": "reference",
					"name": "ODDynamicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:creation-date",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:253:4",
				"details": {
					"type": "reference",
					"name": "ODDynamicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:creator",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:254:4",
				"details": {
					"type": "reference",
					"name": "ODDynamicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:name",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:249:4",
				"details": {
					"type": "reference",
					"name": "ODDynamicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:pinned",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:252:4",
				"details": {
					"type": "reference",
					"name": "ODDynamicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:status",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:250:4",
				"details": {
					"type": "reference",
					"name": "ODDynamicStat",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODStatScopeIds_DefaultUser",
		"comment": "## ODStatScopeIds_DefaultUser `type`\nThis interface is a list of ids available in the `ODStatScope_DefaultUser` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/stat.ts:180:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:name",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:181:4",
				"details": {
					"type": "reference",
					"name": "ODDynamicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:role",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:182:4",
				"details": {
					"type": "reference",
					"name": "ODDynamicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets-claimed",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:187:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets-closed",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:184:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets-created",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:183:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets-deleted",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:185:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets-moved",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:189:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets-pinned",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:188:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:tickets-reopened",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:186:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:transcripts-created",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:191:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:users-blacklisted",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:190:4",
				"details": {
					"type": "reference",
					"name": "ODBasicStat",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODStatsManagerIds_Default",
		"comment": "## ODStatsManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODStatsManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/stat.ts:12:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:global",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:13:4",
				"details": {
					"type": "reference",
					"name": "ODStatGlobalScope_DefaultGlobal",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:participants",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:17:4",
				"details": {
					"type": "reference",
					"name": "ODStatScope_DefaultParticipants",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:system",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:14:4",
				"details": {
					"type": "reference",
					"name": "ODStatGlobalScope_DefaultSystem",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:16:4",
				"details": {
					"type": "reference",
					"name": "ODStatScope_DefaultTicket",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "openticket:user",
				"comment": null,
				"source": "src/core/api/defaults/stat.ts:15:4",
				"details": {
					"type": "reference",
					"name": "ODStatScope_DefaultUser",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODVerifyBar_Default",
		"comment": "## ODVerifyBar_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODVerifyBar class.\nIt doesn't add any extra features!\n\nThis default class is made for the default `ODVerifyBar`'s!",
		"constant": false,
		"source": "src/core/api/defaults/verifybar.ts:69:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/verifybar.ts:28:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "message",
							"details": {
								"type": "reference",
								"name": "ODMessage",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"verifybar\""
									},
									{
										"type": "unknown"
									}
								]
							}
						},
						{
							"name": "enabled",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODVerifyBar_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "SuccessWorkerIds",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "FailureWorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "enabled",
				"comment": "When disabled, it will skip the verifybar and instantly fire the `success` workers.",
				"source": "src/core/api/modules/verifybar.ts:26:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "failure",
				"comment": "All workers that will run when the verifybar is stopped.",
				"source": "src/core/api/defaults/verifybar.ts:71:12",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODButtonResponderInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "literal",
							"name": "\"verifybar\""
						},
						{
							"type": "unknown"
						},
						{
							"type": "typeParam",
							"name": "FailureWorkerIds",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": "The message that will be built wen activating this verifybar.",
				"source": "src/core/api/modules/verifybar.ts:24:4",
				"details": {
					"type": "reference",
					"name": "ODMessage",
					"target": "class",
					"typeArguments": [
						{
							"type": "literal",
							"name": "\"verifybar\""
						},
						{
							"type": "unknown"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "success",
				"comment": "All workers that will run when the verifybar is accepted.",
				"source": "src/core/api/defaults/verifybar.ts:70:12",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager_Default",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODButtonResponderInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "literal",
							"name": "\"verifybar\""
						},
						{
							"type": "unknown"
						},
						{
							"type": "typeParam",
							"name": "SuccessWorkerIds",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "activate",
				"comment": "Build the message and reply to a button with this verifybar.",
				"source": "src/core/api/modules/verifybar.ts:37:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Build the message and reply to a button with this verifybar.",
					"parameters": [
						{
							"name": "responder",
							"details": {
								"type": "reference",
								"name": "ODButtonResponderInstance",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "SuccessWorkerIds",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "FailureWorkerIds",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODVerifyBarManager_Default",
		"comment": "## ODVerifyBarManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODVerifyBarManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.verifybars`!",
		"constant": false,
		"source": "src/core/api/defaults/verifybar.ts:40:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/verifybar.ts:58:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODVerifyBarManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODVerifyBar",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODVerifyBar",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/verifybar.ts:55:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODVerifyBarManagerIds_Default",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/verifybar.ts:41:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODVerifyBar",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODVerifyBar",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODVerifyBar",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODVerifyBar",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODVerifyBar",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODVerifyBar",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODVerifyBar",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODVerifyBar",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODVerifyBar",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODVerifyBar",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/verifybar.ts:48:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODVerifyBar",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODVerifyBarManagerIds_Default",
		"comment": "## ODVerifyBarManagerIds_Default `interface`\nThis interface is a list of ids available in the `ODVerifyBarManager_Default` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/defaults/verifybar.ts:14:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:claim-ticket-ticket-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:15:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:claim-ticket-unclaim-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:16:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:close-ticket-reopen-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:24:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:close-ticket-ticket-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:23:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:delete-ticket-autoclose-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:31:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:delete-ticket-close-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:29:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:delete-ticket-reopen-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:30:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:delete-ticket-ticket-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:28:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:pin-ticket-ticket-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:19:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:pin-ticket-unpin-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:20:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:reopen-ticket-autoclose-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:27:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:reopen-ticket-close-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:26:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:reopen-ticket-ticket-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:25:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unclaim-ticket-claim-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:18:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unclaim-ticket-ticket-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:17:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unpin-ticket-pin-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:22:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "openticket:unpin-ticket-ticket-message",
				"comment": null,
				"source": "src/core/api/defaults/verifybar.ts:21:4",
				"details": {
					"type": "unknown"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODWorkerManager_Default",
		"comment": "## ODWorkerManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODWorkerManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the worker manager in actions, builders & responders!",
		"constant": false,
		"source": "src/core/api/defaults/worker.ts:14:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/worker.ts:47:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "priorityOrder",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"ascending\""
									},
									{
										"type": "literal",
										"name": "\"descending\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODWorkerManager_Default",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Instance",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "backupWorker",
				"comment": "The backup worker will be executed when one of the workers fails or cancels execution.",
				"source": "src/core/api/modules/worker.ts:45:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODWorker",
							"target": "class",
							"typeArguments": [
								{
									"type": "unknown"
								},
								{
									"type": "typeParam",
									"name": "Source",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Params",
									"typeArguments": null
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODWorker",
										"target": "class",
										"typeArguments": [
											{
												"type": "typeParam",
												"name": "Instance",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Source",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Params",
												"typeArguments": null
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODWorker",
											"target": "class",
											"typeArguments": [
												{
													"type": "typeParam",
													"name": "Instance",
													"typeArguments": null
												},
												{
													"type": "typeParam",
													"name": "Source",
													"typeArguments": null
												},
												{
													"type": "typeParam",
													"name": "Params",
													"typeArguments": null
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "executeWorkers",
				"comment": "Execute all workers on an instance using the given source & parameters.",
				"source": "src/core/api/modules/worker.ts:62:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Execute all workers on an instance using the given source & parameters.",
					"parameters": [
						{
							"name": "instance",
							"details": {
								"type": "typeParam",
								"name": "Instance",
								"typeArguments": null
							}
						},
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/defaults/worker.ts:29:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/defaults/worker.ts:15:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODWorker",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Instance",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODWorker",
							"target": "class",
							"typeArguments": [
								{
									"type": "typeParam",
									"name": "Instance",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Source",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Params",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODWorker",
											"target": "class",
											"typeArguments": [
												{
													"type": "typeParam",
													"name": "Instance",
													"typeArguments": null
												},
												{
													"type": "typeParam",
													"name": "Source",
													"typeArguments": null
												},
												{
													"type": "typeParam",
													"name": "Params",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODWorker",
												"target": "class",
												"typeArguments": [
													{
														"type": "typeParam",
														"name": "Instance",
														"typeArguments": null
													},
													{
														"type": "typeParam",
														"name": "Source",
														"typeArguments": null
													},
													{
														"type": "typeParam",
														"name": "Params",
														"typeArguments": null
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODWorker",
							"target": "class",
							"typeArguments": [
								{
									"type": "typeParam",
									"name": "Instance",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Source",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Params",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODWorker",
							"target": "class",
							"typeArguments": [
								{
									"type": "typeParam",
									"name": "Instance",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Source",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Params",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSortedWorkers",
				"comment": "Get all workers in sorted order.",
				"source": "src/core/api/modules/worker.ts:53:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all workers in sorted order.",
					"parameters": [
						{
							"name": "priority",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"ascending\""
									},
									{
										"type": "literal",
										"name": "\"descending\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODWorker",
							"target": "class",
							"typeArguments": [
								{
									"type": "typeParam",
									"name": "Instance",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Source",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Params",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODWorker",
											"target": "class",
											"typeArguments": [
												{
													"type": "typeParam",
													"name": "Instance",
													"typeArguments": null
												},
												{
													"type": "typeParam",
													"name": "Source",
													"typeArguments": null
												},
												{
													"type": "typeParam",
													"name": "Params",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODWorker",
										"target": "class",
										"typeArguments": [
											{
												"type": "typeParam",
												"name": "Instance",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Source",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Params",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODWorker",
										"target": "class",
										"typeArguments": [
											{
												"type": "typeParam",
												"name": "Instance",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Source",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Params",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODWorker",
										"target": "class",
										"typeArguments": [
											{
												"type": "typeParam",
												"name": "Instance",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Source",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Params",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/defaults/worker.ts:22:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "typeParam",
								"name": "WorkerIds",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODWorker",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Instance",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Instance",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "WorkerIds",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODMain",
		"comment": "## ODMain `class`\nThis is the main Open Ticket class.\nIt contains all managers from the entire bot & has shortcuts to the event & logging system.\n\nThis class can't be overwritten or extended & is available as the global variable `openticket`!",
		"constant": false,
		"source": "src/core/api/main.ts:47:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/main.ts:131:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODMain",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "actions",
				"comment": "The manager that manages all actions or procedures in the bot. (e.g. ticket-creation, ticket-deletion, ticket-claiming, etc)",
				"source": "src/core/api/main.ts:87:4",
				"details": {
					"type": "reference",
					"name": "ODActionManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "blacklist",
				"comment": "The manager that manages the ticket blacklist. (people who are blacklisted can't create a ticket)",
				"source": "src/core/api/main.ts:125:4",
				"details": {
					"type": "reference",
					"name": "ODBlacklistManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "builders",
				"comment": "The manager that manages all builders in the bot. (e.g. buttons, dropdowns, messages, modals, etc)",
				"source": "src/core/api/main.ts:83:4",
				"details": {
					"type": "reference",
					"name": "ODBuilderManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "checkers",
				"comment": "The manager that handles & executes all config checkers in the bot. (the code that checks if you have something wrong in your config)",
				"source": "src/core/api/main.ts:81:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "client",
				"comment": "The manager responsible for everything related to the client. (e.g. status, login, slash & text commands, etc)",
				"source": "src/core/api/main.ts:104:4",
				"details": {
					"type": "reference",
					"name": "ODClientManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "code",
				"comment": "This manager is a place where you can put code that executes when the bot almost finishes the setup. (can be used for less important stuff that doesn't require an exact time-order)",
				"source": "src/core/api/main.ts:99:4",
				"details": {
					"type": "reference",
					"name": "ODCodeManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "configs",
				"comment": "The manager that manages & contains all the config files of the bot. (like `config/general.json`)",
				"source": "src/core/api/main.ts:72:4",
				"details": {
					"type": "reference",
					"name": "ODConfigManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "console",
				"comment": "The manager responsible for the console system. (logs, errors, etc)",
				"source": "src/core/api/main.ts:59:4",
				"details": {
					"type": "reference",
					"name": "ODConsoleManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "cooldowns",
				"comment": "The manager that contains all cooldowns of the bot. (e.g. ticket-cooldowns)",
				"source": "src/core/api/main.ts:93:4",
				"details": {
					"type": "reference",
					"name": "ODCooldownManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "databases",
				"comment": "The manager that manages & contains all the databases of the bot. (like `database/global.json`)",
				"source": "src/core/api/main.ts:74:4",
				"details": {
					"type": "reference",
					"name": "ODDatabaseManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "debug",
				"comment": "The manager responsible for sending debug logs to the debug file. (`otdebug.txt`)",
				"source": "src/core/api/main.ts:61:4",
				"details": {
					"type": "reference",
					"name": "ODDebugger",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "debugfile",
				"comment": "The manager responsible for the debug file. (`otdebug.txt`)",
				"source": "src/core/api/main.ts:57:4",
				"details": {
					"type": "reference",
					"name": "ODDebugFileManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "defaults",
				"comment": "This manager contains A LOD of booleans. With these switches, you can turn off \"default behaviours\" from the bot. This is used if you want to replace the default Open Ticket code.",
				"source": "src/core/api/main.ts:106:4",
				"details": {
					"type": "reference",
					"name": "ODDefaultsManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "env",
				"comment": "This manager manages all the variables in the ENV. It reads from both the `.env` file & the `process.env`. (these 2 will be combined)",
				"source": "src/core/api/main.ts:108:4",
				"details": {
					"type": "reference",
					"name": "ODEnvHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "events",
				"comment": "The manager containing all Open Ticket events.",
				"source": "src/core/api/main.ts:63:4",
				"details": {
					"type": "reference",
					"name": "ODEventManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "flags",
				"comment": "The manager that manages & checks all the console flags of the bot. (like `--debug`)",
				"source": "src/core/api/main.ts:68:4",
				"details": {
					"type": "reference",
					"name": "ODFlagManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "helpmenu",
				"comment": "The manager that manages & renders the Open Ticket help menu. (not the embed, but the text)",
				"source": "src/core/api/main.ts:95:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "languages",
				"comment": "The manager that manages all languages & translations of the bot. (but not for plugins)",
				"source": "src/core/api/main.ts:78:4",
				"details": {
					"type": "reference",
					"name": "ODLanguageManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "livestatus",
				"comment": "The manager responsible for the livestatus system. (remote console logs)",
				"source": "src/core/api/main.ts:111:4",
				"details": {
					"type": "reference",
					"name": "ODLiveStatusManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The manager that manages all the data of options in the bot. (these are used for panels, ticket creation, reaction roles)",
				"source": "src/core/api/main.ts:119:4",
				"details": {
					"type": "reference",
					"name": "ODOptionManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "panels",
				"comment": "The manager that manages all the data of panels in the bot. (panels contain the options)",
				"source": "src/core/api/main.ts:121:4",
				"details": {
					"type": "reference",
					"name": "ODPanelManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "permissions",
				"comment": "The manager that contains all permissions for commands & actions in the bot. (use it to check if someone has admin perms or not)",
				"source": "src/core/api/main.ts:91:4",
				"details": {
					"type": "reference",
					"name": "ODPermissionManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "plugins",
				"comment": "The manager that handles & executes all plugins in the bot.",
				"source": "src/core/api/main.ts:66:4",
				"details": {
					"type": "reference",
					"name": "ODPluginManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "posts",
				"comment": "The manager that manages all posts (static discord channels) in the bot. (e.g. (transcript) logs, etc)",
				"source": "src/core/api/main.ts:101:4",
				"details": {
					"type": "reference",
					"name": "ODPostManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "processStartupDate",
				"comment": "The timestamp that the (node.js) process of the bot started.",
				"source": "src/core/api/main.ts:52:4",
				"details": {
					"type": "internal",
					"name": "Date",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "progressbars",
				"comment": "The manager responsible for progress bars in the console.",
				"source": "src/core/api/main.ts:70:4",
				"details": {
					"type": "reference",
					"name": "ODProgressBarManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "questions",
				"comment": "The manager that manages all the data of questions in the bot. (these are used in options & tickets)",
				"source": "src/core/api/main.ts:117:4",
				"details": {
					"type": "reference",
					"name": "ODQuestionManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "readyStartupDate",
				"comment": "The timestamp that the bot finished loading and is ready for usage.",
				"source": "src/core/api/main.ts:54:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "internal",
							"name": "Date",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "responders",
				"comment": "The manager that manages all responders in the bot. (e.g. commands, buttons, dropdowns, modals)",
				"source": "src/core/api/main.ts:85:4",
				"details": {
					"type": "reference",
					"name": "ODResponderManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "roles",
				"comment": "The manager that manages all reaction roles in the bot. (here, you can add additional data to roles)",
				"source": "src/core/api/main.ts:129:4",
				"details": {
					"type": "reference",
					"name": "ODRoleManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "sessions",
				"comment": "The manager that manages all the data sessions of the bot. (it's a temporary database)",
				"source": "src/core/api/main.ts:76:4",
				"details": {
					"type": "reference",
					"name": "ODSessionManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "startscreen",
				"comment": "The manager responsible for the livestatus system. (remote console logs)",
				"source": "src/core/api/main.ts:113:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "stats",
				"comment": "The manager that manages, saves & renders the Open Ticket statistics. (not the embed, but the text & database)",
				"source": "src/core/api/main.ts:97:4",
				"details": {
					"type": "reference",
					"name": "ODStatsManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "tickets",
				"comment": "The manager that manages all tickets in the bot. (here, you can get & edit a lot of data from tickets)",
				"source": "src/core/api/main.ts:123:4",
				"details": {
					"type": "reference",
					"name": "ODTicketManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "transcripts",
				"comment": "The manager that manages the ticket transcripts. (both the history & compilers)",
				"source": "src/core/api/main.ts:127:4",
				"details": {
					"type": "reference",
					"name": "ODTranscriptManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "verifybars",
				"comment": "The manager that manages all verify bars in the bot. (the ✅ ❌ buttons)",
				"source": "src/core/api/main.ts:89:4",
				"details": {
					"type": "reference",
					"name": "ODVerifyBarManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "versions",
				"comment": "The manager that handles all versions in the bot.",
				"source": "src/core/api/main.ts:49:4",
				"details": {
					"type": "reference",
					"name": "ODVersionManager_Default",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "log",
				"comment": "Log a message to the console. But in the Open Ticket style :)",
				"source": "src/core/api/main.ts:181:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Log a message to the console. But in the Open Ticket style :)",
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "reference",
								"name": "ODConsoleMessage",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODAction",
		"comment": "## ODActionImplementation `class`\nThis is an Open Ticket action implementation.\n\nIt is a basic implementation of the `ODWorkerManager` used by all `ODAction` classes.\n\nThis class can't be used stand-alone & needs to be extended from!",
		"constant": false,
		"source": "src/core/api/modules/action.ts:46:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/action.ts:19:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "object"
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODAction",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Result",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/modules/action.ts:17:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "object"
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "run",
				"comment": "Run this action",
				"source": "src/core/api/modules/action.ts:48:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Run this action",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "internal",
								"name": "Partial",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "Result",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "primitive",
					"name": "object"
				}
			},
			{
				"name": "Result",
				"type": {
					"type": "primitive",
					"name": "object"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODActionImplementation",
		"comment": "## ODActionImplementation `class`\nThis is an Open Ticket action implementation.\n\nIt is a basic implementation of the `ODWorkerManager` used by all `ODAction` classes.\n\nThis class can't be used stand-alone & needs to be extended from!",
		"constant": false,
		"source": "src/core/api/modules/action.ts:15:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/action.ts:19:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "object"
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODActionImplementation",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Result",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/modules/action.ts:17:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "object"
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "run",
				"comment": "Execute all workers & return the result.",
				"source": "src/core/api/modules/action.ts:25:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Execute all workers & return the result.",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "internal",
								"name": "Partial",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "Result",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "primitive",
					"name": "object"
				}
			},
			{
				"name": "Result",
				"type": {
					"type": "primitive",
					"name": "object"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODActionManager",
		"comment": "## ODActionManager `class`\nThis is an Open Ticket action manager.\n\nIt contains all Open Ticket actions. You can compare actions with some sort of \"procedure\".\nIt's a complicated task that is divided into multiple functions.\n\nSome examples are `ticket-creation`, `ticket-closing`, `ticket-claiming`, ...\n\nIt's recommended to use this system in combination with Open Ticket responders!",
		"constant": false,
		"source": "src/core/api/modules/action.ts:40:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/action.ts:41:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODActionManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODAction",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "unknown"
											},
											{
												"type": "unknown"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODAction",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "unknown"
												},
												{
													"type": "unknown"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODAction",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "unknown"
									},
									{
										"type": "unknown"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODAction",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "unknown"
								},
								{
									"type": "unknown"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODAction",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "unknown"
												},
												{
													"type": "unknown"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODAction",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "string"
													},
													{
														"type": "unknown"
													},
													{
														"type": "unknown"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODAction",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "unknown"
								},
								{
									"type": "unknown"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODAction",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "unknown"
								},
								{
									"type": "unknown"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODAction",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "unknown"
												},
												{
													"type": "unknown"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODAction",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "unknown"
											},
											{
												"type": "unknown"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODAction",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "unknown"
											},
											{
												"type": "unknown"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODAction",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "unknown"
											},
											{
												"type": "unknown"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODAction",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "unknown"
									},
									{
										"type": "unknown"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODEnvHelper",
		"comment": "## ODEnvHelper `class`\nThis is a utility class that helps you with reading the ENV.\n\nIt has support for the built-in `process.env` & `.env` file",
		"constant": false,
		"source": "src/core/api/modules/base.ts:654:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/base.ts:660:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "customEnvPath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEnvHelper",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "dotenv",
				"comment": "All variables found in the `.env` file",
				"source": "src/core/api/modules/base.ts:656:4",
				"details": {
					"type": "primitive",
					"name": "object"
				}
			},
			{
				"type": "property",
				"name": "env",
				"comment": "All variables found in `process.env`",
				"source": "src/core/api/modules/base.ts:658:4",
				"details": {
					"type": "primitive",
					"name": "object"
				}
			},
			{
				"type": "method",
				"name": "getVariable",
				"comment": "Get a variable from the env",
				"source": "src/core/api/modules/base.ts:669:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a variable from the env",
					"parameters": [
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "source",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"dotenv\""
									},
									{
										"type": "literal",
										"name": "\"env\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "any"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODHTTPGetRequest",
		"comment": "## ODHTTPGetRequest `class`\nThis is a class that can help you with creating simple HTTP GET requests.\n\nIt works using the native node.js fetch() method. You can configure all options in the constructor!",
		"constant": false,
		"source": "src/core/api/modules/base.ts:549:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/base.ts:557:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "url",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "throwOnError",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "config",
							"details": {
								"type": "internal",
								"name": "RequestInit",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODHTTPGetRequest",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "config",
				"comment": "The request config for additional options",
				"source": "src/core/api/modules/base.ts:553:4",
				"details": {
					"type": "internal",
					"name": "RequestInit",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "throwOnError",
				"comment": "Throw on error OR return http code 500",
				"source": "src/core/api/modules/base.ts:555:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "url",
				"comment": "The url used in the request",
				"source": "src/core/api/modules/base.ts:551:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "run",
				"comment": "Execute the GET request.",
				"source": "src/core/api/modules/base.ts:570:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Execute the GET request.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "unknown"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODHTTPPostRequest",
		"comment": "## ODHTTPPostRequest `class`\nThis is a class that can help you with creating simple HTTP POST requests.\n\nIt works using the native node.js fetch() method. You can configure all options in the constructor!",
		"constant": false,
		"source": "src/core/api/modules/base.ts:602:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/base.ts:610:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "url",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "throwOnError",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "config",
							"details": {
								"type": "internal",
								"name": "RequestInit",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODHTTPPostRequest",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "config",
				"comment": "The request config for additional options",
				"source": "src/core/api/modules/base.ts:606:4",
				"details": {
					"type": "internal",
					"name": "RequestInit",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "throwOnError",
				"comment": "Throw on error OR return http code 500",
				"source": "src/core/api/modules/base.ts:608:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "url",
				"comment": "The url used in the request",
				"source": "src/core/api/modules/base.ts:604:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "run",
				"comment": "Execute the POST request.",
				"source": "src/core/api/modules/base.ts:623:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Execute the POST request.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "unknown"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODId",
		"comment": "## ODId `class`\nThis is an Open Ticket identifier.\n\nIt can only contain the following characters: `a-z`, `A-Z`, `0-9`, `:`, `-` & `_`\n\nYou can use this class to assign a unique id when creating configs, databases, languages & more!",
		"constant": false,
		"source": "src/core/api/modules/base.ts:53:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/base.ts:61:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODId",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "identifier",
				"comment": "The identifier of the id (text after `:`).",
				"source": "src/core/api/modules/base.ts:59:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "source",
				"comment": "The source of the id (text before `:`). (e.g. `openticket` for all built-in ids)",
				"source": "src/core/api/modules/base.ts:57:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The full value of this `ODId` as a `string`.",
				"source": "src/core/api/modules/base.ts:55:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "toString",
				"comment": "Returns a string representation of this id. (same as `this.value`)",
				"source": "src/core/api/modules/base.ts:96:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Returns a string representation of this id. (same as `this.value`)",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODManager",
		"comment": "## ODManager `class`\nThis is an Open Ticket manager.\n\nIt can be used to store & manage classes based on their `ODId`.\nIt is somewhat the same as the default JS `Map()`.\nYou can extend this class when creating your own classes & managers.\n\nThis class has many useful functions based on `ODId` (add, get, remove, getAll, getFiltered, exists, loopAll, ...)",
		"constant": false,
		"source": "src/core/api/modules/base.ts:201:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/base.ts:217:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODManager",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "typeParam",
										"name": "DataType",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "typeParam",
											"name": "DataType",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "typeParam",
							"name": "DataType",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "typeParam",
											"name": "DataType",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "typeParam",
												"name": "DataType",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "typeParam",
							"name": "DataType",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "typeParam",
							"name": "DataType",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "typeParam",
											"name": "DataType",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "DataType",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "DataType",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "DataType",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "DataType",
				"type": {
					"type": "reference",
					"name": "ODManagerData",
					"target": "class",
					"typeArguments": null
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODManagerChangeHelper",
		"comment": "## ODManagerChangeHelper `class`\nThis is an Open Ticket manager change helper.\n\nIt is used to let the \"onChange\" event in the `ODManager` class work.\nYou can use this class when extending your own `ODManager`",
		"constant": false,
		"source": "src/core/api/modules/base.ts:107:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": null,
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODManagerChangeHelper",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODManagerData",
		"comment": "## ODManagerData `class`\nThis is Open Ticket manager data.\n\nIt provides a template for all classes that are used in the `ODManager`.\n\nThere is an `id:ODId` property & also some events used in the manager.",
		"constant": false,
		"source": "src/core/api/modules/base.ts:172:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/base.ts:176:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODManagerData",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODManagerRedirectHelper",
		"comment": "## ODManagerRedirectHelper `class`\nThis is Open Ticket ticket manager redirect helper.\n\nIt is used to redirect a source to another source when the id isn't found.\n\nIt will be used in **Open Discord** to allow plugins from all projects to work seamlessly!\n## **(❌ SYSTEM ONLY!!)**",
		"constant": false,
		"source": "src/core/api/modules/base.ts:134:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": null,
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODManagerRedirectHelper",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "**(❌ SYSTEM ONLY!!)** Add a redirect to this manager. Returns `true` when overwritten.",
				"source": "src/core/api/modules/base.ts:138:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "**(❌ SYSTEM ONLY!!)** Add a redirect to this manager. Returns `true` when overwritten.",
					"parameters": [
						{
							"name": "fromSource",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "toSource",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "list",
				"comment": "List all redirects from this manager.",
				"source": "src/core/api/modules/base.ts:160:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "List all redirects from this manager.",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "unknown"
						}
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "**(❌ SYSTEM ONLY!!)** Remove a redirect from this manager. Returns `true` when it existed.",
				"source": "src/core/api/modules/base.ts:151:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "**(❌ SYSTEM ONLY!!)** Remove a redirect from this manager. Returns `true` when it existed.",
					"parameters": [
						{
							"name": "fromSource",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "toSource",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODManagerWithSafety",
		"comment": "## ODManagerWithSafety `class`\nThis is an Open Ticket safe manager.\n\nIt functions exactly the same as a normal `ODManager`, but it has 1 function extra!\nThe `getSafe()` function will always return data, because when it doesn't find an id, it returns pre-configured backup data.",
		"constant": false,
		"source": "src/core/api/modules/base.ts:411:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/base.ts:417:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "backupCreator",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [],
								"returns": {
									"type": "typeParam",
									"name": "DataType",
									"typeArguments": null
								}
							}
						},
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODManagerWithSafety",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "typeParam",
										"name": "DataType",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "typeParam",
											"name": "DataType",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "typeParam",
							"name": "DataType",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "typeParam",
											"name": "DataType",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "typeParam",
												"name": "DataType",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "typeParam",
							"name": "DataType",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "typeParam",
							"name": "DataType",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSafe",
				"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
				"source": "src/core/api/modules/base.ts:427:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "typeParam",
						"name": "DataType",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "typeParam",
											"name": "DataType",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "DataType",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "DataType",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "DataType",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "DataType",
				"type": {
					"type": "reference",
					"name": "ODManagerData",
					"target": "class",
					"typeArguments": null
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODPluginError",
		"comment": "## ODPluginError `class`\nA wrapper for the node.js `Error` class that makes the error look better in the console!\n\nThis wrapper is made for Open Ticket plugin errors! **It can only be used by plugins!**",
		"constant": false,
		"source": "src/core/api/modules/base.ts:747:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "../../../.npm/_npx/dafcb7cdaad6ed61/node_modules/typescript/lib/lib.es5.d.ts:1082:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPluginError",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "_ODErrorType",
				"comment": "This variable gets detected by the error handling system to know how to render it",
				"source": "src/core/api/modules/base.ts:749:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "cause",
				"comment": null,
				"source": "../../../.npm/_npx/dafcb7cdaad6ed61/node_modules/typescript/lib/lib.es2022.error.d.ts:26:4",
				"details": {
					"type": "primitive",
					"name": "unknown"
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": null,
				"source": "../../../.npm/_npx/dafcb7cdaad6ed61/node_modules/typescript/lib/lib.es5.d.ts:1077:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": null,
				"source": "../../../.npm/_npx/dafcb7cdaad6ed61/node_modules/typescript/lib/lib.es5.d.ts:1076:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "stack",
				"comment": null,
				"source": "../../../.npm/_npx/dafcb7cdaad6ed61/node_modules/typescript/lib/lib.es5.d.ts:1078:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "prepareStackTrace",
				"comment": "Optional override for formatting stack traces",
				"source": "node_modules/@types/node/globals.d.ts:74:8",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "err",
							"details": {
								"type": "internal",
								"name": "Error",
								"typeArguments": null
							}
						},
						{
							"name": "stackTraces",
							"details": {
								"type": "array",
								"child": {
									"type": "external",
									"package": "@types/node",
									"name": "CallSite",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "any"
					}
				}
			},
			{
				"type": "property",
				"name": "stackTraceLimit",
				"comment": null,
				"source": "node_modules/@types/node/globals.d.ts:76:8",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "method",
				"name": "captureStackTrace",
				"comment": "Create .stack property on a target object",
				"source": "node_modules/@types/node/globals.d.ts:67:8",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Create .stack property on a target object",
					"parameters": [
						{
							"name": "targetObject",
							"details": {
								"type": "primitive",
								"name": "object"
							}
						},
						{
							"name": "constructorOpt",
							"details": {
								"type": "internal",
								"name": "Function",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "fromError",
				"comment": "Create an `ODPluginError` directly from an `Error` class",
				"source": "src/core/api/modules/base.ts:752:11",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create an `ODPluginError` directly from an `Error` class",
					"parameters": [
						{
							"name": "err",
							"details": {
								"type": "internal",
								"name": "Error",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPluginError",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODSystemError",
		"comment": "## ODSystemError `class`\nA wrapper for the node.js `Error` class that makes the error look better in the console!\n\nThis wrapper is made for Open Ticket system errors! **It can only be used by Open Ticket itself!**",
		"constant": false,
		"source": "src/core/api/modules/base.ts:731:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "../../../.npm/_npx/dafcb7cdaad6ed61/node_modules/typescript/lib/lib.es5.d.ts:1082:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODSystemError",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "_ODErrorType",
				"comment": "This variable gets detected by the error handling system to know how to render it",
				"source": "src/core/api/modules/base.ts:733:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "cause",
				"comment": null,
				"source": "../../../.npm/_npx/dafcb7cdaad6ed61/node_modules/typescript/lib/lib.es2022.error.d.ts:26:4",
				"details": {
					"type": "primitive",
					"name": "unknown"
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": null,
				"source": "../../../.npm/_npx/dafcb7cdaad6ed61/node_modules/typescript/lib/lib.es5.d.ts:1077:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": null,
				"source": "../../../.npm/_npx/dafcb7cdaad6ed61/node_modules/typescript/lib/lib.es5.d.ts:1076:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "stack",
				"comment": null,
				"source": "../../../.npm/_npx/dafcb7cdaad6ed61/node_modules/typescript/lib/lib.es5.d.ts:1078:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "prepareStackTrace",
				"comment": "Optional override for formatting stack traces",
				"source": "node_modules/@types/node/globals.d.ts:74:8",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "err",
							"details": {
								"type": "internal",
								"name": "Error",
								"typeArguments": null
							}
						},
						{
							"name": "stackTraces",
							"details": {
								"type": "array",
								"child": {
									"type": "external",
									"package": "@types/node",
									"name": "CallSite",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "any"
					}
				}
			},
			{
				"type": "property",
				"name": "stackTraceLimit",
				"comment": null,
				"source": "node_modules/@types/node/globals.d.ts:76:8",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "method",
				"name": "captureStackTrace",
				"comment": "Create .stack property on a target object",
				"source": "node_modules/@types/node/globals.d.ts:67:8",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Create .stack property on a target object",
					"parameters": [
						{
							"name": "targetObject",
							"details": {
								"type": "primitive",
								"name": "object"
							}
						},
						{
							"name": "constructorOpt",
							"details": {
								"type": "internal",
								"name": "Function",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "fromError",
				"comment": "Create an `ODSystemError` directly from an `Error` class",
				"source": "src/core/api/modules/base.ts:736:11",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create an `ODSystemError` directly from an `Error` class",
					"parameters": [
						{
							"name": "err",
							"details": {
								"type": "internal",
								"name": "Error",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODSystemError",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODVersion",
		"comment": "## ODVersion `class`\nThis is an Open Ticket version.\n\nIt has many features like comparing versions & checking if they are compatible.\n\nYou can use it in your own plugin, but most of the time you will use it to check the Open Ticket version!",
		"constant": false,
		"source": "src/core/api/modules/base.ts:455:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/base.ts:463:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "primary",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "secondary",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "tertiary",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODVersion",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "primary",
				"comment": "The first number of the version (example: `v1.2.3` => `1`)",
				"source": "src/core/api/modules/base.ts:457:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "secondary",
				"comment": "The second number of the version (example: `v1.2.3` => `2`)",
				"source": "src/core/api/modules/base.ts:459:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "tertiary",
				"comment": "The third number of the version (example: `v1.2.3` => `3`)",
				"source": "src/core/api/modules/base.ts:461:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "compare",
				"comment": "Compare this version with another version and returns the result: `higher`, `lower` or `equal`",
				"source": "src/core/api/modules/base.ts:501:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Compare this version with another version and returns the result: `higher`, `lower` or `equal`",
					"parameters": [
						{
							"name": "comparator",
							"details": {
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "\"higher\""
							},
							{
								"type": "literal",
								"name": "\"lower\""
							},
							{
								"type": "literal",
								"name": "\"equal\""
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "compatible",
				"comment": "Check if this version is included in the list",
				"source": "src/core/api/modules/base.ts:527:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if this version is included in the list",
					"parameters": [
						{
							"name": "list",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODVersion",
									"target": "class",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "toString",
				"comment": "Get the version as a string (`noprefix:true` => with `v` prefix)",
				"source": "src/core/api/modules/base.ts:491:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the version as a string (`noprefix:true` => with `v` prefix)",
					"parameters": [
						{
							"name": "noprefix",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "fromString",
				"comment": "Get the version from a string (also possible with `v` prefix)",
				"source": "src/core/api/modules/base.ts:477:11",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the version from a string (also possible with `v` prefix)",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "version",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODVersion",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODVersionManager",
		"comment": "## ODVersionManager `class`\nA Open Ticket version manager.\n\nIt is used to manage different `ODVersion`'s from the bot. You will use it to check which version of the bot is used.",
		"constant": false,
		"source": "src/core/api/modules/base.ts:442:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/base.ts:443:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODVersionManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODVersion",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODVersion",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODVersion",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODVersion",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODVersion",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODVersion",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODVersion",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODVersion",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODVersion",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODVersion",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODVersion",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODEasterEggs",
		"comment": "Oh, what could this be `¯\\_(ツ)_/¯`",
		"constant": false,
		"source": "src/core/api/modules/base.ts:759:17",
		"children": [
			{
				"type": "property",
				"name": "creator",
				"comment": null,
				"source": "src/core/api/modules/base.ts:760:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "translators",
				"comment": null,
				"source": "src/core/api/modules/base.ts:761:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODInterfaceWithPartialProperty",
		"comment": "## ODInterfaceWithPartialProperty `type`\nThis is a utility type to create an interface where some properties are optional!",
		"constant": false,
		"source": "src/core/api/modules/base.ts:41:12",
		"children": [
			{
				"type": "intersection",
				"children": [
					{
						"type": "internal",
						"name": "Omit",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Interface",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Key",
								"typeArguments": null
							}
						]
					},
					{
						"type": "internal",
						"name": "Partial",
						"typeArguments": [
							{
								"type": "internal",
								"name": "Pick",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "Interface",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Key",
										"typeArguments": null
									}
								]
							}
						]
					}
				]
			}
		],
		"typeParams": [
			{
				"name": "Interface",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "Key",
				"type": {
					"type": "keyof",
					"child": {
						"type": "typeParam",
						"name": "Interface",
						"typeArguments": null
					}
				}
			}
		]
	},
	{
		"type": "type",
		"name": "ODManagerAddCallback",
		"comment": "## ODManagerAddCallback `type`\nThis is a callback for the `onAdd` event in the `ODManager`",
		"constant": false,
		"source": "src/core/api/modules/base.ts:190:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "data",
						"details": {
							"type": "typeParam",
							"name": "DataType",
							"typeArguments": null
						}
					},
					{
						"name": "overwritten",
						"details": {
							"type": "primitive",
							"name": "boolean"
						}
					}
				],
				"returns": {
					"type": "primitive",
					"name": "void"
				}
			}
		],
		"typeParams": [
			{
				"name": "DataType",
				"type": {
					"type": "reference",
					"name": "ODManagerData",
					"target": "class",
					"typeArguments": null
				}
			}
		]
	},
	{
		"type": "type",
		"name": "ODManagerCallback",
		"comment": "## ODManagerCallback `type`\nThis is a callback for the `onChange` and `onRemove` events in the `ODManager`",
		"constant": false,
		"source": "src/core/api/modules/base.ts:186:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "data",
						"details": {
							"type": "typeParam",
							"name": "DataType",
							"typeArguments": null
						}
					}
				],
				"returns": {
					"type": "primitive",
					"name": "void"
				}
			}
		],
		"typeParams": [
			{
				"name": "DataType",
				"type": {
					"type": "reference",
					"name": "ODManagerData",
					"target": "class",
					"typeArguments": null
				}
			}
		]
	},
	{
		"type": "type",
		"name": "ODOptionalPromise",
		"comment": "## ODOptionalPromise `type`\nThis is a simple type to represent a type as normal value or a promise value.",
		"constant": false,
		"source": "src/core/api/modules/base.ts:15:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "typeParam",
						"name": "T",
						"typeArguments": null
					},
					{
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "T",
								"typeArguments": null
							}
						]
					}
				]
			}
		],
		"typeParams": [
			{
				"name": "T",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "type",
		"name": "ODPromiseVoid",
		"comment": "## ODPromiseVoid `type`\nThis is a simple type to represent a callback return value that could be a promise or not.",
		"constant": false,
		"source": "src/core/api/modules/base.ts:10:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "primitive",
						"name": "void"
					},
					{
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODValidButtonColor",
		"comment": "## ODValidButtonColor `type`\nThis is a collection of all the possible button colors.",
		"constant": false,
		"source": "src/core/api/modules/base.ts:21:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"gray\""
					},
					{
						"type": "literal",
						"name": "\"red\""
					},
					{
						"type": "literal",
						"name": "\"green\""
					},
					{
						"type": "literal",
						"name": "\"blue\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODValidId",
		"comment": "## ODValidId `type`\nThis is a valid Open Ticket identifier. It can be an `ODId` or `string`!\n\nYou will see this type in many functions from Open Ticket.",
		"constant": false,
		"source": "src/core/api/modules/base.ts:28:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "primitive",
						"name": "string"
					},
					{
						"type": "reference",
						"name": "ODId",
						"target": "class",
						"typeArguments": null
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODValidJsonType",
		"comment": "## ODValidJsonType `type`\nThis is a collection of all types that can be stored in a JSON file!\n\nlist: `string`, `number`, `boolean`, `array`, `object`, `null`",
		"constant": false,
		"source": "src/core/api/modules/base.ts:35:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "primitive",
						"name": "string"
					},
					{
						"type": "primitive",
						"name": "number"
					},
					{
						"type": "primitive",
						"name": "boolean"
					},
					{
						"type": "primitive",
						"name": "object"
					},
					{
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODValidJsonType",
							"target": "type",
							"typeArguments": null
						}
					},
					{
						"type": "literal",
						"name": "null"
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODBuilderImplementation",
		"comment": "## ODBuilderImplementation `class`\nThis is an Open Ticket builder implementation.\n\nIt is a basic implementation of the `ODWorkerManager` used by all `ODBuilder` classes.\n\nThis class can't be used stand-alone & needs to be extended from!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:16:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:26:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "Instance",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODBuilderImplementation",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Instance",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "BuildType",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "allowCache",
				"comment": "Cache a build or create it every time from scratch when this.build() gets executed.",
				"source": "src/core/api/modules/builder.ts:20:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "cache",
				"comment": "The cache of this build.",
				"source": "src/core/api/modules/builder.ts:24:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "typeParam",
							"name": "BuildType",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "didCache",
				"comment": "Did the build already got created/cached?",
				"source": "src/core/api/modules/builder.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/modules/builder.ts:18:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "typeParam",
							"name": "Instance",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "build",
				"comment": "Execute all workers & return the result.",
				"source": "src/core/api/modules/builder.ts:45:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Execute all workers & return the result.",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "BuildType",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "resetCache",
				"comment": "Reset the current cache",
				"source": "src/core/api/modules/builder.ts:39:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Reset the current cache",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODBuilderImplementation",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Instance",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "BuildType",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setCacheMode",
				"comment": "Set if caching is allowed",
				"source": "src/core/api/modules/builder.ts:33:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set if caching is allowed",
					"parameters": [
						{
							"name": "allowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODBuilderImplementation",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Instance",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "BuildType",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Instance",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "BuildType",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODBuilderManager",
		"comment": "## ODBuilderManager `class`\nThis is an Open Ticket builder manager.\n\nIt contains all Open Ticket builders. You can find messages, embeds, files & dropdowns, buttons & modals all here!\n\nUsing the Open Ticket builder system has a few advantages compared to vanilla discord.js:\n- plugins can extend/edit messages\n- automatically reply on error\n- independent workers (with priority)\n- fail-safe design using try-catch\n- cache frequently used objects\n- get to know the source of the build request for a specific message, button, etc\n- And so much more!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:64:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:78:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODBuilderManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "buttons",
				"comment": "The manager for all button builders",
				"source": "src/core/api/modules/builder.ts:66:4",
				"details": {
					"type": "reference",
					"name": "ODButtonManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "dropdowns",
				"comment": "The manager for all dropdown builders",
				"source": "src/core/api/modules/builder.ts:68:4",
				"details": {
					"type": "reference",
					"name": "ODDropdownManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "embeds",
				"comment": "The manager for all embed builders",
				"source": "src/core/api/modules/builder.ts:72:4",
				"details": {
					"type": "reference",
					"name": "ODEmbedManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "files",
				"comment": "The manager for all file/attachment builders",
				"source": "src/core/api/modules/builder.ts:70:4",
				"details": {
					"type": "reference",
					"name": "ODFileManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "messages",
				"comment": "The manager for all message builders",
				"source": "src/core/api/modules/builder.ts:74:4",
				"details": {
					"type": "reference",
					"name": "ODMessageManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "modals",
				"comment": "The manager for all modal builders",
				"source": "src/core/api/modules/builder.ts:76:4",
				"details": {
					"type": "reference",
					"name": "ODModalManager",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODButton",
		"comment": "## ODButton `class`\nThis is an Open Ticket button builder.\n\nWith this class, you can create a button to use in a message.\nThe only difference with normal buttons is that this one can be edited by Open Ticket plugins!\n\nThis is possible by using \"workers\" or multiple functions that will be executed in priority order!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:211:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:26:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButtonInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButton",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "allowCache",
				"comment": "Cache a build or create it every time from scratch when this.build() gets executed.",
				"source": "src/core/api/modules/builder.ts:20:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "cache",
				"comment": "The cache of this build.",
				"source": "src/core/api/modules/builder.ts:24:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODComponentBuildResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "didCache",
				"comment": "Did the build already got created/cached?",
				"source": "src/core/api/modules/builder.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/modules/builder.ts:18:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODButtonInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "build",
				"comment": "Build this button & compile it for discord.js",
				"source": "src/core/api/modules/builder.ts:213:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Build this button & compile it for discord.js",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODComponentBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "resetCache",
				"comment": "Reset the current cache",
				"source": "src/core/api/modules/builder.ts:39:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reset the current cache",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODButton",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setCacheMode",
				"comment": "Set if caching is allowed",
				"source": "src/core/api/modules/builder.ts:33:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set if caching is allowed",
					"parameters": [
						{
							"name": "allowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButton",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODButtonInstance",
		"comment": "## ODButtonInstance `class`\nThis is an Open Ticket button instance.\n\nIt contains all properties & functions to build a button!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:154:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": null,
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODButtonInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "The current data of this button",
				"source": "src/core/api/modules/builder.ts:156:4",
				"details": {
					"type": "reference",
					"name": "ODButtonData",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "setColor",
				"comment": "Set the color of this button",
				"source": "src/core/api/modules/builder.ts:182:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the color of this button",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODValidButtonColor",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButtonInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setCustomId",
				"comment": "Set the custom id of this button",
				"source": "src/core/api/modules/builder.ts:167:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the custom id of this button",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButtonInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setDisabled",
				"comment": "Disable this button",
				"source": "src/core/api/modules/builder.ts:197:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Disable this button",
					"parameters": [
						{
							"name": "disabled",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButtonInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setEmoji",
				"comment": "Set the emoji of this button",
				"source": "src/core/api/modules/builder.ts:192:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the emoji of this button",
					"parameters": [
						{
							"name": "emoji",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButtonInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setLabel",
				"comment": "Set the label of this button",
				"source": "src/core/api/modules/builder.ts:187:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the label of this button",
					"parameters": [
						{
							"name": "label",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButtonInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setMode",
				"comment": "Set the mode of this button",
				"source": "src/core/api/modules/builder.ts:172:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the mode of this button",
					"parameters": [
						{
							"name": "mode",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"button\""
									},
									{
										"type": "literal",
										"name": "\"url\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButtonInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setUrl",
				"comment": "Set the url of this button",
				"source": "src/core/api/modules/builder.ts:177:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the url of this button",
					"parameters": [
						{
							"name": "url",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButtonInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODButtonManager",
		"comment": "## ODButtonManager `class`\nThis is an Open Ticket button manager.\n\nIt contains all Open Ticket button builders. Here, you can add your own buttons or edit existing ones!\n\nIt's recommended to use this system in combination with all the other Open Ticket builders!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:105:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:106:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButtonManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODButton",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODButton",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODButton",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODButton",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODButton",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODButton",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "string"
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODButton",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getNewLine",
				"comment": "Get a newline component for buttons & dropdowns!",
				"source": "src/core/api/modules/builder.ts:121:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a newline component for buttons & dropdowns!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODComponentBuildResult",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODButton",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSafe",
				"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
				"source": "src/core/api/modules/base.ts:427:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButton",
						"target": "class",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							},
							{
								"type": "primitive",
								"name": "any"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODButton",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButton",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButton",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButton",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODButton",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODDropdown",
		"comment": "## ODDropdown `class`\nThis is an Open Ticket dropdown builder.\n\nWith this class, you can create a dropdown to use in a message.\nThe only difference with normal dropdowns is that this one can be edited by Open Ticket plugins!\n\nThis is possible by using \"workers\" or multiple functions that will be executed in priority order!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:404:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:26:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdownInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdown",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "allowCache",
				"comment": "Cache a build or create it every time from scratch when this.build() gets executed.",
				"source": "src/core/api/modules/builder.ts:20:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "cache",
				"comment": "The cache of this build.",
				"source": "src/core/api/modules/builder.ts:24:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODComponentBuildResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "didCache",
				"comment": "Did the build already got created/cached?",
				"source": "src/core/api/modules/builder.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/modules/builder.ts:18:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODDropdownInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "build",
				"comment": "Build this dropdown & compile it for discord.js",
				"source": "src/core/api/modules/builder.ts:406:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Build this dropdown & compile it for discord.js",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODComponentBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "resetCache",
				"comment": "Reset the current cache",
				"source": "src/core/api/modules/builder.ts:39:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reset the current cache",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODDropdown",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setCacheMode",
				"comment": "Set if caching is allowed",
				"source": "src/core/api/modules/builder.ts:33:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set if caching is allowed",
					"parameters": [
						{
							"name": "allowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdown",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODDropdownInstance",
		"comment": "## ODDropdownInstance `class`\nThis is an Open Ticket dropdown instance.\n\nIt contains all properties & functions to build a dropdown!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:316:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": null,
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODDropdownInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "The current data of this dropdown",
				"source": "src/core/api/modules/builder.ts:318:4",
				"details": {
					"type": "reference",
					"name": "ODDropdownData",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "setChannels",
				"comment": "Set the channels of this dropdown (when `type == \"channel\"`)",
				"source": "src/core/api/modules/builder.ts:385:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the channels of this dropdown (when `type == \"channel\"`)",
					"parameters": [
						{
							"name": "channels",
							"details": {
								"type": "array",
								"child": {
									"type": "external",
									"package": "discord.js",
									"name": "Channel",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setChannelTypes",
				"comment": "Set the channel types of this dropdown",
				"source": "src/core/api/modules/builder.ts:365:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the channel types of this dropdown",
					"parameters": [
						{
							"name": "channelTypes",
							"details": {
								"type": "array",
								"child": {
									"type": "external",
									"package": "discord-api-types",
									"name": "ChannelType",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setCustomId",
				"comment": "Set the custom id of this dropdown",
				"source": "src/core/api/modules/builder.ts:335:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the custom id of this dropdown",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setDisabled",
				"comment": "Set the disabled of this dropdown",
				"source": "src/core/api/modules/builder.ts:360:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the disabled of this dropdown",
					"parameters": [
						{
							"name": "disabled",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setMaxValues",
				"comment": "Set the maximum amount of values ax this dropdown",
				"source": "src/core/api/modules/builder.ts:355:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the maximum amount of values ax this dropdown",
					"parameters": [
						{
							"name": "maxValues",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setMentionables",
				"comment": "Set the mentionables of this dropdown (when `type == \"mentionable\"`)",
				"source": "src/core/api/modules/builder.ts:390:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the mentionables of this dropdown (when `type == \"mentionable\"`)",
					"parameters": [
						{
							"name": "mentionables",
							"details": {
								"type": "array",
								"child": {
									"type": "union",
									"children": [
										{
											"type": "external",
											"package": "discord.js",
											"name": "User",
											"typeArguments": null
										},
										{
											"type": "external",
											"package": "discord.js",
											"name": "Role",
											"typeArguments": null
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setMinValues",
				"comment": "Set the minimum amount of values in this dropdown",
				"source": "src/core/api/modules/builder.ts:350:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the minimum amount of values in this dropdown",
					"parameters": [
						{
							"name": "minValues",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setOptions",
				"comment": "Set the options of this dropdown (when `type == \"string\"`)",
				"source": "src/core/api/modules/builder.ts:370:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the options of this dropdown (when `type == \"string\"`)",
					"parameters": [
						{
							"name": "options",
							"details": {
								"type": "array",
								"child": {
									"type": "external",
									"package": "discord.js",
									"name": "SelectMenuComponentOptionData",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setPlaceholder",
				"comment": "Set the placeholder of this dropdown",
				"source": "src/core/api/modules/builder.ts:345:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the placeholder of this dropdown",
					"parameters": [
						{
							"name": "placeholder",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setRoles",
				"comment": "Set the roles of this dropdown (when `type == \"role\"`)",
				"source": "src/core/api/modules/builder.ts:380:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the roles of this dropdown (when `type == \"role\"`)",
					"parameters": [
						{
							"name": "roles",
							"details": {
								"type": "array",
								"child": {
									"type": "external",
									"package": "discord.js",
									"name": "Role",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setType",
				"comment": "Set the type of this dropdown",
				"source": "src/core/api/modules/builder.ts:340:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the type of this dropdown",
					"parameters": [
						{
							"name": "type",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"string\""
									},
									{
										"type": "literal",
										"name": "\"role\""
									},
									{
										"type": "literal",
										"name": "\"channel\""
									},
									{
										"type": "literal",
										"name": "\"user\""
									},
									{
										"type": "literal",
										"name": "\"mentionable\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setUsers",
				"comment": "Set the users of this dropdown (when `type == \"user\"`)",
				"source": "src/core/api/modules/builder.ts:375:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the users of this dropdown (when `type == \"user\"`)",
					"parameters": [
						{
							"name": "users",
							"details": {
								"type": "array",
								"child": {
									"type": "external",
									"package": "discord.js",
									"name": "User",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODDropdownManager",
		"comment": "## ODDropdownManager `class`\nThis is an Open Ticket dropdown manager.\n\nIt contains all Open Ticket dropdown builders. Here, you can add your own dropdowns or edit existing ones!\n\nIt's recommended to use this system in combination with all the other Open Ticket builders!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:255:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:256:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODDropdown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODDropdown",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODDropdown",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDropdown",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODDropdown",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODDropdown",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "string"
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDropdown",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getNewLine",
				"comment": "Get a newline component for buttons & dropdowns!",
				"source": "src/core/api/modules/builder.ts:272:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a newline component for buttons & dropdowns!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODComponentBuildResult",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDropdown",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSafe",
				"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
				"source": "src/core/api/modules/base.ts:427:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdown",
						"target": "class",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							},
							{
								"type": "primitive",
								"name": "any"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODDropdown",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODDropdown",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODEmbed",
		"comment": "## ODEmbed `class`\nThis is an Open Ticket embed builder.\n\nWith this class, you can create a embed to use in a message.\nThe only difference with normal embeds is that this one can be edited by Open Ticket plugins!\n\nThis is possible by using \"workers\" or multiple functions that will be executed in priority order!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:796:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:26:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODEmbedInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbed",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "allowCache",
				"comment": "Cache a build or create it every time from scratch when this.build() gets executed.",
				"source": "src/core/api/modules/builder.ts:20:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "cache",
				"comment": "The cache of this build.",
				"source": "src/core/api/modules/builder.ts:24:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODEmbedBuildResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "didCache",
				"comment": "Did the build already got created/cached?",
				"source": "src/core/api/modules/builder.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/modules/builder.ts:18:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODEmbedInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "build",
				"comment": "Build this embed & compile it for discord.js",
				"source": "src/core/api/modules/builder.ts:798:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Build this embed & compile it for discord.js",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODEmbedBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "resetCache",
				"comment": "Reset the current cache",
				"source": "src/core/api/modules/builder.ts:39:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reset the current cache",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODEmbed",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setCacheMode",
				"comment": "Set if caching is allowed",
				"source": "src/core/api/modules/builder.ts:33:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set if caching is allowed",
					"parameters": [
						{
							"name": "allowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbed",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODEmbedInstance",
		"comment": "## ODEmbedInstance `class`\nThis is an Open Ticket embed instance.\n\nIt contains all properties & functions to build an embed!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:693:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": null,
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODEmbedInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "The current data of this embed",
				"source": "src/core/api/modules/builder.ts:695:4",
				"details": {
					"type": "reference",
					"name": "ODEmbedData",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "addFields",
				"comment": "Add fields to this embed",
				"source": "src/core/api/modules/builder.ts:766:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add fields to this embed",
					"parameters": [
						{
							"name": "fields",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODInterfaceWithPartialProperty",
									"target": "type",
									"typeArguments": [
										{
											"type": "external",
											"package": "discord.js",
											"name": "EmbedField",
											"typeArguments": null
										},
										{
											"type": "literal",
											"name": "\"inline\""
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbedInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "clearFields",
				"comment": "Clear all fields from this embed",
				"source": "src/core/api/modules/builder.ts:777:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Clear all fields from this embed",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODEmbedInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setAuthor",
				"comment": "Set the author of this embed",
				"source": "src/core/api/modules/builder.ts:732:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the author of this embed",
					"parameters": [
						{
							"name": "text",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						},
						{
							"name": "image",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						},
						{
							"name": "url",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbedInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setColor",
				"comment": "Set the color of this embed",
				"source": "src/core/api/modules/builder.ts:717:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the color of this embed",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "ColorResolvable",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbedInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setDescription",
				"comment": "Set the description of this embed",
				"source": "src/core/api/modules/builder.ts:727:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the description of this embed",
					"parameters": [
						{
							"name": "description",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbedInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setFields",
				"comment": "Set the fields of this embed",
				"source": "src/core/api/modules/builder.ts:755:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the fields of this embed",
					"parameters": [
						{
							"name": "fields",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODInterfaceWithPartialProperty",
									"target": "type",
									"typeArguments": [
										{
											"type": "external",
											"package": "discord.js",
											"name": "EmbedField",
											"typeArguments": null
										},
										{
											"type": "literal",
											"name": "\"inline\""
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbedInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setFooter",
				"comment": "Set the footer of this embed",
				"source": "src/core/api/modules/builder.ts:739:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the footer of this embed",
					"parameters": [
						{
							"name": "text",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						},
						{
							"name": "image",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbedInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setImage",
				"comment": "Set the image of this embed",
				"source": "src/core/api/modules/builder.ts:745:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the image of this embed",
					"parameters": [
						{
							"name": "image",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbedInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setThumbnail",
				"comment": "Set the thumbnail of this embed",
				"source": "src/core/api/modules/builder.ts:750:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the thumbnail of this embed",
					"parameters": [
						{
							"name": "thumbnail",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbedInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setTimestamp",
				"comment": "Set the timestamp of this embed",
				"source": "src/core/api/modules/builder.ts:782:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the timestamp of this embed",
					"parameters": [
						{
							"name": "timestamp",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									},
									{
										"type": "internal",
										"name": "Date",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbedInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setTitle",
				"comment": "Set the title of this embed",
				"source": "src/core/api/modules/builder.ts:712:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the title of this embed",
					"parameters": [
						{
							"name": "title",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbedInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setUrl",
				"comment": "Set the url of this embed",
				"source": "src/core/api/modules/builder.ts:722:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the url of this embed",
					"parameters": [
						{
							"name": "url",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbedInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODEmbedManager",
		"comment": "## ODEmbedManager `class`\nThis is an Open Ticket embed manager.\n\nIt contains all Open Ticket embed builders. Here, you can add your own embeds or edit existing ones!\n\nIt's recommended to use this system in combination with all the other Open Ticket builders!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:632:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:633:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbedManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODEmbed",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODEmbed",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODEmbed",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODEmbed",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODEmbed",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODEmbed",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "string"
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODEmbed",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODEmbed",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSafe",
				"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
				"source": "src/core/api/modules/base.ts:427:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEmbed",
						"target": "class",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							},
							{
								"type": "primitive",
								"name": "any"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODEmbed",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODEmbed",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODEmbed",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODEmbed",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODEmbed",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODFile",
		"comment": "## ODFile `class`\nThis is an Open Ticket file builder.\n\nWith this class, you can create a file to use in a message.\nThe only difference with normal files is that this one can be edited by Open Ticket plugins!\n\nThis is possible by using \"workers\" or multiple functions that will be executed in priority order!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:595:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:26:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODFileInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFile",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "allowCache",
				"comment": "Cache a build or create it every time from scratch when this.build() gets executed.",
				"source": "src/core/api/modules/builder.ts:20:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "cache",
				"comment": "The cache of this build.",
				"source": "src/core/api/modules/builder.ts:24:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODFileBuildResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "didCache",
				"comment": "Did the build already got created/cached?",
				"source": "src/core/api/modules/builder.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/modules/builder.ts:18:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODFileInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "build",
				"comment": "Build this attachment & compile it for discord.js",
				"source": "src/core/api/modules/builder.ts:597:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Build this attachment & compile it for discord.js",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODFileBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "resetCache",
				"comment": "Reset the current cache",
				"source": "src/core/api/modules/builder.ts:39:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reset the current cache",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODFile",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setCacheMode",
				"comment": "Set if caching is allowed",
				"source": "src/core/api/modules/builder.ts:33:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set if caching is allowed",
					"parameters": [
						{
							"name": "allowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFile",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODFileInstance",
		"comment": "## ODFileInstance `class`\nThis is an Open Ticket file instance.\n\nIt contains all properties & functions to build a file!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:551:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": null,
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODFileInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "The current data of this file",
				"source": "src/core/api/modules/builder.ts:553:4",
				"details": {
					"type": "reference",
					"name": "ODFileData",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "setContents",
				"comment": "Set the file contents of this attachment",
				"source": "src/core/api/modules/builder.ts:566:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the file contents of this attachment",
					"parameters": [
						{
							"name": "contents",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "@types/node",
										"name": "Buffer",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFileInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setDescription",
				"comment": "Set the description of this attachment",
				"source": "src/core/api/modules/builder.ts:576:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the description of this attachment",
					"parameters": [
						{
							"name": "description",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFileInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setFile",
				"comment": "Set the file path of this attachment",
				"source": "src/core/api/modules/builder.ts:561:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the file path of this attachment",
					"parameters": [
						{
							"name": "file",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFileInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setName",
				"comment": "Set the name of this attachment",
				"source": "src/core/api/modules/builder.ts:571:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the name of this attachment",
					"parameters": [
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFileInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setSpoiler",
				"comment": "Set this attachment to show as a spoiler",
				"source": "src/core/api/modules/builder.ts:581:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set this attachment to show as a spoiler",
					"parameters": [
						{
							"name": "spoiler",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFileInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODFileManager",
		"comment": "## ODFileManager `class`\nThis is an Open Ticket file manager.\n\nIt contains all Open Ticket file builders. Here, you can add your own files or edit existing ones!\n\nIt's recommended to use this system in combination with all the other Open Ticket builders!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:509:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:510:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFileManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODFile",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODFile",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODFile",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODFile",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODFile",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODFile",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "string"
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODFile",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODFile",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSafe",
				"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
				"source": "src/core/api/modules/base.ts:427:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFile",
						"target": "class",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							},
							{
								"type": "primitive",
								"name": "any"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODFile",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODFile",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODFile",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODFile",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODFile",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODMessage",
		"comment": "## ODMessage `class`\nThis is an Open Ticket message builder.\n\nWith this class, you can create a message to send in a discord channel.\nThe only difference with normal messages is that this one can be edited by Open Ticket plugins!\n\nThis is possible by using \"workers\" or multiple functions that will be executed in priority order!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:1012:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:26:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODMessageInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessage",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "allowCache",
				"comment": "Cache a build or create it every time from scratch when this.build() gets executed.",
				"source": "src/core/api/modules/builder.ts:20:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "cache",
				"comment": "The cache of this build.",
				"source": "src/core/api/modules/builder.ts:24:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODMessageBuildResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "didCache",
				"comment": "Did the build already got created/cached?",
				"source": "src/core/api/modules/builder.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/modules/builder.ts:18:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODMessageInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "build",
				"comment": "Build this message & compile it for discord.js",
				"source": "src/core/api/modules/builder.ts:1014:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Build this message & compile it for discord.js",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODMessageBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "resetCache",
				"comment": "Reset the current cache",
				"source": "src/core/api/modules/builder.ts:39:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reset the current cache",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODMessage",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setCacheMode",
				"comment": "Set if caching is allowed",
				"source": "src/core/api/modules/builder.ts:33:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set if caching is allowed",
					"parameters": [
						{
							"name": "allowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessage",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODMessageInstance",
		"comment": "## ODMessageInstance `class`\nThis is an Open Ticket message instance.\n\nIt contains all properties & functions to build a message!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:906:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": null,
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODMessageInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "The current data of this message",
				"source": "src/core/api/modules/builder.ts:908:4",
				"details": {
					"type": "reference",
					"name": "ODMessageData",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "addComponent",
				"comment": "Add a component to this message!",
				"source": "src/core/api/modules/builder.ts:964:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add a component to this message!",
					"parameters": [
						{
							"name": "component",
							"details": {
								"type": "reference",
								"name": "ODComponentBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessageInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "addEmbed",
				"comment": "Add an embed to this message!",
				"source": "src/core/api/modules/builder.ts:942:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add an embed to this message!",
					"parameters": [
						{
							"name": "embed",
							"details": {
								"type": "reference",
								"name": "ODEmbedBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessageInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "addFile",
				"comment": "Add a file to this message!",
				"source": "src/core/api/modules/builder.ts:986:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add a file to this message!",
					"parameters": [
						{
							"name": "file",
							"details": {
								"type": "reference",
								"name": "ODFileBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessageInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "getComponent",
				"comment": "Get a component from this message",
				"source": "src/core/api/modules/builder.ts:975:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a component from this message",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "literal",
								"name": "\"\\n\""
							},
							{
								"type": "external",
								"package": "@discordjs/builders",
								"name": "MessageActionRowComponentBuilder",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getEmbed",
				"comment": "Get an embed from this message",
				"source": "src/core/api/modules/builder.ts:953:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get an embed from this message",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "EmbedBuilder",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getFile",
				"comment": "Get a file from this message",
				"source": "src/core/api/modules/builder.ts:997:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a file from this message",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "AttachmentBuilder",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "removeComponent",
				"comment": "Remove a component from this message",
				"source": "src/core/api/modules/builder.ts:969:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove a component from this message",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessageInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "removeEmbed",
				"comment": "Remove an embed from this message",
				"source": "src/core/api/modules/builder.ts:947:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove an embed from this message",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessageInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "removeFile",
				"comment": "Remove a file from this message",
				"source": "src/core/api/modules/builder.ts:991:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove a file from this message",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessageInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setComponents",
				"comment": "Set the components of this message",
				"source": "src/core/api/modules/builder.ts:959:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the components of this message",
					"parameters": [
						{
							"name": "components",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODComponentBuildResult",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessageInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setContent",
				"comment": "Set the content of this message",
				"source": "src/core/api/modules/builder.ts:922:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the content of this message",
					"parameters": [
						{
							"name": "content",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessageInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setEmbeds",
				"comment": "Set the embeds of this message",
				"source": "src/core/api/modules/builder.ts:937:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the embeds of this message",
					"parameters": [
						{
							"name": "embeds",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODEmbedBuildResult",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessageInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setEphemeral",
				"comment": "Make this message ephemeral when possible",
				"source": "src/core/api/modules/builder.ts:932:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Make this message ephemeral when possible",
					"parameters": [
						{
							"name": "ephemeral",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessageInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setFiles",
				"comment": "Set the files of this message",
				"source": "src/core/api/modules/builder.ts:981:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the files of this message",
					"parameters": [
						{
							"name": "files",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODFileBuildResult",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessageInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setPoll",
				"comment": "Set the poll of this message",
				"source": "src/core/api/modules/builder.ts:927:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the poll of this message",
					"parameters": [
						{
							"name": "poll",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "PollData",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessageInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODMessageManager",
		"comment": "## ODMessageManager `class`\nThis is an Open Ticket message manager.\n\nIt contains all Open Ticket message builders. Here, you can add your own messages or edit existing ones!\n\nIt's recommended to use this system in combination with all the other Open Ticket builders!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:846:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:847:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessageManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODMessage",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODMessage",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODMessage",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODMessage",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODMessage",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODMessage",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "string"
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODMessage",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODMessage",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSafe",
				"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
				"source": "src/core/api/modules/base.ts:427:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODMessage",
						"target": "class",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							},
							{
								"type": "primitive",
								"name": "any"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODMessage",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODMessage",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODMessage",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODMessage",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODMessage",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODModal",
		"comment": "## ODModal `class`\nThis is an Open Ticket modal builder.\n\nWith this class, you can create a modal to use as response in interactions.\nThe only difference with normal modals is that this one can be edited by Open Ticket plugins!\n\nThis is possible by using \"workers\" or multiple functions that will be executed in priority order!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:1206:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:26:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModalInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModal",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "allowCache",
				"comment": "Cache a build or create it every time from scratch when this.build() gets executed.",
				"source": "src/core/api/modules/builder.ts:20:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "cache",
				"comment": "The cache of this build.",
				"source": "src/core/api/modules/builder.ts:24:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODModalBuildResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "didCache",
				"comment": "Did the build already got created/cached?",
				"source": "src/core/api/modules/builder.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/modules/builder.ts:18:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODModalInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "build",
				"comment": "Build this modal & compile it for discord.js",
				"source": "src/core/api/modules/builder.ts:1208:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Build this modal & compile it for discord.js",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODModalBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "resetCache",
				"comment": "Reset the current cache",
				"source": "src/core/api/modules/builder.ts:39:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Reset the current cache",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODModal",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setCacheMode",
				"comment": "Set if caching is allowed",
				"source": "src/core/api/modules/builder.ts:33:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set if caching is allowed",
					"parameters": [
						{
							"name": "allowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModal",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODModalInstance",
		"comment": "## ODModalInstance `class`\nThis is an Open Ticket modal instance.\n\nIt contains all properties & functions to build a modal!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:1156:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": null,
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODModalInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "The current data of this modal",
				"source": "src/core/api/modules/builder.ts:1158:4",
				"details": {
					"type": "reference",
					"name": "ODModalData",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "addQuestion",
				"comment": "Add a question to this modal!",
				"source": "src/core/api/modules/builder.ts:1180:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add a question to this modal!",
					"parameters": [
						{
							"name": "question",
							"details": {
								"type": "reference",
								"name": "ODModalDataQuestion",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModalInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "getQuestion",
				"comment": "Get a question from this modal",
				"source": "src/core/api/modules/builder.ts:1191:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a question from this modal",
					"parameters": [
						{
							"name": "customId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODModalDataQuestion",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "removeQuestion",
				"comment": "Remove a question from this modal",
				"source": "src/core/api/modules/builder.ts:1185:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove a question from this modal",
					"parameters": [
						{
							"name": "customId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModalInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setCustomId",
				"comment": "Set the custom id of this modal",
				"source": "src/core/api/modules/builder.ts:1165:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the custom id of this modal",
					"parameters": [
						{
							"name": "customId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModalInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setQuestions",
				"comment": "Set the questions of this modal",
				"source": "src/core/api/modules/builder.ts:1175:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the questions of this modal",
					"parameters": [
						{
							"name": "questions",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODModalDataQuestion",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModalInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setTitle",
				"comment": "Set the title of this modal",
				"source": "src/core/api/modules/builder.ts:1170:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the title of this modal",
					"parameters": [
						{
							"name": "title",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModalInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODModalManager",
		"comment": "## ODModalManager `class`\nThis is an Open Ticket modal manager.\n\nIt contains all Open Ticket modal builders. Here, you can add your own modals or edit existing ones!\n\nIt's recommended to use this system in combination with all the other Open Ticket builders!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:1087:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/builder.ts:1088:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModalManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODModal",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODModal",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODModal",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODModal",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODModal",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODModal",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "string"
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODModal",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODModal",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSafe",
				"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
				"source": "src/core/api/modules/base.ts:427:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the backup data when not found.\n\n### ⚠️ This should only be used when the data doesn't need to be written/edited",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModal",
						"target": "class",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							},
							{
								"type": "primitive",
								"name": "any"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODModal",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "string"
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModal",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModal",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModal",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "string"
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODModal",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODButtonData",
		"comment": "## ODButtonData `interface`\nThis interface contains the data to build a button.",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:132:17",
		"children": [
			{
				"type": "property",
				"name": "color",
				"comment": "The button color",
				"source": "src/core/api/modules/builder.ts:140:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODValidButtonColor",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "customId",
				"comment": "The custom id of this button",
				"source": "src/core/api/modules/builder.ts:134:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "disabled",
				"comment": "Is the button disabled?",
				"source": "src/core/api/modules/builder.ts:146:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "emoji",
				"comment": "The button emoji",
				"source": "src/core/api/modules/builder.ts:144:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "label",
				"comment": "The button label",
				"source": "src/core/api/modules/builder.ts:142:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "mode",
				"comment": "The mode of this button",
				"source": "src/core/api/modules/builder.ts:136:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"button\""
						},
						{
							"type": "literal",
							"name": "\"url\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "url",
				"comment": "The url for when the mode is set to \"url\"",
				"source": "src/core/api/modules/builder.ts:138:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODComponentBuildResult",
		"comment": "## ODComponentBuildResult `interface`\nThis interface contains the result from a built component (button/dropdown). This can be used in the `ODMessage` builder!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:91:17",
		"children": [
			{
				"type": "property",
				"name": "component",
				"comment": "The discord component or `\\n` when it is a spacer between action rows",
				"source": "src/core/api/modules/builder.ts:95:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "literal",
							"name": "\"\\n\""
						},
						{
							"type": "external",
							"package": "@discordjs/builders",
							"name": "MessageActionRowComponentBuilder",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this component (button or dropdown)",
				"source": "src/core/api/modules/builder.ts:93:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODDropdownData",
		"comment": "## ODDropdownData `interface`\nThis interface contains the data to build a dropdown.",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:283:17",
		"children": [
			{
				"type": "property",
				"name": "channels",
				"comment": "The options when the type is \"channel\"",
				"source": "src/core/api/modules/builder.ts:306:4",
				"details": {
					"type": "array",
					"child": {
						"type": "external",
						"package": "discord.js",
						"name": "Channel",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "channelTypes",
				"comment": "Allowed channel types when the type is \"channel\"",
				"source": "src/core/api/modules/builder.ts:297:4",
				"details": {
					"type": "array",
					"child": {
						"type": "external",
						"package": "discord-api-types",
						"name": "ChannelType",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "customId",
				"comment": "The custom id of this dropdown",
				"source": "src/core/api/modules/builder.ts:285:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "disabled",
				"comment": "Is this dropdown disabled?",
				"source": "src/core/api/modules/builder.ts:295:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "maxValues",
				"comment": "The maximum amount of items to be selected in this dropdown",
				"source": "src/core/api/modules/builder.ts:293:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "mentionables",
				"comment": "The options when the type is \"mentionable\"",
				"source": "src/core/api/modules/builder.ts:308:4",
				"details": {
					"type": "array",
					"child": {
						"type": "union",
						"children": [
							{
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "Role",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "minValues",
				"comment": "The minimum amount of items to be selected in this dropdown",
				"source": "src/core/api/modules/builder.ts:291:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options when the type is \"string\"",
				"source": "src/core/api/modules/builder.ts:300:4",
				"details": {
					"type": "array",
					"child": {
						"type": "external",
						"package": "discord.js",
						"name": "SelectMenuComponentOptionData",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "placeholder",
				"comment": "The placeholder of this dropdown",
				"source": "src/core/api/modules/builder.ts:289:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "roles",
				"comment": "The options when the type is \"role\"",
				"source": "src/core/api/modules/builder.ts:304:4",
				"details": {
					"type": "array",
					"child": {
						"type": "external",
						"package": "discord.js",
						"name": "Role",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this dropdown",
				"source": "src/core/api/modules/builder.ts:287:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"string\""
						},
						{
							"type": "literal",
							"name": "\"role\""
						},
						{
							"type": "literal",
							"name": "\"channel\""
						},
						{
							"type": "literal",
							"name": "\"user\""
						},
						{
							"type": "literal",
							"name": "\"mentionable\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "users",
				"comment": "The options when the type is \"user\"",
				"source": "src/core/api/modules/builder.ts:302:4",
				"details": {
					"type": "array",
					"child": {
						"type": "external",
						"package": "discord.js",
						"name": "User",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODEmbedBuildResult",
		"comment": "## ODEmbedBuildResult `interface`\nThis interface contains the result from a built embed. This can be used in the `ODMessage` builder!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:681:17",
		"children": [
			{
				"type": "property",
				"name": "embed",
				"comment": "The discord embed",
				"source": "src/core/api/modules/builder.ts:685:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "EmbedBuilder",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this embed",
				"source": "src/core/api/modules/builder.ts:683:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODEmbedData",
		"comment": "## ODEmbedData `interface`\nThis interface contains the data to build an embed.",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:649:17",
		"children": [
			{
				"type": "property",
				"name": "authorImage",
				"comment": "The author image of the embed",
				"source": "src/core/api/modules/builder.ts:661:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "authorText",
				"comment": "The author text of the embed",
				"source": "src/core/api/modules/builder.ts:659:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "authorUrl",
				"comment": "The author url of the embed",
				"source": "src/core/api/modules/builder.ts:663:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "color",
				"comment": "The color of the embed",
				"source": "src/core/api/modules/builder.ts:653:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "ColorResolvable",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "description",
				"comment": "The description of the embed",
				"source": "src/core/api/modules/builder.ts:657:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "fields",
				"comment": "The fields of the embed",
				"source": "src/core/api/modules/builder.ts:673:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODInterfaceWithPartialProperty",
						"target": "type",
						"typeArguments": [
							{
								"type": "external",
								"package": "discord.js",
								"name": "EmbedField",
								"typeArguments": null
							},
							{
								"type": "literal",
								"name": "\"inline\""
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "footerImage",
				"comment": "The footer image of the embed",
				"source": "src/core/api/modules/builder.ts:667:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "footerText",
				"comment": "The footer text of the embed",
				"source": "src/core/api/modules/builder.ts:665:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "image",
				"comment": "The image of the embed",
				"source": "src/core/api/modules/builder.ts:669:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "thumbnail",
				"comment": "The thumbnail of the embed",
				"source": "src/core/api/modules/builder.ts:671:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "timestamp",
				"comment": "The timestamp of the embed",
				"source": "src/core/api/modules/builder.ts:675:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "number"
						},
						{
							"type": "internal",
							"name": "Date",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "title",
				"comment": "The title of the embed",
				"source": "src/core/api/modules/builder.ts:651:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "url",
				"comment": "The url of the embed",
				"source": "src/core/api/modules/builder.ts:655:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODFileBuildResult",
		"comment": "## ODFileBuildResult `interface`\nThis interface contains the result from a built file (attachment). This can be used in the `ODMessage` builder!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:539:17",
		"children": [
			{
				"type": "property",
				"name": "file",
				"comment": "The discord file",
				"source": "src/core/api/modules/builder.ts:543:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "AttachmentBuilder",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this file",
				"source": "src/core/api/modules/builder.ts:541:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODFileData",
		"comment": "## ODFileData `interface`\nThis interface contains the data to build a file.",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:525:17",
		"children": [
			{
				"type": "property",
				"name": "description",
				"comment": "The description of the file",
				"source": "src/core/api/modules/builder.ts:531:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The file buffer, string or raw data",
				"source": "src/core/api/modules/builder.ts:527:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "BufferResolvable",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of the file",
				"source": "src/core/api/modules/builder.ts:529:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "spoiler",
				"comment": "Set the file to be a spoiler",
				"source": "src/core/api/modules/builder.ts:533:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODMessageBuildResult",
		"comment": "## ODMessageBuildResult `interface`\nThis interface contains the result from a built message. This can be sent in a discord channel!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:882:17",
		"children": [
			{
				"type": "property",
				"name": "ephemeral",
				"comment": "When enabled, the bot will try to send this as an ephemeral message",
				"source": "src/core/api/modules/builder.ts:888:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this message",
				"source": "src/core/api/modules/builder.ts:884:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": "The discord message",
				"source": "src/core/api/modules/builder.ts:886:4",
				"details": {
					"type": "internal",
					"name": "Omit",
					"typeArguments": [
						{
							"type": "external",
							"package": "discord.js",
							"name": "MessageCreateOptions",
							"typeArguments": null
						},
						{
							"type": "literal",
							"name": "\"flags\""
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODMessageBuildSentResult",
		"comment": "## ODMessageBuildSentResult `interface`\nThis interface contains the result from a sent built message. This can be used to edit, view & save the message that got created.",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:894:17",
		"children": [
			{
				"type": "property",
				"name": "message",
				"comment": "The message that got sent.",
				"source": "src/core/api/modules/builder.ts:898:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "Message",
							"typeArguments": [
								{
									"type": "typeParam",
									"name": "InGuild",
									"typeArguments": null
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "success",
				"comment": "Did the message get sent successfully?",
				"source": "src/core/api/modules/builder.ts:896:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			}
		],
		"typeParams": [
			{
				"name": "InGuild",
				"type": {
					"type": "primitive",
					"name": "boolean"
				}
			}
		]
	},
	{
		"type": "interface",
		"name": "ODMessageData",
		"comment": "## ODMessageData `interface`\nThis interface contains the data to build a message.",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:860:17",
		"children": [
			{
				"type": "property",
				"name": "additionalOptions",
				"comment": "Additional options that aren't covered by the Open Ticket api!",
				"source": "src/core/api/modules/builder.ts:876:4",
				"details": {
					"type": "internal",
					"name": "Omit",
					"typeArguments": [
						{
							"type": "external",
							"package": "discord.js",
							"name": "MessageCreateOptions",
							"typeArguments": null
						},
						{
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "\"flags\""
								},
								{
									"type": "literal",
									"name": "\"poll\""
								},
								{
									"type": "literal",
									"name": "\"content\""
								},
								{
									"type": "literal",
									"name": "\"embeds\""
								},
								{
									"type": "literal",
									"name": "\"files\""
								},
								{
									"type": "literal",
									"name": "\"components\""
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "components",
				"comment": "Components from this message",
				"source": "src/core/api/modules/builder.ts:871:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODComponentBuildResult",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "content",
				"comment": "The content of this message. `null` when no content",
				"source": "src/core/api/modules/builder.ts:862:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "embeds",
				"comment": "Embeds from this message",
				"source": "src/core/api/modules/builder.ts:869:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODEmbedBuildResult",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "ephemeral",
				"comment": "Try to make this message ephemeral when available",
				"source": "src/core/api/modules/builder.ts:866:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "files",
				"comment": "Files from this message",
				"source": "src/core/api/modules/builder.ts:873:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODFileBuildResult",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "poll",
				"comment": "Poll data for this message",
				"source": "src/core/api/modules/builder.ts:864:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "PollData",
							"typeArguments": null
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODModalBuildResult",
		"comment": "## ODModalBuildResult `interface`\nThis interface contains the result from a built modal (form). This can be used in the `ODMessage` builder!",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:1144:17",
		"children": [
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this modal",
				"source": "src/core/api/modules/builder.ts:1146:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "modal",
				"comment": "The discord modal",
				"source": "src/core/api/modules/builder.ts:1148:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "ModalBuilder",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODModalData",
		"comment": "## ODModalData `interface`\nThis interface contains the data to build a modal.",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:1132:17",
		"children": [
			{
				"type": "property",
				"name": "customId",
				"comment": "The custom id of this modal",
				"source": "src/core/api/modules/builder.ts:1134:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "questions",
				"comment": "The collection of questions in this modal",
				"source": "src/core/api/modules/builder.ts:1138:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODModalDataQuestion",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "title",
				"comment": "The title of this modal",
				"source": "src/core/api/modules/builder.ts:1136:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODModalDataQuestion",
		"comment": "## ODModalDataQuestion `interface`\nThis interface contains the data to build a modal question.",
		"constant": false,
		"source": "src/core/api/modules/builder.ts:1110:17",
		"children": [
			{
				"type": "property",
				"name": "customId",
				"comment": "The custom id of this modal question",
				"source": "src/core/api/modules/builder.ts:1114:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "label",
				"comment": "The label of this modal question",
				"source": "src/core/api/modules/builder.ts:1116:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "maxLength",
				"comment": "The max length of this modal question",
				"source": "src/core/api/modules/builder.ts:1120:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "minLength",
				"comment": "The min length of this modal question",
				"source": "src/core/api/modules/builder.ts:1118:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "placeholder",
				"comment": "The placeholder of this modal question",
				"source": "src/core/api/modules/builder.ts:1124:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "required",
				"comment": "Is this modal question required?",
				"source": "src/core/api/modules/builder.ts:1122:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "style",
				"comment": "The style of this modal question",
				"source": "src/core/api/modules/builder.ts:1112:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"short\""
						},
						{
							"type": "literal",
							"name": "\"paragraph\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The initial value of this modal question",
				"source": "src/core/api/modules/builder.ts:1126:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODChecker",
		"comment": "## ODChecker `class`\nThis is an Open Ticket config checker.\n\nIt checks a specific config file for invalid/missing configurations. This data can then be used to show to the user what's wrong!\nYou can check for example if a string is longer/shorter than a certain amount of characters & more!\n\nYou can use this class when you create your own custom config file & you want to check it for syntax errors.",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:310:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:324:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "storage",
							"details": {
								"type": "reference",
								"name": "ODCheckerStorage",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "config",
							"details": {
								"type": "reference",
								"name": "ODConfig",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "structure",
							"details": {
								"type": "reference",
								"name": "ODCheckerStructure",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODChecker",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "config",
				"comment": "The config file that needs to be checked",
				"source": "src/core/api/modules/checker.ts:316:4",
				"details": {
					"type": "reference",
					"name": "ODConfig",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "messages",
				"comment": "Temporary storage for all error messages from the check() method (not recommended to use)",
				"source": "src/core/api/modules/checker.ts:320:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODCheckerMessage",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The higher the priority, the faster it gets checked!",
				"source": "src/core/api/modules/checker.ts:314:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "quit",
				"comment": "Temporary storage for the quit status from the check() method (not recommended to use)",
				"source": "src/core/api/modules/checker.ts:322:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "storage",
				"comment": "The storage of this checker (reference for `ODCheckerManager.storage`)",
				"source": "src/core/api/modules/checker.ts:312:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerStorage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "structure",
				"comment": "The structure of the config file",
				"source": "src/core/api/modules/checker.ts:318:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerStructure",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Run this checker. Returns all errors",
				"source": "src/core/api/modules/checker.ts:333:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Run this checker. Returns all errors",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODCheckerResult",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "createMessage",
				"comment": "A shortcut to create a warning, info or error message",
				"source": "src/core/api/modules/checker.ts:361:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "A shortcut to create a warning, info or error message",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "type",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"info\""
									},
									{
										"type": "literal",
										"name": "\"warning\""
									},
									{
										"type": "literal",
										"name": "\"error\""
									}
								]
							}
						},
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "docs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						},
						{
							"name": "translationParams",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "string"
								}
							}
						},
						{
							"name": "locationId",
							"details": {
								"type": "reference",
								"name": "ODId",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "locationDocs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "locationTraceDeref",
				"comment": "De-reference the locationTrace array. Use this before adding a value to the array",
				"source": "src/core/api/modules/checker.ts:356:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "De-reference the locationTrace array. Use this before adding a value to the array",
					"parameters": [
						{
							"name": "trace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerLocationTrace",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "locationTraceToString",
				"comment": "Create a string from the location trace (path)",
				"source": "src/core/api/modules/checker.ts:344:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create a string from the location trace (path)",
					"parameters": [
						{
							"name": "trace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerArrayStructure",
		"comment": "## ODCheckerArrayStructure `class`\nThis is an Open Ticket config checker structure.\n\nThis class will check for an array variable in a config file, customise it in the settings!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:739:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:742:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerArrayStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerArrayStructure",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:740:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerArrayStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:746:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "any"
								}
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerBooleanStructure",
		"comment": "## ODCheckerBooleanStructure `class`\nThis is an Open Ticket config checker structure.\n\nThis class will check for a boolean variable in a config file, customise it in the settings!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:688:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:691:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerBooleanStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerBooleanStructure",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:689:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerBooleanStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:695:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerCustomStructure_DiscordId",
		"comment": "## ODCheckerCustomStructure_DiscordId `class`\nThis is an Open Ticket custom checker structure.\n\nThis class extends a primitive config checker & adds another layer of checking in the `custom` function.\nYou can compare it to a blueprint for a specific checker.\n\n**This custom checker is made for discord ids (channel, user, role, ...)**",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:1059:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:1067:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "type",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"message\""
									},
									{
										"type": "literal",
										"name": "\"role\""
									},
									{
										"type": "literal",
										"name": "\"server\""
									},
									{
										"type": "literal",
										"name": "\"channel\""
									},
									{
										"type": "literal",
										"name": "\"category\""
									},
									{
										"type": "literal",
										"name": "\"user\""
									},
									{
										"type": "literal",
										"name": "\"member\""
									},
									{
										"type": "literal",
										"name": "\"interaction\""
									}
								]
							}
						},
						{
							"name": "emptyAllowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "extraOptions",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "string"
								}
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerStringStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerCustomStructure_DiscordId",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "emptyAllowed",
				"comment": "Is this id allowed to be empty",
				"source": "src/core/api/modules/checker.ts:1063:13",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "extraOptions",
				"comment": "Extra matches (value will also be valid when one of these options match)",
				"source": "src/core/api/modules/checker.ts:1065:13",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:522:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerStringStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of id (used in rendering)",
				"source": "src/core/api/modules/checker.ts:1061:13",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"message\""
						},
						{
							"type": "literal",
							"name": "\"role\""
						},
						{
							"type": "literal",
							"name": "\"server\""
						},
						{
							"type": "literal",
							"name": "\"channel\""
						},
						{
							"type": "literal",
							"name": "\"category\""
						},
						{
							"type": "literal",
							"name": "\"user\""
						},
						{
							"type": "literal",
							"name": "\"member\""
						},
						{
							"type": "literal",
							"name": "\"interaction\""
						}
					]
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:528:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerCustomStructure_DiscordIdArray",
		"comment": "## ODCheckerCustomStructure_DiscordIdArray `class`\nThis is an Open Ticket custom checker structure.\n\nThis class extends a primitive config checker & adds another layer of checking in the `custom` function.\nYou can compare it to a blueprint for a specific checker.\n\n**This custom checker is made for discord id arrays (channel, user, role, ...)**",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:1099:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:1105:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "type",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"message\""
									},
									{
										"type": "literal",
										"name": "\"role\""
									},
									{
										"type": "literal",
										"name": "\"server\""
									},
									{
										"type": "literal",
										"name": "\"channel\""
									},
									{
										"type": "literal",
										"name": "\"category\""
									},
									{
										"type": "literal",
										"name": "\"user\""
									},
									{
										"type": "literal",
										"name": "\"member\""
									},
									{
										"type": "literal",
										"name": "\"interaction\""
									}
								]
							}
						},
						{
							"name": "extraOptions",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "string"
								}
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerArrayStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						},
						{
							"name": "idOptions",
							"details": {
								"type": "reference",
								"name": "ODCheckerStringStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerCustomStructure_DiscordIdArray",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "extraOptions",
				"comment": "Extra matches (value will also be valid when one of these options match)",
				"source": "src/core/api/modules/checker.ts:1103:13",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:740:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerArrayStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of id (used in rendering)",
				"source": "src/core/api/modules/checker.ts:1101:13",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"message\""
						},
						{
							"type": "literal",
							"name": "\"role\""
						},
						{
							"type": "literal",
							"name": "\"server\""
						},
						{
							"type": "literal",
							"name": "\"channel\""
						},
						{
							"type": "literal",
							"name": "\"category\""
						},
						{
							"type": "literal",
							"name": "\"user\""
						},
						{
							"type": "literal",
							"name": "\"member\""
						},
						{
							"type": "literal",
							"name": "\"interaction\""
						}
					]
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:746:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "any"
								}
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerCustomStructure_DiscordToken",
		"comment": "## ODCheckerCustomStructure_DiscordToken `class`\nThis is an Open Ticket custom checker structure.\n\nThis class extends a primitive config checker & adds another layer of checking in the `custom` function.\nYou can compare it to a blueprint for a specific checker.\n\n**This custom checker is made for a discord (auth) token**",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:1123:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:1124:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerStringStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerCustomStructure_DiscordToken",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:522:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerStringStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:528:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerCustomStructure_EmojiString",
		"comment": "## ODCheckerCustomStructure_EmojiString `class`\nThis is an Open Ticket custom checker structure.\n\nThis class extends a primitive config checker & adds another layer of checking in the `custom` function.\nYou can compare it to a blueprint for a specific checker.\n\n**This custom checker is made for an emoji (string)**",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:1182:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:1190:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "minLength",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "maxLength",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "allowCustomDiscordEmoji",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerStringStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerCustomStructure_EmojiString",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "allowCustomDiscordEmoji",
				"comment": "Allow custom discord emoji ids (`<:12345678910:emoji_name>`)",
				"source": "src/core/api/modules/checker.ts:1188:13",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "maxLength",
				"comment": "The maximum amount of emojis allowed",
				"source": "src/core/api/modules/checker.ts:1186:13",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "minLength",
				"comment": "The minimum amount of emojis required (0 to allow empty)",
				"source": "src/core/api/modules/checker.ts:1184:13",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:522:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerStringStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:528:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerCustomStructure_HexColor",
		"comment": "## ODCheckerCustomStructure_DiscordToken `class`\nThis is an Open Ticket custom checker structure.\n\nThis class extends a primitive config checker & adds another layer of checking in the `custom` function.\nYou can compare it to a blueprint for a specific checker.\n\n**This custom checker is made for a hex color**",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:1148:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:1154:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "allowShortForm",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "emptyAllowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerStringStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerCustomStructure_HexColor",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "allowShortForm",
				"comment": "When enabled, you are also allowed to use `#fff` instead of `#ffffff`",
				"source": "src/core/api/modules/checker.ts:1150:13",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "emptyAllowed",
				"comment": "Allow this hex color to be empty.",
				"source": "src/core/api/modules/checker.ts:1152:13",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:522:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerStringStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:528:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerCustomStructure_UniqueId",
		"comment": "## ODCheckerCustomStructure_UniqueId `class`\nThis is an Open Ticket custom checker structure.\n\nThis class extends a primitive config checker & adds another layer of checking in the `custom` function.\nYou can compare it to a blueprint for a specific checker.\n\n**This custom checker is made for a unique id (per source & scope)**",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:1353:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:1359:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "source",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "scope",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerStringStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerCustomStructure_UniqueId",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:522:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerStringStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "scope",
				"comment": "The scope of this unique id (id needs to be unique in this scope)",
				"source": "src/core/api/modules/checker.ts:1357:13",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "source",
				"comment": "The source of this unique id (generally the plugin name or `openticket`)",
				"source": "src/core/api/modules/checker.ts:1355:13",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:528:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerCustomStructure_UniqueIdArray",
		"comment": "## ODCheckerCustomStructure_UniqueIdArray `class`\nThis is an Open Ticket custom checker structure.\n\nThis class extends a primitive config checker & adds another layer of checking in the `custom` function.\nYou can compare it to a blueprint for a specific checker.\n\n**This custom checker is made for a unique id array (per source & scope)**",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:1392:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:1400:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "source",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "scope",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "usedScope",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerArrayStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerCustomStructure_UniqueIdArray",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:740:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerArrayStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "scope",
				"comment": "The scope to read unique ids (id needs to be unique in this scope)",
				"source": "src/core/api/modules/checker.ts:1396:13",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "source",
				"comment": "The source to read unique ids (generally the plugin name or `openticket`)",
				"source": "src/core/api/modules/checker.ts:1394:13",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "usedScope",
				"comment": "The scope to push unique ids when used in this array!",
				"source": "src/core/api/modules/checker.ts:1398:13",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:746:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "any"
								}
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerCustomStructure_UrlString",
		"comment": "## ODCheckerCustomStructure_UrlString `class`\nThis is an Open Ticket custom checker structure.\n\nThis class extends a primitive config checker & adds another layer of checking in the `custom` function.\nYou can compare it to a blueprint for a specific checker.\n\n**This custom checker is made for a URL (string)**",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:1249:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:1255:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "emptyAllowed",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "urlSettings",
							"details": {
								"type": "reference",
								"name": "ODCheckerCustomStructureOptions_UrlString",
								"target": "interface",
								"typeArguments": null
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerStringStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerCustomStructure_UrlString",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "emptyAllowed",
				"comment": "Is this url allowed to be empty?",
				"source": "src/core/api/modules/checker.ts:1253:13",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:522:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerStringStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "urlSettings",
				"comment": "The settings for this url",
				"source": "src/core/api/modules/checker.ts:1251:13",
				"details": {
					"type": "reference",
					"name": "ODCheckerCustomStructureOptions_UrlString",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:528:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerEnabledObjectStructure",
		"comment": "## ODCheckerEnabledObjectStructure `class`\nThis is an Open Ticket config checker structure.\n\nThis class will enable an object checker based on a variable match in the object, customise it in the settings!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:1018:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:1021:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerEnabledObjectStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerEnabledObjectStructure",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:1019:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerEnabledObjectStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:1025:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "object"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerFunction",
		"comment": "## ODCheckerFunction `class`\nThis is an Open Ticket config checker function.\n\nIt is a global function that will be executed after all config checkers. It can do additional checks for invalid/missing configurations.\nIt's mostly used for things that need to be checked globally!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:235:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:239:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "func",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "manager",
										"details": {
											"type": "reference",
											"name": "ODCheckerManager",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "functions",
										"details": {
											"type": "reference",
											"name": "ODCheckerFunctionManager",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODCheckerResult",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerFunction",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "func",
				"comment": "The function itself :)",
				"source": "src/core/api/modules/checker.ts:237:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "manager",
							"details": {
								"type": "reference",
								"name": "ODCheckerManager",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "functions",
							"details": {
								"type": "reference",
								"name": "ODCheckerFunctionManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerResult",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerFunctionManager",
		"comment": "## ODCheckerFunctionManager `class`\nThis is an Open Ticket config checker function manager.\n\nIt manages all `ODCheckerFunction`'s and it has some extra shortcuts for frequently used methods.",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:250:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:251:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerFunctionManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODCheckerFunction",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODCheckerFunction",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "createMessage",
				"comment": "A shortcut to create a warning, info or error message",
				"source": "src/core/api/modules/checker.ts:256:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "A shortcut to create a warning, info or error message",
					"parameters": [
						{
							"name": "checkerId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "filepath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "type",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"info\""
									},
									{
										"type": "literal",
										"name": "\"warning\""
									},
									{
										"type": "literal",
										"name": "\"error\""
									}
								]
							}
						},
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "docs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						},
						{
							"name": "translationParams",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "string"
								}
							}
						},
						{
							"name": "locationId",
							"details": {
								"type": "reference",
								"name": "ODId",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "locationDocs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerMessage",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCheckerFunction",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCheckerFunction",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODCheckerFunction",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODCheckerFunction",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCheckerFunction",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCheckerFunction",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "locationTraceDeref",
				"comment": "De-reference the locationTrace array. Use this before adding a value to the array",
				"source": "src/core/api/modules/checker.ts:284:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "De-reference the locationTrace array. Use this before adding a value to the array",
					"parameters": [
						{
							"name": "trace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerLocationTrace",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "locationTraceToString",
				"comment": "Create a string from the location trace (path)",
				"source": "src/core/api/modules/checker.ts:272:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create a string from the location trace (path)",
					"parameters": [
						{
							"name": "trace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODCheckerFunction",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCheckerFunction",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCheckerFunction",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCheckerFunction",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCheckerFunction",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerManager",
		"comment": "## ODCheckerManager `class`\nThis is an Open Ticket checker manager.\n\nIt manages all config checkers in the bot and allows plugins to access config checkers from Open Ticket & other plugins!\n\nYou can use this class to get/add a config checker (`ODChecker`) in your plugin!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:32:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:44:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "storage",
							"details": {
								"type": "reference",
								"name": "ODCheckerStorage",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "renderer",
							"details": {
								"type": "reference",
								"name": "ODCheckerRenderer",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "translation",
							"details": {
								"type": "reference",
								"name": "ODCheckerTranslationRegister",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "functions",
							"details": {
								"type": "reference",
								"name": "ODCheckerFunctionManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "functions",
				"comment": "Final functions are global functions executed just before the report is created.",
				"source": "src/core/api/modules/checker.ts:40:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerFunctionManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "lastResult",
				"comment": "A variable containing the last result returned from `checkAll()`",
				"source": "src/core/api/modules/checker.ts:42:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODCheckerResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "renderer",
				"comment": "The class responsible for rendering the config checker report.",
				"source": "src/core/api/modules/checker.ts:36:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerRenderer",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "storage",
				"comment": "The global temporary storage shared between all config checkers.",
				"source": "src/core/api/modules/checker.ts:34:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerStorage",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "translation",
				"comment": "The class responsible for translating the config checker report.",
				"source": "src/core/api/modules/checker.ts:38:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerTranslationRegister",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODChecker",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODChecker",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "checkAll",
				"comment": "Check all config checkers registered in this manager.",
				"source": "src/core/api/modules/checker.ts:52:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check all config checkers registered in this manager.",
					"parameters": [
						{
							"name": "sort",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerResult",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODChecker",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODChecker",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODChecker",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODChecker",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODChecker",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODChecker",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODChecker",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODChecker",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODChecker",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerNullStructure",
		"comment": "## ODCheckerNullStructure `class`\nThis is an Open Ticket config checker structure.\n\nThis class will check for a null variable in a config file, customise it in the settings!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:842:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:845:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerNullStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerNullStructure",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:843:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerNullStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:849:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "literal",
								"name": "null"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerNumberStructure",
		"comment": "## ODCheckerNumberStructure `class`\nThis is an Open Ticket config checker structure.\n\nThis class will check for a number variable in a config file, customise it in the settings!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:606:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:609:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerNumberStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerNumberStructure",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:607:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerNumberStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:613:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerObjectStructure",
		"comment": "## ODCheckerObjectStructure `class`\nThis is an Open Ticket config checker structure.\n\nThis class will check for an object variable in a config file, customise it in the settings!\nA checker for the children can be set in the settings.",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:448:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:451:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerObjectStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerObjectStructure",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:449:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerObjectStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:455:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "object"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerObjectSwitchStructure",
		"comment": "## ODCheckerObjectSwitchStructure `class`\nThis is an Open Ticket config checker structure.\n\nThis class will switch object checkers based on a variable match in one of the objects, customise it in the settings!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:955:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:958:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerObjectSwitchStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerObjectSwitchStructure",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:956:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerObjectSwitchStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:962:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "object"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerRenderer",
		"comment": "## ODCheckerRenderer `class`\nThis is an Open Ticket checker renderer. \n\nIt's responsible for rendering the config checker result in the console.\nThis class doesn't provide any components! You need to create them by extending this class\n\nYou can use this class if you want to change how the config checker looks!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:155:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": null,
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODCheckerRenderer",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "getComponents",
				"comment": "Get all components",
				"source": "src/core/api/modules/checker.ts:157:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all components",
					"parameters": [
						{
							"name": "compact",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "renderEmpty",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "translation",
							"details": {
								"type": "reference",
								"name": "ODCheckerTranslationRegister",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODCheckerResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "primitive",
							"name": "string"
						}
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render all components",
				"source": "src/core/api/modules/checker.ts:161:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Render all components",
					"parameters": [
						{
							"name": "components",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "string"
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerStorage",
		"comment": "## ODCheckerStorage `class`\nThis is an Open Ticket checker storage. \n\nIt stores temporary data to share between config checkers!\n(e.g. The `messages.json` needs to access the `\"id\"` from `options.json`)\n\n\nYou can use this class when you create your own config checker implementation! (not required for using the built-in config checker)",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:104:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": null,
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODCheckerStorage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "storage",
				"comment": "This is the array that stores all the data. ❌ **(don't edit unless really needed!)**",
				"source": "src/core/api/modules/checker.ts:106:4",
				"details": {
					"type": "array",
					"child": {
						"type": "unknown"
					}
				}
			},
			{
				"type": "method",
				"name": "delete",
				"comment": "Delete data from the database (`source` => id of `ODChecker`)",
				"source": "src/core/api/modules/checker.ts:132:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Delete data from the database (`source` => id of `ODChecker`)",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data from the database (`source` => id of `ODChecker`)",
				"source": "src/core/api/modules/checker.ts:109:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data from the database (`source` => id of `ODChecker`)",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "any"
					}
				}
			},
			{
				"type": "method",
				"name": "reset",
				"comment": "Reset the entire database",
				"source": "src/core/api/modules/checker.ts:142:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Reset the entire database",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "set",
				"comment": "Add data to the database (`source` => id of `ODChecker`). This function also overwrites existing data!",
				"source": "src/core/api/modules/checker.ts:114:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the database (`source` => id of `ODChecker`). This function also overwrites existing data!",
					"parameters": [
						{
							"name": "source",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "any"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerStringStructure",
		"comment": "## ODCheckerStringStructure `class`\nThis is an Open Ticket config checker structure.\n\nThis class will check for a string variable in a config file, customise it in the settings!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:521:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:524:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerStringStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerStringStructure",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:522:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerStringStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:528:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerStructure",
		"comment": "## ODCheckerStructure `class`\nThis is an Open Ticket config checker structure.\n\nThis class will check for a single variable in a config file, customise it in the settings!\nIf you want prebuilt checkers (for strings, booleans, numbers, ...), check the other `ODCheckerStructure`'s!\n\n**Not recommended to use!** It's recommended to extend from another `ODConfigCheckerStructure` class!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:415:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:421:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerStructure",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:419:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:427:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerTranslationRegister",
		"comment": "## ODCheckerTranslationRegister `class`\nThis is an Open Ticket checker translation register. \n\nIt's used to store & manage the translation for each message from the config checker!\nMost translations are stored by message id, but there are some exceptions like the additional text on the checker report.\n\nYou can use this class if you want to translate your config checker messages! **This is optional & isn't required for the checker to work!**",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:179:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": null,
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODCheckerTranslationRegister",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "delete",
				"comment": "Delete the translation for a config checker message/sentence.",
				"source": "src/core/api/modules/checker.ts:201:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Delete the translation for a config checker message/sentence.",
					"parameters": [
						{
							"name": "type",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"message\""
									},
									{
										"type": "literal",
										"name": "\"other\""
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get the translation from a config checker message/sentence",
				"source": "src/core/api/modules/checker.ts:184:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the translation from a config checker message/sentence",
					"parameters": [
						{
							"name": "type",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"message\""
									},
									{
										"type": "literal",
										"name": "\"other\""
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all translations",
				"source": "src/core/api/modules/checker.ts:211:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all translations",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "unknown"
						}
					}
				}
			},
			{
				"type": "method",
				"name": "insertTranslationParams",
				"comment": "Insert the translation params into the text.",
				"source": "src/core/api/modules/checker.ts:216:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Insert the translation params into the text.",
					"parameters": [
						{
							"name": "text",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "translationParams",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "string"
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "quickTranslate",
				"comment": "A shortcut to copy translations from the `ODLanguageManager` to `ODCheckerTranslationRegister`",
				"source": "src/core/api/modules/checker.ts:223:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "A shortcut to copy translations from the `ODLanguageManager` to `ODCheckerTranslationRegister`",
					"parameters": [
						{
							"name": "manager",
							"details": {
								"type": "reference",
								"name": "ODLanguageManager",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "translationId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "type",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"message\""
									},
									{
										"type": "literal",
										"name": "\"other\""
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "set",
				"comment": "Set the translation for a config checker message/sentence. This function also overwrites existing translations!",
				"source": "src/core/api/modules/checker.ts:189:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the translation for a config checker message/sentence. This function also overwrites existing translations!",
					"parameters": [
						{
							"name": "type",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"message\""
									},
									{
										"type": "literal",
										"name": "\"other\""
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "translation",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCheckerTypeSwitchStructure",
		"comment": "## ODCheckerTypeSwitchStructure `class`\nThis is an Open Ticket config checker structure.\n\nThis class will switch checkers based on the type of the variable in a config file, customise it in the settings!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:892:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:895:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "options",
							"details": {
								"type": "reference",
								"name": "ODCheckerTypeSwitchStructureOptions",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCheckerTypeSwitchStructure",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this checker structure",
				"source": "src/core/api/modules/checker.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this checker structure",
				"source": "src/core/api/modules/checker.ts:893:12",
				"details": {
					"type": "reference",
					"name": "ODCheckerTypeSwitchStructureOptions",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
				"source": "src/core/api/modules/checker.ts:899:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check a variable if it matches all settings in this checker. This function is automatically executed by Open Ticket!",
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "any"
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCheckerArrayStructureOptions",
		"comment": "## ODCheckerArrayStructureOptions `interface`\nThis interface has the options for `ODCheckerArrayStructure`!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:715:17",
		"children": [
			{
				"type": "property",
				"name": "allowDoubles",
				"comment": "Allow double values (only for `string`, `number` & `boolean`)",
				"source": "src/core/api/modules/checker.ts:729:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "allowedTypes",
				"comment": "Only allow these types in the array (for multi-type propertyCheckers)",
				"source": "src/core/api/modules/checker.ts:731:4",
				"details": {
					"type": "array",
					"child": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "\"string\""
							},
							{
								"type": "literal",
								"name": "\"number\""
							},
							{
								"type": "literal",
								"name": "\"boolean\""
							},
							{
								"type": "literal",
								"name": "\"object\""
							},
							{
								"type": "literal",
								"name": "\"other\""
							},
							{
								"type": "literal",
								"name": "\"null\""
							},
							{
								"type": "literal",
								"name": "\"array\""
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "custom",
				"comment": "Add a custom checker function. Returns `true` when valid.",
				"source": "src/core/api/modules/checker.ts:402:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationId",
							"details": {
								"type": "reference",
								"name": "ODId",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "locationDocs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "property",
				"name": "disableEmpty",
				"comment": "Don't allow this array to be empty",
				"source": "src/core/api/modules/checker.ts:719:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "docs",
				"comment": "Set the url to the documentation of this variable.",
				"source": "src/core/api/modules/checker.ts:404:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "emptyRequired",
				"comment": "This array is required to be empty",
				"source": "src/core/api/modules/checker.ts:721:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "length",
				"comment": "The length of the array needs to be the same as this value",
				"source": "src/core/api/modules/checker.ts:727:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "maxLength",
				"comment": "The maximum length of this array",
				"source": "src/core/api/modules/checker.ts:725:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "minLength",
				"comment": "The minimum length of this array",
				"source": "src/core/api/modules/checker.ts:723:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "propertyChecker",
				"comment": "The checker for all the properties in this array",
				"source": "src/core/api/modules/checker.ts:717:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerStructure",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCheckerBooleanStructureOptions",
		"comment": "## ODCheckerBooleanStructureOptions `interface`\nThis interface has the options for `ODCheckerBooleanStructure`!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:676:17",
		"children": [
			{
				"type": "property",
				"name": "custom",
				"comment": "Add a custom checker function. Returns `true` when valid.",
				"source": "src/core/api/modules/checker.ts:402:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationId",
							"details": {
								"type": "reference",
								"name": "ODId",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "locationDocs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "property",
				"name": "docs",
				"comment": "Set the url to the documentation of this variable.",
				"source": "src/core/api/modules/checker.ts:404:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "falseAllowed",
				"comment": "Is `false` allowed?",
				"source": "src/core/api/modules/checker.ts:680:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "trueAllowed",
				"comment": "Is `true` allowed?",
				"source": "src/core/api/modules/checker.ts:678:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCheckerCustomStructureOptions_UrlString",
		"comment": "## ODCheckerCustomStructureOptions_UrlString `interface`\nThis interface has the options for `ODCheckerCustomStructure_UrlString`!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:1228:17",
		"children": [
			{
				"type": "property",
				"name": "allowedExtensions",
				"comment": "Allowed extentions (string) => will match the end of the url (`.png`,`.svg`,...)",
				"source": "src/core/api/modules/checker.ts:1234:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "allowedHostnames",
				"comment": "Allowed hostnames (string or regex) => will match domain + subdomain",
				"source": "src/core/api/modules/checker.ts:1232:4",
				"details": {
					"type": "array",
					"child": {
						"type": "union",
						"children": [
							{
								"type": "primitive",
								"name": "string"
							},
							{
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "allowedPaths",
				"comment": "Allowed paths (string or regex) => will match path + extension (not domain + subdomain)",
				"source": "src/core/api/modules/checker.ts:1236:4",
				"details": {
					"type": "array",
					"child": {
						"type": "union",
						"children": [
							{
								"type": "primitive",
								"name": "string"
							},
							{
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "allowHttp",
				"comment": "Allow urls with `http://` instead of `https://`",
				"source": "src/core/api/modules/checker.ts:1230:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "regex",
				"comment": "A regex that will be executed on the entire url (including search params, protcol, domain, ...)",
				"source": "src/core/api/modules/checker.ts:1238:4",
				"details": {
					"type": "internal",
					"name": "RegExp",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCheckerEnabledObjectStructureOptions",
		"comment": "## ODCheckerEnabledObjectStructureOptions `interface`\nThis interface has the options for `ODCheckerEnabledObjectStructure`!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:1004:17",
		"children": [
			{
				"type": "property",
				"name": "checker",
				"comment": "The object checker to use once the property has been matched.",
				"source": "src/core/api/modules/checker.ts:1010:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerObjectStructure",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "custom",
				"comment": "Add a custom checker function. Returns `true` when valid.",
				"source": "src/core/api/modules/checker.ts:402:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationId",
							"details": {
								"type": "reference",
								"name": "ODId",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "locationDocs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "property",
				"name": "docs",
				"comment": "Set the url to the documentation of this variable.",
				"source": "src/core/api/modules/checker.ts:404:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "enabledValue",
				"comment": "The value of the property to be enabled. Defaults to `true`",
				"source": "src/core/api/modules/checker.ts:1008:4",
				"details": {
					"type": "primitive",
					"name": "any"
				}
			},
			{
				"type": "property",
				"name": "property",
				"comment": "The name of the property to match the `enabledValue`.",
				"source": "src/core/api/modules/checker.ts:1006:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCheckerMessage",
		"comment": "## ODCheckerMessage `interface`\nThis interface is an object which has all variables required for a config checker message!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:382:17",
		"children": [
			{
				"type": "property",
				"name": "checkerId",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:383:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "filepath",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:390:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "locationDocs",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:394:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "locationId",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:385:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:388:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "messageDocs",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:393:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "messageId",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:384:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:389:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "translationParams",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:391:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:387:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"info\""
						},
						{
							"type": "literal",
							"name": "\"warning\""
						},
						{
							"type": "literal",
							"name": "\"error\""
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCheckerNullStructureOptions",
		"comment": "## ODCheckerNullStructureOptions `interface`\nThis interface has the options for `ODCheckerNullStructure`!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:832:17",
		"children": [
			{
				"type": "property",
				"name": "custom",
				"comment": "Add a custom checker function. Returns `true` when valid.",
				"source": "src/core/api/modules/checker.ts:402:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationId",
							"details": {
								"type": "reference",
								"name": "ODId",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "locationDocs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "property",
				"name": "docs",
				"comment": "Set the url to the documentation of this variable.",
				"source": "src/core/api/modules/checker.ts:404:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "nullAllowed",
				"comment": "Is the value allowed to be null",
				"source": "src/core/api/modules/checker.ts:834:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCheckerNumberStructureOptions",
		"comment": "## ODCheckerNumberStructureOptions `interface`\nThis interface has the options for `ODCheckerNumberStructure`!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:566:17",
		"children": [
			{
				"type": "property",
				"name": "choices",
				"comment": "You need to choose between ...",
				"source": "src/core/api/modules/checker.ts:590:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "property",
				"name": "contains",
				"comment": "This number needs to contain ...",
				"source": "src/core/api/modules/checker.ts:588:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "custom",
				"comment": "Add a custom checker function. Returns `true` when valid.",
				"source": "src/core/api/modules/checker.ts:402:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationId",
							"details": {
								"type": "reference",
								"name": "ODId",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "locationDocs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "property",
				"name": "docs",
				"comment": "Set the url to the documentation of this variable.",
				"source": "src/core/api/modules/checker.ts:404:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "endsWith",
				"comment": "This number needs to end with ...",
				"source": "src/core/api/modules/checker.ts:586:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "floatAllowed",
				"comment": "Are numbers with a decimal value allowed?",
				"source": "src/core/api/modules/checker.ts:592:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "is",
				"comment": "This number is required to match the value",
				"source": "src/core/api/modules/checker.ts:578:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "length",
				"comment": "Set the required length of this number",
				"source": "src/core/api/modules/checker.ts:572:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "max",
				"comment": "The maximum value of this number",
				"source": "src/core/api/modules/checker.ts:576:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "maxLength",
				"comment": "The maximum length of this number",
				"source": "src/core/api/modules/checker.ts:570:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "min",
				"comment": "The minimum value of this number",
				"source": "src/core/api/modules/checker.ts:574:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "minLength",
				"comment": "The minimum length of this number",
				"source": "src/core/api/modules/checker.ts:568:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "negativeAllowed",
				"comment": "Are negative numbers allowed (without zero)",
				"source": "src/core/api/modules/checker.ts:594:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "offset",
				"comment": "The offset for the step function.",
				"source": "src/core/api/modules/checker.ts:582:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "positiveAllowed",
				"comment": "Are positive numers allowed (without zero)",
				"source": "src/core/api/modules/checker.ts:596:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "startsWith",
				"comment": "This number needs to start with ...",
				"source": "src/core/api/modules/checker.ts:584:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "step",
				"comment": "Only allow a multiple of ... starting at `this.offset` or 0",
				"source": "src/core/api/modules/checker.ts:580:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "zeroAllowed",
				"comment": "Is zero allowed?",
				"source": "src/core/api/modules/checker.ts:598:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCheckerObjectStructureOptions",
		"comment": "## ODCheckerObjectStructureOptions `interface`\nThis interface has the options for `ODCheckerObjectStructure`!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:437:17",
		"children": [
			{
				"type": "property",
				"name": "children",
				"comment": "Add a checker for a property in an object (can also be optional)",
				"source": "src/core/api/modules/checker.ts:439:4",
				"details": {
					"type": "array",
					"child": {
						"type": "unknown"
					}
				}
			},
			{
				"type": "property",
				"name": "custom",
				"comment": "Add a custom checker function. Returns `true` when valid.",
				"source": "src/core/api/modules/checker.ts:402:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationId",
							"details": {
								"type": "reference",
								"name": "ODId",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "locationDocs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "property",
				"name": "docs",
				"comment": "Set the url to the documentation of this variable.",
				"source": "src/core/api/modules/checker.ts:404:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCheckerObjectSwitchStructureOptions",
		"comment": "## ODCheckerObjectSwitchStructureOptions `interface`\nThis interface has the options for `ODCheckerObjectSwitchStructure`!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:936:17",
		"children": [
			{
				"type": "property",
				"name": "custom",
				"comment": "Add a custom checker function. Returns `true` when valid.",
				"source": "src/core/api/modules/checker.ts:402:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationId",
							"details": {
								"type": "reference",
								"name": "ODId",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "locationDocs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "property",
				"name": "docs",
				"comment": "Set the url to the documentation of this variable.",
				"source": "src/core/api/modules/checker.ts:404:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "objects",
				"comment": "An array of object checkers with their name, properties & priority.",
				"source": "src/core/api/modules/checker.ts:938:4",
				"details": {
					"type": "array",
					"child": {
						"type": "unknown"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCheckerResult",
		"comment": "## ODCheckerResult `interface`\nThis interface is the result from a config checker check() function.",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:12:17",
		"children": [
			{
				"type": "property",
				"name": "messages",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:14:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODCheckerMessage",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "valid",
				"comment": null,
				"source": "src/core/api/modules/checker.ts:13:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCheckerStringStructureOptions",
		"comment": "## ODCheckerStringStructureOptions `interface`\nThis interface has the options for `ODCheckerStringStructure`!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:497:17",
		"children": [
			{
				"type": "property",
				"name": "choices",
				"comment": "You need to choose between ...",
				"source": "src/core/api/modules/checker.ts:511:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "contains",
				"comment": "This string needs to contain ...",
				"source": "src/core/api/modules/checker.ts:509:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "custom",
				"comment": "Add a custom checker function. Returns `true` when valid.",
				"source": "src/core/api/modules/checker.ts:402:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationId",
							"details": {
								"type": "reference",
								"name": "ODId",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "locationDocs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "property",
				"name": "docs",
				"comment": "Set the url to the documentation of this variable.",
				"source": "src/core/api/modules/checker.ts:404:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "endsWith",
				"comment": "This string needs to end with ...",
				"source": "src/core/api/modules/checker.ts:507:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "length",
				"comment": "Set the required length of this string",
				"source": "src/core/api/modules/checker.ts:503:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "maxLength",
				"comment": "The maximum length of this string",
				"source": "src/core/api/modules/checker.ts:501:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "minLength",
				"comment": "The minimum length of this string",
				"source": "src/core/api/modules/checker.ts:499:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "regex",
				"comment": "The string needs to match this regex",
				"source": "src/core/api/modules/checker.ts:513:4",
				"details": {
					"type": "internal",
					"name": "RegExp",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "startsWith",
				"comment": "This string needs to start with ...",
				"source": "src/core/api/modules/checker.ts:505:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCheckerStructureOptions",
		"comment": "## ODCheckerStructureOptions `interface`\nThis interface has the basic options for the `ODCheckerStructure`!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:400:17",
		"children": [
			{
				"type": "property",
				"name": "custom",
				"comment": "Add a custom checker function. Returns `true` when valid.",
				"source": "src/core/api/modules/checker.ts:402:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationId",
							"details": {
								"type": "reference",
								"name": "ODId",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "locationDocs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "property",
				"name": "docs",
				"comment": "Set the url to the documentation of this variable.",
				"source": "src/core/api/modules/checker.ts:404:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODCheckerTypeSwitchStructureOptions",
		"comment": "## ODCheckerTypeSwitchStructureOptions `interface`\nThis interface has the options for `ODCheckerTypeSwitchStructure`!",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:866:17",
		"children": [
			{
				"type": "property",
				"name": "all",
				"comment": "A checker that will always run (replaces all other checkers)",
				"source": "src/core/api/modules/checker.ts:868:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerStructure",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "allowedTypes",
				"comment": "A list of allowed types",
				"source": "src/core/api/modules/checker.ts:884:4",
				"details": {
					"type": "array",
					"child": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "\"string\""
							},
							{
								"type": "literal",
								"name": "\"number\""
							},
							{
								"type": "literal",
								"name": "\"boolean\""
							},
							{
								"type": "literal",
								"name": "\"object\""
							},
							{
								"type": "literal",
								"name": "\"other\""
							},
							{
								"type": "literal",
								"name": "\"null\""
							},
							{
								"type": "literal",
								"name": "\"array\""
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "array",
				"comment": "A checker when the property is an array",
				"source": "src/core/api/modules/checker.ts:878:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerStructure",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "boolean",
				"comment": "A checker when the property is a boolean",
				"source": "src/core/api/modules/checker.ts:874:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerBooleanStructure",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "custom",
				"comment": "Add a custom checker function. Returns `true` when valid.",
				"source": "src/core/api/modules/checker.ts:402:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "checker",
							"details": {
								"type": "reference",
								"name": "ODChecker",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationTrace",
							"details": {
								"type": "reference",
								"name": "ODCheckerLocationTrace",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "locationId",
							"details": {
								"type": "reference",
								"name": "ODId",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "locationDocs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "property",
				"name": "docs",
				"comment": "Set the url to the documentation of this variable.",
				"source": "src/core/api/modules/checker.ts:404:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "null",
				"comment": "A checker when the property is null",
				"source": "src/core/api/modules/checker.ts:876:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerStructure",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "number",
				"comment": "A checker when the property is a number",
				"source": "src/core/api/modules/checker.ts:872:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerNumberStructure",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "object",
				"comment": "A checker when the property is an object",
				"source": "src/core/api/modules/checker.ts:880:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerObjectStructure",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "other",
				"comment": "A checker when the property is something else",
				"source": "src/core/api/modules/checker.ts:882:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerStructure",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "string",
				"comment": "A checker when the property is a string",
				"source": "src/core/api/modules/checker.ts:870:4",
				"details": {
					"type": "reference",
					"name": "ODCheckerStringStructure",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODCheckerLocationTrace",
		"comment": "## ODCheckerLocationTrace `type`\nThis type is an array of strings & numbers which represents the location trace from the config checker.\nIt's used to generate a path to the error (e.g. `\"abc\".\"efg\".1.\"something\"`)",
		"constant": false,
		"source": "src/core/api/modules/checker.ts:293:12",
		"children": [
			{
				"type": "array",
				"child": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "string"
						},
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODClientActivityManager",
		"comment": "## ODClientActivityManager `class`\nThis is an Open Ticket client activity manager.\n\nIt's responsible for managing the client status. Here, you can set the activity & status of the bot.\n\nIt also has a built-in refresh function, so the status will refresh every 10 minutes to keep it visible.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:342:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/client.ts:362:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "manager",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODClientActivityManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "initiated",
				"comment": "Is the status already initiated?",
				"source": "src/core/api/modules/client.ts:360:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "interval",
				"comment": "The timer responsible for refreshing the status. Stop it using `clearInterval(interval)`",
				"source": "src/core/api/modules/client.ts:356:4",
				"details": {
					"type": "external",
					"package": "@types/node",
					"name": "Timeout",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "manager",
				"comment": "Copy of discord.js client",
				"source": "src/core/api/modules/client.ts:347:4",
				"details": {
					"type": "reference",
					"name": "ODClientManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "refreshInterval",
				"comment": "status refresh interval in seconds (5 minutes by default)",
				"source": "src/core/api/modules/client.ts:358:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "status",
				"comment": "The current status status",
				"source": "src/core/api/modules/client.ts:353:4",
				"details": {
					"type": "reference",
					"name": "ODClientActivityStatus",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "text",
				"comment": "The current status text",
				"source": "src/core/api/modules/client.ts:351:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The current status type",
				"source": "src/core/api/modules/client.ts:349:4",
				"details": {
					"type": "reference",
					"name": "ODClientActivityType",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "getStatusType",
				"comment": "Get the status type (for displaying the status)",
				"source": "src/core/api/modules/client.ts:413:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the status type (for displaying the status)",
					"parameters": [],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "\"\""
							},
							{
								"type": "literal",
								"name": "\"listening \""
							},
							{
								"type": "literal",
								"name": "\"playing \""
							},
							{
								"type": "literal",
								"name": "\"watching \""
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "initStatus",
				"comment": "When initiating the status, the bot starts updating the status using `discord.js`. Returns `true` when successfull.",
				"source": "src/core/api/modules/client.ts:376:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "When initiating the status, the bot starts updating the status using `discord.js`. Returns `true` when successfull.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "setStatus",
				"comment": "Update the status. When already initiated, it can take up to 10min to see the updated status in discord.",
				"source": "src/core/api/modules/client.ts:368:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Update the status. When already initiated, it can take up to 10min to see the updated status in discord.",
					"parameters": [
						{
							"name": "type",
							"details": {
								"type": "reference",
								"name": "ODClientActivityType",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "text",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "status",
							"details": {
								"type": "reference",
								"name": "ODClientActivityStatus",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "forceUpdate",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODClientManager",
		"comment": "## ODClientManager `class`\nThis is an Open Ticket client manager.\n\nIt is responsible for managing the discord.js client. Here, you can set the status, register slash commands and much more!\n\nIf you want, you can also listen for custom events on the `ODClientManager.client` variable (`discord.Client`)",
		"constant": false,
		"source": "src/core/api/modules/client.ts:35:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/client.ts:80:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODClientManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "activity",
				"comment": "The status manager is responsible for setting the bot status.",
				"source": "src/core/api/modules/client.ts:74:4",
				"details": {
					"type": "reference",
					"name": "ODClientActivityManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "client",
				"comment": "The discord.js `discord.Client`. Only use it when initiated!",
				"source": "src/core/api/modules/client.ts:59:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "Client",
					"typeArguments": [
						{
							"type": "literal",
							"name": "true"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "initiated",
				"comment": "Is the bot initiated?",
				"source": "src/core/api/modules/client.ts:63:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "intents",
				"comment": "List of required bot intents. Add intents to this list using the `onClientLoad` event.",
				"source": "src/core/api/modules/client.ts:40:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODClientIntents",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "loggedIn",
				"comment": "Is the bot logged in?",
				"source": "src/core/api/modules/client.ts:65:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "mainServer",
				"comment": "The main server of the bot. Provided by serverId in the config",
				"source": "src/core/api/modules/client.ts:70:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "Guild",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "partials",
				"comment": "List of required bot partials. Add intents to this list using the `onClientLoad` event. **❌ Only use when neccessery!**",
				"source": "src/core/api/modules/client.ts:44:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODClientPartials",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "permissions",
				"comment": "List of required bot permissions. Add permissions to this list using the `onClientLoad` event.",
				"source": "src/core/api/modules/client.ts:46:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODClientPermissions",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "privileges",
				"comment": "List of required bot privileged intents. Add intents to this list using the `onClientLoad` event.",
				"source": "src/core/api/modules/client.ts:42:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODClientPriviligedIntents",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": "Is the bot ready?",
				"source": "src/core/api/modules/client.ts:67:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "readyListener",
				"comment": "(❌ DO NOD OVERWRITE ❌) Internal Open Ticket function to continue the startup when the client is ready!",
				"source": "src/core/api/modules/client.ts:72:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [],
							"returns": {
								"type": "internal",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "void"
									}
								]
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "rest",
				"comment": "The discord.js REST client. Used for stuff that discord.js can't handle :)",
				"source": "src/core/api/modules/client.ts:61:4",
				"details": {
					"type": "external",
					"package": "@discordjs/rest",
					"name": "REST",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "slashCommands",
				"comment": "The slash command manager is responsible for all slash commands & their events inside the bot.",
				"source": "src/core/api/modules/client.ts:76:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommandManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "textCommands",
				"comment": "The text command manager is responsible for all text commands & their events inside the bot.",
				"source": "src/core/api/modules/client.ts:78:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommandManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "other",
				"name": "token",
				"comment": null,
				"source": "src/core/api/modules/client.ts:48:8",
				"details": null
			},
			{
				"type": "method",
				"name": "checkBotInGuild",
				"comment": "Check if the bot is in a specific guild",
				"source": "src/core/api/modules/client.ts:124:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if the bot is in a specific guild",
					"parameters": [
						{
							"name": "guild",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "Guild",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "checkGuildPerms",
				"comment": "Check if a specific guild has all required permissions (or `Administrator`)",
				"source": "src/core/api/modules/client.ts:128:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if a specific guild has all required permissions (or `Administrator`)",
					"parameters": [
						{
							"name": "guild",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "Guild",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "fetchChannel",
				"comment": "A simplified shortcut to get a `discord.Channel` :)",
				"source": "src/core/api/modules/client.ts:192:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "A simplified shortcut to get a `discord.Channel` :)",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Channel",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchGuild",
				"comment": "A simplified shortcut to get a `discord.Guild` :)",
				"source": "src/core/api/modules/client.ts:181:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "A simplified shortcut to get a `discord.Guild` :)",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchGuildCategoryChannel",
				"comment": "A simplified shortcut to get a `discord.CategoryChannel` :)",
				"source": "src/core/api/modules/client.ts:232:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "A simplified shortcut to get a `discord.CategoryChannel` :)",
					"parameters": [
						{
							"name": "guildId",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "CategoryChannel",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchGuildChannel",
				"comment": "A simplified shortcut to get a `discord.GuildBasedChannel` :)",
				"source": "src/core/api/modules/client.ts:203:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "A simplified shortcut to get a `discord.GuildBasedChannel` :)",
					"parameters": [
						{
							"name": "guildId",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "GuildBasedChannel",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchGuildChannelMessage",
				"comment": "A simplified shortcut to get a `discord.Message` :)",
				"source": "src/core/api/modules/client.ts:275:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "A simplified shortcut to get a `discord.Message` :)",
					"parameters": [
						{
							"name": "guildId",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "channelId",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "TextChannel",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Message",
										"typeArguments": [
											{
												"type": "literal",
												"name": "true"
											}
										]
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchGuildMember",
				"comment": "A simplified shortcut to get a `discord.GuildMember` :)",
				"source": "src/core/api/modules/client.ts:247:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "A simplified shortcut to get a `discord.GuildMember` :)",
					"parameters": [
						{
							"name": "guildId",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "GuildMember",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchGuildRole",
				"comment": "A simplified shortcut to get a `discord.Role` :)",
				"source": "src/core/api/modules/client.ts:261:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "A simplified shortcut to get a `discord.Role` :)",
					"parameters": [
						{
							"name": "guildId",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Role",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchGuildTextChannel",
				"comment": "A simplified shortcut to get a `discord.TextChannel` :)",
				"source": "src/core/api/modules/client.ts:217:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "A simplified shortcut to get a `discord.TextChannel` :)",
					"parameters": [
						{
							"name": "guildId",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "TextChannel",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "fetchUser",
				"comment": "A simplified shortcut to get a `discord.User` :)",
				"source": "src/core/api/modules/client.ts:170:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "A simplified shortcut to get a `discord.User` :)",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getGuilds",
				"comment": "Get all servers the bot is part of.",
				"source": "src/core/api/modules/client.ts:117:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all servers the bot is part of.",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "external",
							"package": "discord.js",
							"name": "Guild",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "initClient",
				"comment": "Initiate the `client` variable & add the intents & partials to the bot.",
				"source": "src/core/api/modules/client.ts:88:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Initiate the `client` variable & add the intents & partials to the bot.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "login",
				"comment": "Log-in with a discord auth token.",
				"source": "src/core/api/modules/client.ts:139:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Log-in with a discord auth token.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "sendUserDm",
				"comment": "A simplified shortcut to send a DM to a user :)",
				"source": "src/core/api/modules/client.ts:295:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "A simplified shortcut to send a DM to a user :)",
					"parameters": [
						{
							"name": "user",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "message",
							"details": {
								"type": "reference",
								"name": "ODMessageBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODMessageBuildSentResult",
								"target": "interface",
								"typeArguments": [
									{
										"type": "literal",
										"name": "false"
									}
								]
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODSlashCommand",
		"comment": "## ODSlashCommand `class`\nThis is an Open Ticket slash command.\n\nWhen registered, you can listen for this command using the `ODCommandResponder`. The advantages of using this class for creating a slash command are:\n- automatic option parsing (even for channels, users, roles & mentions)!\n- automatic registration in discord.js\n- error reporting to the user when the bot fails to respond\n- plugins can extend this command\n- the bot won't re-register the command when it already exists (except when requested)!\n\nAnd more!",
		"constant": false,
		"source": "src/core/api/modules/client.ts:947:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/client.ts:955:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "builder",
							"details": {
								"type": "reference",
								"name": "ODSlashCommandBuilder",
								"target": "interface",
								"typeArguments": null
							}
						},
						{
							"name": "requiresUpdate",
							"details": {
								"type": "reference",
								"name": "ODSlashCommandUpdateFunction",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "guildId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODSlashCommand",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "builder",
				"comment": "The discord.js builder for this slash command.",
				"source": "src/core/api/modules/client.ts:949:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommandBuilder",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "guildId",
				"comment": "The id of the guild this command is for. Null when not set.",
				"source": "src/core/api/modules/client.ts:951:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "requiresUpdate",
				"comment": "Function to check if the slash command requires to be updated (when it already exists).",
				"source": "src/core/api/modules/client.ts:953:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODSlashCommandUpdateFunction",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "other",
				"name": "name",
				"comment": null,
				"source": "src/core/api/modules/client.ts:965:8",
				"details": null
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODSlashCommandComparator",
		"comment": null,
		"constant": false,
		"source": "src/core/api/modules/client.ts:526:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": null,
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODSlashCommandComparator",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "compare",
				"comment": "Returns `true` when the 2 slash commands are the same.",
				"source": "src/core/api/modules/client.ts:682:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Returns `true` when the 2 slash commands are the same.",
					"parameters": [
						{
							"name": "cmdA",
							"details": {
								"type": "reference",
								"name": "ODSlashCommandUniversalCommand",
								"target": "interface",
								"typeArguments": null
							}
						},
						{
							"name": "cmdB",
							"details": {
								"type": "reference",
								"name": "ODSlashCommandUniversalCommand",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "compareOption",
				"comment": "Returns `true` when the 2 slash command options are the same.",
				"source": "src/core/api/modules/client.ts:622:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Returns `true` when the 2 slash command options are the same.",
					"parameters": [
						{
							"name": "optA",
							"details": {
								"type": "reference",
								"name": "ODSlashCommandUniversalOption",
								"target": "interface",
								"typeArguments": null
							}
						},
						{
							"name": "optB",
							"details": {
								"type": "reference",
								"name": "ODSlashCommandUniversalOption",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "convertBuilder",
				"comment": "Convert a `ODSlashCommandBuilder` to a universal Open Ticket slash command object for comparison.",
				"source": "src/core/api/modules/client.ts:582:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Convert a `ODSlashCommandBuilder` to a universal Open Ticket slash command object for comparison.",
					"parameters": [
						{
							"name": "builder",
							"details": {
								"type": "reference",
								"name": "ODSlashCommandBuilder",
								"target": "interface",
								"typeArguments": null
							}
						},
						{
							"name": "guildId",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODSlashCommandUniversalCommand",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "convertCommand",
				"comment": "Convert a `discord.ApplicationCommand` to a universal Open Ticket slash command object for comparison.",
				"source": "src/core/api/modules/client.ts:602:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Convert a `discord.ApplicationCommand` to a universal Open Ticket slash command object for comparison.",
					"parameters": [
						{
							"name": "cmd",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "ApplicationCommand",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODSlashCommandUniversalCommand",
						"target": "interface",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODSlashCommandManager",
		"comment": "## ODSlashCommandManager `class`\nThis is an Open Ticket client slash manager.\n\nIt's responsible for managing all the slash commands from the client.\n\nHere, you can add & remove slash commands & the bot will do the (de)registering.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:774:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/client.ts:789:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "manager",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODSlashCommandManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "commandManager",
				"comment": "Discord.js application commands manager.",
				"source": "src/core/api/modules/client.ts:781:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "ApplicationCommandManager",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "comparator",
				"comment": "A utility class used to compare 2 slash commands with each other.",
				"source": "src/core/api/modules/client.ts:787:4",
				"details": {
					"type": "reference",
					"name": "ODSlashCommandComparator",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "listenerLimit",
				"comment": "Set the soft limit for maximum amount of listeners. A warning will be shown when there are more listeners than this limit.",
				"source": "src/core/api/modules/client.ts:785:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "manager",
				"comment": "Refrerence to discord.js client.",
				"source": "src/core/api/modules/client.ts:779:4",
				"details": {
					"type": "reference",
					"name": "ODClientManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODSlashCommand",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODSlashCommand",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "createCmd",
				"comment": "Create a slash command. **(SYSTEM ONLY)** => Use `ODSlashCommandManager` for registering commands the default way!",
				"source": "src/core/api/modules/client.ts:887:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create a slash command. **(SYSTEM ONLY)** => Use `ODSlashCommandManager` for registering commands the default way!",
					"parameters": [
						{
							"name": "cmd",
							"details": {
								"type": "reference",
								"name": "ODSlashCommand",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "createNewCommands",
				"comment": "Create all commands that are not registered yet.",
				"source": "src/core/api/modules/client.ts:831:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create all commands that are not registered yet.",
					"parameters": [
						{
							"name": "instances",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODSlashCommand",
									"target": "class",
									"typeArguments": null
								}
							}
						},
						{
							"name": "progress",
							"details": {
								"type": "reference",
								"name": "ODManualProgressBar",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODSlashCommand",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSlashCommand",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getAllRegisteredCommands",
				"comment": "Get all registered & unregistered slash commands.",
				"source": "src/core/api/modules/client.ts:797:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all registered & unregistered slash commands.",
					"parameters": [
						{
							"name": "guildId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODSlashCommandRegisteredResult",
								"target": "type",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODSlashCommand",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODSlashCommand",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSlashCommand",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSlashCommand",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODSlashCommand",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODSlashCommand",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODSlashCommand",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onInteraction",
				"comment": "Callback on interaction from one or multiple slash commands.",
				"source": "src/core/api/modules/client.ts:916:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Callback on interaction from one or multiple slash commands.",
					"parameters": [
						{
							"name": "commandName",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "internal",
										"name": "RegExp",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODSlashCommandInteractionCallback",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODSlashCommand",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODSlashCommand",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "removeUnusedCommands",
				"comment": "Remove all commands that are registered but unused by Open Ticket.",
				"source": "src/core/api/modules/client.ts:862:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove all commands that are registered but unused by Open Ticket.",
					"parameters": [
						{
							"name": "instances",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODSlashCommandUniversalCommand",
									"target": "interface",
									"typeArguments": null
								}
							}
						},
						{
							"name": "guildId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "progress",
							"details": {
								"type": "reference",
								"name": "ODManualProgressBar",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "startListeningToInteractions",
				"comment": "Start listening to the discord.js client `interactionCreate` event.",
				"source": "src/core/api/modules/client.ts:897:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Start listening to the discord.js client `interactionCreate` event.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "updateExistingCommands",
				"comment": "Update all commands that are already registered.",
				"source": "src/core/api/modules/client.ts:848:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Update all commands that are already registered.",
					"parameters": [
						{
							"name": "instances",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODSlashCommand",
									"target": "class",
									"typeArguments": null
								}
							}
						},
						{
							"name": "progress",
							"details": {
								"type": "reference",
								"name": "ODManualProgressBar",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODTextCommand",
		"comment": "## ODTextCommand `class`\nThis is an Open Ticket text command.\n\nWhen registered, you can listen for this command using the `ODCommandResponder`. The advantages of using this class for creating a text command are:\n- automatic option parsing (even for channels, users, roles & mentions)!\n- automatic errors on invalid parameters\n- error reporting to the user when the bot fails to respond\n- plugins can extend this command\n\nAnd more!",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1119:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/client.ts:1125:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "builder",
							"details": {
								"type": "reference",
								"name": "ODTextCommandBuilder",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTextCommand",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "builder",
				"comment": "The builder for this slash command.",
				"source": "src/core/api/modules/client.ts:1121:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommandBuilder",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this slash command.",
				"source": "src/core/api/modules/client.ts:1123:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODTextCommandManager",
		"comment": "## ODTextCommandManager `class`\nThis is an Open Ticket client text manager.\n\nIt's responsible for managing all the text commands from the client.\n\nHere, you can add & remove text commands & the bot will do the (de)registering.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1272:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/client.ts:1284:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "manager",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTextCommandManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "listenerLimit",
				"comment": "Set the soft limit for maximum amount of listeners. A warning will be shown when there are more listeners than this limit.",
				"source": "src/core/api/modules/client.ts:1282:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "manager",
				"comment": "Copy of discord.js client.",
				"source": "src/core/api/modules/client.ts:1276:4",
				"details": {
					"type": "reference",
					"name": "ODClientManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/client.ts:1780:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODTextCommand",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODTextCommand",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTextCommand",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODTextCommand",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODTextCommand",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTextCommand",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTextCommand",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODTextCommand",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTextCommand",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTextCommand",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onError",
				"comment": "Callback on error from all the registered text commands",
				"source": "src/core/api/modules/client.ts:1776:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Callback on error from all the registered text commands",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODTextCommandErrorCallback",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onInteraction",
				"comment": "Callback on interaction from one of the registered text commands",
				"source": "src/core/api/modules/client.ts:1762:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Callback on interaction from one of the registered text commands",
					"parameters": [
						{
							"name": "commandPrefix",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "commandName",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "internal",
										"name": "RegExp",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODTextCommandInteractionCallback",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTextCommand",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODTextCommand",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "startListeningToInteractions",
				"comment": "Start listening to the discord.js client `messageCreate` event.",
				"source": "src/core/api/modules/client.ts:1733:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Start listening to the discord.js client `messageCreate` event.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODSlashCommandBuilder",
		"comment": "## ODSlashCommandBuilder `interface`\nThe builder for slash commands. Here you can add options to the command.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:517:17",
		"children": [
			{
				"type": "property",
				"name": "contexts",
				"comment": "This field is required in Open Ticket for future compatibility.",
				"source": "src/core/api/modules/client.ts:523:4",
				"details": {
					"type": "array",
					"child": {
						"type": "external",
						"package": "discord-api-types",
						"name": "InteractionContextType",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "defaultMemberPermissions",
				"comment": null,
				"source": "node_modules/discord.js/typings/index.d.ts:5000:2",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "PermissionResolvable",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "description",
				"comment": null,
				"source": "node_modules/discord.js/typings/index.d.ts:5050:2",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "descriptionLocalizations",
				"comment": null,
				"source": "node_modules/discord.js/typings/index.d.ts:5051:2",
				"details": {
					"type": "internal",
					"name": "Partial",
					"typeArguments": [
						{
							"type": "internal",
							"name": "Record",
							"typeArguments": [
								{
									"type": "external",
									"package": "discord-api-types",
									"name": "Locale",
									"typeArguments": null
								},
								{
									"type": "union",
									"children": [
										{
											"type": "literal",
											"name": "null"
										},
										{
											"type": "primitive",
											"name": "string"
										}
									]
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "dmPermission",
				"comment": "",
				"source": "src/core/api/modules/client.ts:519:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "integrationTypes",
				"comment": "This field is required in Open Ticket for future compatibility.",
				"source": "src/core/api/modules/client.ts:521:4",
				"details": {
					"type": "array",
					"child": {
						"type": "external",
						"package": "discord-api-types",
						"name": "ApplicationIntegrationType",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": null,
				"source": "node_modules/discord.js/typings/index.d.ts:4997:2",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "nameLocalizations",
				"comment": null,
				"source": "node_modules/discord.js/typings/index.d.ts:4998:2",
				"details": {
					"type": "internal",
					"name": "Partial",
					"typeArguments": [
						{
							"type": "internal",
							"name": "Record",
							"typeArguments": [
								{
									"type": "external",
									"package": "discord-api-types",
									"name": "Locale",
									"typeArguments": null
								},
								{
									"type": "union",
									"children": [
										{
											"type": "literal",
											"name": "null"
										},
										{
											"type": "primitive",
											"name": "string"
										}
									]
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "nsfw",
				"comment": null,
				"source": "node_modules/discord.js/typings/index.d.ts:5001:2",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": null,
				"source": "node_modules/discord.js/typings/index.d.ts:5053:2",
				"details": {
					"type": "readonly",
					"child": {
						"type": "array",
						"child": {
							"type": "external",
							"package": "discord.js",
							"name": "ApplicationCommandOptionData",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": null,
				"source": "node_modules/discord.js/typings/index.d.ts:5052:2",
				"details": {
					"type": "external",
					"package": "discord-api-types",
					"name": "ChatInput",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODSlashCommandUniversalCommand",
		"comment": "## ODSlashCommandUniversalCommand `interface`\nA universal template for a slash command.\n\nWhy universal? Both **existing slash commands** & **unregistered templates** can be converted to this type.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:487:17",
		"children": [
			{
				"type": "property",
				"name": "contexts",
				"comment": "A list of contexts where you can use this command.",
				"source": "src/core/api/modules/client.ts:511:4",
				"details": {
					"type": "readonly",
					"child": {
						"type": "array",
						"child": {
							"type": "external",
							"package": "discord-api-types",
							"name": "InteractionContextType",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "property",
				"name": "defaultMemberPermissions",
				"comment": "A bitfield of the user permissions required to use this command.",
				"source": "src/core/api/modules/client.ts:505:4",
				"details": {
					"type": "primitive",
					"name": "bigint"
				}
			},
			{
				"type": "property",
				"name": "description",
				"comment": "The description of this command.",
				"source": "src/core/api/modules/client.ts:495:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "descriptionLocalizations",
				"comment": "All localized descriptions of this command.",
				"source": "src/core/api/modules/client.ts:497:4",
				"details": {
					"type": "readonly",
					"child": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSlashCommandUniversalTranslation",
							"target": "interface",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "property",
				"name": "dmPermission",
				"comment": "Is this command available in DM?",
				"source": "src/core/api/modules/client.ts:507:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "guildId",
				"comment": "The id of the guild this command is registered in.",
				"source": "src/core/api/modules/client.ts:499:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "integrationTypes",
				"comment": "A list of contexts where you can install this command.",
				"source": "src/core/api/modules/client.ts:509:4",
				"details": {
					"type": "readonly",
					"child": {
						"type": "array",
						"child": {
							"type": "external",
							"package": "discord-api-types",
							"name": "ApplicationIntegrationType",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this command.",
				"source": "src/core/api/modules/client.ts:491:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "nameLocalizations",
				"comment": "All localized names of this command.",
				"source": "src/core/api/modules/client.ts:493:4",
				"details": {
					"type": "readonly",
					"child": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSlashCommandUniversalTranslation",
							"target": "interface",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "property",
				"name": "nsfw",
				"comment": "Is this command for 18+ users only?",
				"source": "src/core/api/modules/client.ts:501:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "A list of options for this command.",
				"source": "src/core/api/modules/client.ts:503:4",
				"details": {
					"type": "readonly",
					"child": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSlashCommandUniversalOption",
							"target": "interface",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this command. (required => `ChatInput`)",
				"source": "src/core/api/modules/client.ts:489:4",
				"details": {
					"type": "external",
					"package": "discord-api-types",
					"name": "ChatInput",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODSlashCommandUniversalOption",
		"comment": "## ODSlashCommandUniversalOption `interface`\nA universal template for a slash command option.\n\nWhy universal? Both **existing slash commands** & **unregistered templates** can be converted to this type.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:450:17",
		"children": [
			{
				"type": "property",
				"name": "autocomplete",
				"comment": "Is autocomplete enabled in this option?",
				"source": "src/core/api/modules/client.ts:465:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "channelTypes",
				"comment": "A list of allowed channel types for this option (only when type is `channel`)",
				"source": "src/core/api/modules/client.ts:471:4",
				"details": {
					"type": "readonly",
					"child": {
						"type": "array",
						"child": {
							"type": "external",
							"package": "discord-api-types",
							"name": "ChannelType",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "property",
				"name": "choices",
				"comment": "Choices for this option (only when type is `string`)",
				"source": "src/core/api/modules/client.ts:467:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODSlashCommandUniversalOptionChoice",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "description",
				"comment": "The description of this option.",
				"source": "src/core/api/modules/client.ts:458:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "descriptionLocalizations",
				"comment": "All localized descriptions of this option.",
				"source": "src/core/api/modules/client.ts:460:4",
				"details": {
					"type": "readonly",
					"child": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSlashCommandUniversalTranslation",
							"target": "interface",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "property",
				"name": "maxLength",
				"comment": "The maximum length required for this option (only when type is `string`)",
				"source": "src/core/api/modules/client.ts:479:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "maxValue",
				"comment": "The maximum amount required for this option (only when type is `number` or `integer`)",
				"source": "src/core/api/modules/client.ts:475:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "minLength",
				"comment": "The minimum length required for this option (only when type is `string`)",
				"source": "src/core/api/modules/client.ts:477:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "minValue",
				"comment": "The minimum amount required for this option (only when type is `number` or `integer`)",
				"source": "src/core/api/modules/client.ts:473:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option.",
				"source": "src/core/api/modules/client.ts:454:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "nameLocalizations",
				"comment": "All localized names of this option.",
				"source": "src/core/api/modules/client.ts:456:4",
				"details": {
					"type": "readonly",
					"child": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSlashCommandUniversalTranslation",
							"target": "interface",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "A list of sub-options for this option (only when type is `subCommand` or `subCommandGroup`)",
				"source": "src/core/api/modules/client.ts:469:4",
				"details": {
					"type": "readonly",
					"child": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSlashCommandUniversalOption",
							"target": "interface",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "property",
				"name": "required",
				"comment": "Is this option required?",
				"source": "src/core/api/modules/client.ts:462:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option.",
				"source": "src/core/api/modules/client.ts:452:4",
				"details": {
					"type": "external",
					"package": "discord-api-types",
					"name": "ApplicationCommandOptionType",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODSlashCommandUniversalOptionChoice",
		"comment": "## ODSlashCommandUniversalOptionChoice `interface`\nA universal template for a slash command option choice. (used in `string` options)\n\nWhy universal? Both **existing slash commands** & **unregistered templates** can be converted to this type.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:436:17",
		"children": [
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this choice.",
				"source": "src/core/api/modules/client.ts:438:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "nameLocalizations",
				"comment": "All localized names of this choice.",
				"source": "src/core/api/modules/client.ts:440:4",
				"details": {
					"type": "readonly",
					"child": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSlashCommandUniversalTranslation",
							"target": "interface",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The value of this choice.",
				"source": "src/core/api/modules/client.ts:442:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODSlashCommandUniversalTranslation",
		"comment": "## ODSlashCommandUniversalTranslation `interface`\nA universal template for a slash command translation. (used in names & descriptions)\n\nWhy universal? Both **existing slash commands** & **unregistered templates** can be converted to this type.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:424:17",
		"children": [
			{
				"type": "property",
				"name": "language",
				"comment": "The language code or locale of this language.",
				"source": "src/core/api/modules/client.ts:426:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"id\""
						},
						{
							"type": "literal",
							"name": "\"en-US\""
						},
						{
							"type": "literal",
							"name": "\"en-GB\""
						},
						{
							"type": "literal",
							"name": "\"bg\""
						},
						{
							"type": "literal",
							"name": "\"zh-CN\""
						},
						{
							"type": "literal",
							"name": "\"zh-TW\""
						},
						{
							"type": "literal",
							"name": "\"hr\""
						},
						{
							"type": "literal",
							"name": "\"cs\""
						},
						{
							"type": "literal",
							"name": "\"da\""
						},
						{
							"type": "literal",
							"name": "\"nl\""
						},
						{
							"type": "literal",
							"name": "\"fi\""
						},
						{
							"type": "literal",
							"name": "\"fr\""
						},
						{
							"type": "literal",
							"name": "\"de\""
						},
						{
							"type": "literal",
							"name": "\"el\""
						},
						{
							"type": "literal",
							"name": "\"hi\""
						},
						{
							"type": "literal",
							"name": "\"hu\""
						},
						{
							"type": "literal",
							"name": "\"it\""
						},
						{
							"type": "literal",
							"name": "\"ja\""
						},
						{
							"type": "literal",
							"name": "\"ko\""
						},
						{
							"type": "literal",
							"name": "\"lt\""
						},
						{
							"type": "literal",
							"name": "\"no\""
						},
						{
							"type": "literal",
							"name": "\"pl\""
						},
						{
							"type": "literal",
							"name": "\"pt-BR\""
						},
						{
							"type": "literal",
							"name": "\"ro\""
						},
						{
							"type": "literal",
							"name": "\"ru\""
						},
						{
							"type": "literal",
							"name": "\"es-ES\""
						},
						{
							"type": "literal",
							"name": "\"es-419\""
						},
						{
							"type": "literal",
							"name": "\"sv-SE\""
						},
						{
							"type": "literal",
							"name": "\"th\""
						},
						{
							"type": "literal",
							"name": "\"tr\""
						},
						{
							"type": "literal",
							"name": "\"uk\""
						},
						{
							"type": "literal",
							"name": "\"vi\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The translation of the name in this language.",
				"source": "src/core/api/modules/client.ts:428:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandBuilder",
		"comment": "## ODTextCommandBuilder `interface`\nThe builder for text commands. Here you can add options to the command.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1091:17",
		"children": [
			{
				"type": "property",
				"name": "allowBots",
				"comment": "Are bots allowed to execute this command?",
				"source": "src/core/api/modules/client.ts:1103:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "allowedGuildIds",
				"comment": "When specified, only allow this command to be executed in the following guilds",
				"source": "src/core/api/modules/client.ts:1101:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "dmPermission",
				"comment": "Is this command allowed in dm?",
				"source": "src/core/api/modules/client.ts:1097:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "guildPermission",
				"comment": "Is this command allowed in guilds?",
				"source": "src/core/api/modules/client.ts:1099:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this command (can include spaces for subcommands)",
				"source": "src/core/api/modules/client.ts:1095:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The options for this text command (like slash commands)",
				"source": "src/core/api/modules/client.ts:1105:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODTextCommandBuilderOption",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "prefix",
				"comment": "The prefix of this command",
				"source": "src/core/api/modules/client.ts:1093:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandBuilderBaseOption",
		"comment": "## ODTextCommandBuilderBaseOption `interface`\nThe default option builder for text commands.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:981:17",
		"children": [
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option",
				"source": "src/core/api/modules/client.ts:983:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "required",
				"comment": "Is this option required? (optional options can only exist at the end of the command!)",
				"source": "src/core/api/modules/client.ts:987:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option",
				"source": "src/core/api/modules/client.ts:985:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommandBuilderBaseOptionType",
					"target": "type",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandBuilderBooleanOption",
		"comment": "## ODTextCommandBuilderBooleanOption `interface`\nThe boolean option builder for text commands.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1029:17",
		"children": [
			{
				"type": "property",
				"name": "falseValue",
				"comment": "The value when `false`",
				"source": "src/core/api/modules/client.ts:1034:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option",
				"source": "src/core/api/modules/client.ts:983:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "required",
				"comment": "Is this option required? (optional options can only exist at the end of the command!)",
				"source": "src/core/api/modules/client.ts:987:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "trueValue",
				"comment": "The value when `true`",
				"source": "src/core/api/modules/client.ts:1032:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option",
				"source": "src/core/api/modules/client.ts:1030:4",
				"details": {
					"type": "literal",
					"name": "\"boolean\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandBuilderChannelOption",
		"comment": "## ODTextCommandBuilderChannelOption `interface`\nThe channel option builder for text commands.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1040:17",
		"children": [
			{
				"type": "property",
				"name": "channelTypes",
				"comment": "When specified, only allow the following channel types",
				"source": "src/core/api/modules/client.ts:1043:4",
				"details": {
					"type": "array",
					"child": {
						"type": "external",
						"package": "discord-api-types",
						"name": "GuildChannelType",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option",
				"source": "src/core/api/modules/client.ts:983:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "required",
				"comment": "Is this option required? (optional options can only exist at the end of the command!)",
				"source": "src/core/api/modules/client.ts:987:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option",
				"source": "src/core/api/modules/client.ts:1041:4",
				"details": {
					"type": "literal",
					"name": "\"channel\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandBuilderGuildMemberOption",
		"comment": "## ODTextCommandBuilderGuildMemberOption `interface`\nThe guild member option builder for text commands.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1063:17",
		"children": [
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option",
				"source": "src/core/api/modules/client.ts:983:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "required",
				"comment": "Is this option required? (optional options can only exist at the end of the command!)",
				"source": "src/core/api/modules/client.ts:987:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option",
				"source": "src/core/api/modules/client.ts:1064:4",
				"details": {
					"type": "literal",
					"name": "\"guildmember\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandBuilderMentionableOption",
		"comment": "## ODTextCommandBuilderMentionableOption `interface`\nThe mentionable option builder for text commands.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1070:17",
		"children": [
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option",
				"source": "src/core/api/modules/client.ts:983:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "required",
				"comment": "Is this option required? (optional options can only exist at the end of the command!)",
				"source": "src/core/api/modules/client.ts:987:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option",
				"source": "src/core/api/modules/client.ts:1071:4",
				"details": {
					"type": "literal",
					"name": "\"mentionable\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandBuilderNumberOption",
		"comment": "## ODTextCommandBuilderNumberOption `interface`\nThe number option builder for text commands.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1010:17",
		"children": [
			{
				"type": "property",
				"name": "allowDecimal",
				"comment": "Allow a number with decimal",
				"source": "src/core/api/modules/client.ts:1023:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "allowNegative",
				"comment": "Allow the number to be negative",
				"source": "src/core/api/modules/client.ts:1017:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "allowPositive",
				"comment": "Allow the number to be positive",
				"source": "src/core/api/modules/client.ts:1019:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "allowZero",
				"comment": "Allow the number to be zero",
				"source": "src/core/api/modules/client.ts:1021:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "max",
				"comment": "The number can't be higher than this value",
				"source": "src/core/api/modules/client.ts:1013:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "min",
				"comment": "The number can't be lower than this value",
				"source": "src/core/api/modules/client.ts:1015:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option",
				"source": "src/core/api/modules/client.ts:983:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "required",
				"comment": "Is this option required? (optional options can only exist at the end of the command!)",
				"source": "src/core/api/modules/client.ts:987:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option",
				"source": "src/core/api/modules/client.ts:1011:4",
				"details": {
					"type": "literal",
					"name": "\"number\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandBuilderRoleOption",
		"comment": "## ODTextCommandBuilderRoleOption `interface`\nThe role option builder for text commands.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1049:17",
		"children": [
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option",
				"source": "src/core/api/modules/client.ts:983:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "required",
				"comment": "Is this option required? (optional options can only exist at the end of the command!)",
				"source": "src/core/api/modules/client.ts:987:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option",
				"source": "src/core/api/modules/client.ts:1050:4",
				"details": {
					"type": "literal",
					"name": "\"role\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandBuilderStringOption",
		"comment": "## ODTextCommandBuilderStringOption `interface`\nThe string option builder for text commands.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:993:17",
		"children": [
			{
				"type": "property",
				"name": "allowSpaces",
				"comment": "When this is the last option, allow this string to contain spaces",
				"source": "src/core/api/modules/client.ts:1004:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "choices",
				"comment": "The string needs to match one of these choices or it will be invalid",
				"source": "src/core/api/modules/client.ts:1002:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "maxLength",
				"comment": "Set the maximum length of this string",
				"source": "src/core/api/modules/client.ts:996:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "minLength",
				"comment": "Set the minimum length of this string",
				"source": "src/core/api/modules/client.ts:998:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option",
				"source": "src/core/api/modules/client.ts:983:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "regex",
				"comment": "The string needs to match this regex or it will be invalid",
				"source": "src/core/api/modules/client.ts:1000:4",
				"details": {
					"type": "internal",
					"name": "RegExp",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "required",
				"comment": "Is this option required? (optional options can only exist at the end of the command!)",
				"source": "src/core/api/modules/client.ts:987:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option",
				"source": "src/core/api/modules/client.ts:994:4",
				"details": {
					"type": "literal",
					"name": "\"string\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandBuilderUserOption",
		"comment": "## ODTextCommandBuilderUserOption `interface`\nThe user option builder for text commands.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1056:17",
		"children": [
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option",
				"source": "src/core/api/modules/client.ts:983:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "required",
				"comment": "Is this option required? (optional options can only exist at the end of the command!)",
				"source": "src/core/api/modules/client.ts:987:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option",
				"source": "src/core/api/modules/client.ts:1057:4",
				"details": {
					"type": "literal",
					"name": "\"user\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandErrorBase",
		"comment": "## ODTextCommandErrorBase `interface`\nThe object returned from a text command error callback.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1166:17",
		"children": [
			{
				"type": "property",
				"name": "msg",
				"comment": "The message this error originates from",
				"source": "src/core/api/modules/client.ts:1170:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "Message",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of text command error",
				"source": "src/core/api/modules/client.ts:1168:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"unknown_prefix\""
						},
						{
							"type": "literal",
							"name": "\"unknown_command\""
						},
						{
							"type": "literal",
							"name": "\"invalid_option\""
						},
						{
							"type": "literal",
							"name": "\"missing_option\""
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandErrorInvalidOption",
		"comment": "## ODTextCommandErrorInvalidOption `interface`\nThe object returned from a text command invalid option error callback.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1215:17",
		"children": [
			{
				"type": "property",
				"name": "command",
				"comment": "The command this error originates from",
				"source": "src/core/api/modules/client.ts:1218:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "location",
				"comment": "The location that this option was found",
				"source": "src/core/api/modules/client.ts:1226:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "msg",
				"comment": "The message this error originates from",
				"source": "src/core/api/modules/client.ts:1170:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "Message",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The command name this error originates from (can include spaces for subcommands)",
				"source": "src/core/api/modules/client.ts:1222:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "option",
				"comment": "The option that this error originates from",
				"source": "src/core/api/modules/client.ts:1224:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommandBuilderOption",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "prefix",
				"comment": "The command prefix this error originates from",
				"source": "src/core/api/modules/client.ts:1220:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "reason",
				"comment": "The reason for this invalid option",
				"source": "src/core/api/modules/client.ts:1230:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommandErrorInvalidOptionReason",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of text command error",
				"source": "src/core/api/modules/client.ts:1216:4",
				"details": {
					"type": "literal",
					"name": "\"invalid_option\""
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The current value of this invalid option",
				"source": "src/core/api/modules/client.ts:1228:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandErrorMissingOption",
		"comment": "## ODTextCommandErrorMissingOption `interface`\nThe object returned from a text command missing option error callback.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1236:17",
		"children": [
			{
				"type": "property",
				"name": "command",
				"comment": "The command this error originates from",
				"source": "src/core/api/modules/client.ts:1239:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommand",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "location",
				"comment": "The location that this option was found",
				"source": "src/core/api/modules/client.ts:1247:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "msg",
				"comment": "The message this error originates from",
				"source": "src/core/api/modules/client.ts:1170:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "Message",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The command name this error originates from (can include spaces for subcommands)",
				"source": "src/core/api/modules/client.ts:1243:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "option",
				"comment": "The option that this error originates from",
				"source": "src/core/api/modules/client.ts:1245:4",
				"details": {
					"type": "reference",
					"name": "ODTextCommandBuilderOption",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "prefix",
				"comment": "The command prefix this error originates from",
				"source": "src/core/api/modules/client.ts:1241:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of text command error",
				"source": "src/core/api/modules/client.ts:1237:4",
				"details": {
					"type": "literal",
					"name": "\"missing_option\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandErrorUnknownCommand",
		"comment": "## ODTextCommandErrorUnknownCommand `interface`\nThe object returned from a text command unknown command error callback.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1183:17",
		"children": [
			{
				"type": "property",
				"name": "msg",
				"comment": "The message this error originates from",
				"source": "src/core/api/modules/client.ts:1170:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "Message",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of text command error",
				"source": "src/core/api/modules/client.ts:1184:4",
				"details": {
					"type": "literal",
					"name": "\"unknown_command\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandErrorUnknownPrefix",
		"comment": "## ODTextCommandErrorUnknownPrefix `interface`\nThe object returned from a text command unknown prefix error callback.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1176:17",
		"children": [
			{
				"type": "property",
				"name": "msg",
				"comment": "The message this error originates from",
				"source": "src/core/api/modules/client.ts:1170:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "Message",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of text command error",
				"source": "src/core/api/modules/client.ts:1177:4",
				"details": {
					"type": "literal",
					"name": "\"unknown_prefix\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTextCommandInteractionOptionBase",
		"comment": "## ODTextCommandInteractionOptionBase `interface`\nThe object returned for options from a text command interaction.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1135:17",
		"children": [
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option",
				"source": "src/core/api/modules/client.ts:1137:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option",
				"source": "src/core/api/modules/client.ts:1139:4",
				"details": {
					"type": "typeParam",
					"name": "Name",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The value of this option",
				"source": "src/core/api/modules/client.ts:1141:4",
				"details": {
					"type": "typeParam",
					"name": "Type",
					"typeArguments": null
				}
			}
		],
		"typeParams": [
			{
				"name": "Name",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "Type",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "type",
		"name": "ODClientActivityStatus",
		"comment": "## ODClientPermissions `type`\nPossible activity statuses for the bot.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:332:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"online\""
					},
					{
						"type": "literal",
						"name": "\"invisible\""
					},
					{
						"type": "literal",
						"name": "\"idle\""
					},
					{
						"type": "literal",
						"name": "\"dnd\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODClientActivityType",
		"comment": "## ODClientActivityType `type`\nPossible activity types for the bot.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:328:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"playing\""
					},
					{
						"type": "literal",
						"name": "\"listening\""
					},
					{
						"type": "literal",
						"name": "\"watching\""
					},
					{
						"type": "literal",
						"name": "\"custom\""
					},
					{
						"type": "literal",
						"name": "false"
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODClientIntents",
		"comment": "## ODClientIntents `type`\nA list of intents required when inviting the bot.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:14:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"Guilds\""
					},
					{
						"type": "literal",
						"name": "\"GuildMembers\""
					},
					{
						"type": "literal",
						"name": "\"GuildModeration\""
					},
					{
						"type": "literal",
						"name": "\"GuildEmojisAndStickers\""
					},
					{
						"type": "literal",
						"name": "\"GuildIntegrations\""
					},
					{
						"type": "literal",
						"name": "\"GuildWebhooks\""
					},
					{
						"type": "literal",
						"name": "\"GuildInvites\""
					},
					{
						"type": "literal",
						"name": "\"GuildVoiceStates\""
					},
					{
						"type": "literal",
						"name": "\"GuildPresences\""
					},
					{
						"type": "literal",
						"name": "\"GuildMessages\""
					},
					{
						"type": "literal",
						"name": "\"GuildMessageReactions\""
					},
					{
						"type": "literal",
						"name": "\"GuildMessageTyping\""
					},
					{
						"type": "literal",
						"name": "\"DirectMessages\""
					},
					{
						"type": "literal",
						"name": "\"DirectMessageReactions\""
					},
					{
						"type": "literal",
						"name": "\"DirectMessageTyping\""
					},
					{
						"type": "literal",
						"name": "\"MessageContent\""
					},
					{
						"type": "literal",
						"name": "\"GuildScheduledEvents\""
					},
					{
						"type": "literal",
						"name": "\"AutoModerationConfiguration\""
					},
					{
						"type": "literal",
						"name": "\"AutoModerationExecution\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODClientPartials",
		"comment": "## ODClientPartials `type`\nA list of partials required for the bot to work. (`Message` & `Channel` are for receiving DM messages from uncached channels)",
		"constant": false,
		"source": "src/core/api/modules/client.ts:22:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"User\""
					},
					{
						"type": "literal",
						"name": "\"Channel\""
					},
					{
						"type": "literal",
						"name": "\"GuildMember\""
					},
					{
						"type": "literal",
						"name": "\"Message\""
					},
					{
						"type": "literal",
						"name": "\"Reaction\""
					},
					{
						"type": "literal",
						"name": "\"GuildScheduledEvent\""
					},
					{
						"type": "literal",
						"name": "\"ThreadMember\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODClientPermissions",
		"comment": "## ODClientPermissions `type`\nA list of permissions required in the server that the bot is active in.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:26:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"CreateInstantInvite\""
					},
					{
						"type": "literal",
						"name": "\"KickMembers\""
					},
					{
						"type": "literal",
						"name": "\"BanMembers\""
					},
					{
						"type": "literal",
						"name": "\"Administrator\""
					},
					{
						"type": "literal",
						"name": "\"ManageChannels\""
					},
					{
						"type": "literal",
						"name": "\"ManageGuild\""
					},
					{
						"type": "literal",
						"name": "\"AddReactions\""
					},
					{
						"type": "literal",
						"name": "\"ViewAuditLog\""
					},
					{
						"type": "literal",
						"name": "\"PrioritySpeaker\""
					},
					{
						"type": "literal",
						"name": "\"Stream\""
					},
					{
						"type": "literal",
						"name": "\"ViewChannel\""
					},
					{
						"type": "literal",
						"name": "\"SendMessages\""
					},
					{
						"type": "literal",
						"name": "\"SendTTSMessages\""
					},
					{
						"type": "literal",
						"name": "\"ManageMessages\""
					},
					{
						"type": "literal",
						"name": "\"EmbedLinks\""
					},
					{
						"type": "literal",
						"name": "\"AttachFiles\""
					},
					{
						"type": "literal",
						"name": "\"ReadMessageHistory\""
					},
					{
						"type": "literal",
						"name": "\"MentionEveryone\""
					},
					{
						"type": "literal",
						"name": "\"UseExternalEmojis\""
					},
					{
						"type": "literal",
						"name": "\"ViewGuildInsights\""
					},
					{
						"type": "literal",
						"name": "\"Connect\""
					},
					{
						"type": "literal",
						"name": "\"Speak\""
					},
					{
						"type": "literal",
						"name": "\"MuteMembers\""
					},
					{
						"type": "literal",
						"name": "\"DeafenMembers\""
					},
					{
						"type": "literal",
						"name": "\"MoveMembers\""
					},
					{
						"type": "literal",
						"name": "\"UseVAD\""
					},
					{
						"type": "literal",
						"name": "\"ChangeNickname\""
					},
					{
						"type": "literal",
						"name": "\"ManageNicknames\""
					},
					{
						"type": "literal",
						"name": "\"ManageRoles\""
					},
					{
						"type": "literal",
						"name": "\"ManageWebhooks\""
					},
					{
						"type": "literal",
						"name": "\"ManageGuildExpressions\""
					},
					{
						"type": "literal",
						"name": "\"UseApplicationCommands\""
					},
					{
						"type": "literal",
						"name": "\"RequestToSpeak\""
					},
					{
						"type": "literal",
						"name": "\"ManageEvents\""
					},
					{
						"type": "literal",
						"name": "\"ManageThreads\""
					},
					{
						"type": "literal",
						"name": "\"CreatePublicThreads\""
					},
					{
						"type": "literal",
						"name": "\"CreatePrivateThreads\""
					},
					{
						"type": "literal",
						"name": "\"UseExternalStickers\""
					},
					{
						"type": "literal",
						"name": "\"SendMessagesInThreads\""
					},
					{
						"type": "literal",
						"name": "\"UseEmbeddedActivities\""
					},
					{
						"type": "literal",
						"name": "\"ModerateMembers\""
					},
					{
						"type": "literal",
						"name": "\"ViewCreatorMonetizationAnalytics\""
					},
					{
						"type": "literal",
						"name": "\"UseSoundboard\""
					},
					{
						"type": "literal",
						"name": "\"UseExternalSounds\""
					},
					{
						"type": "literal",
						"name": "\"SendVoiceMessages\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODClientPriviligedIntents",
		"comment": "## ODClientPriviligedIntents `type`\nA list of priviliged intents required to be enabled in the developer portal.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:18:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"GuildMembers\""
					},
					{
						"type": "literal",
						"name": "\"MessageContent\""
					},
					{
						"type": "literal",
						"name": "\"Presence\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODSlashCommandInteractionCallback",
		"comment": "## ODSlashCommandInteractionCallback `type`\nCallback for the slash command interaction listener.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:732:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "interaction",
						"details": {
							"type": "external",
							"package": "discord.js",
							"name": "discord.ChatInputCommandInteraction",
							"typeArguments": null
						}
					},
					{
						"name": "cmd",
						"details": {
							"type": "reference",
							"name": "ODSlashCommand",
							"target": "class",
							"typeArguments": null
						}
					}
				],
				"returns": {
					"type": "primitive",
					"name": "void"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODSlashCommandRegisteredResult",
		"comment": "## ODSlashCommandRegisteredResult `type`\nThe result which will be returned when getting all (un)registered slash commands from the manager.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:737:12",
		"children": [
			{
				"type": "unknown"
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODSlashCommandUpdateFunction",
		"comment": "## ODSlashCommandUpdateFunction `type`\nThe function responsible for updating slash commands when they already exist.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:933:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "command",
						"details": {
							"type": "reference",
							"name": "ODSlashCommandUniversalCommand",
							"target": "interface",
							"typeArguments": null
						}
					}
				],
				"returns": {
					"type": "primitive",
					"name": "boolean"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODTextCommandBuilderBaseOptionType",
		"comment": "## ODTextCommandBuilderBaseOptionType `type`\nThe types available in the text command option builder.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:976:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"string\""
					},
					{
						"type": "literal",
						"name": "\"number\""
					},
					{
						"type": "literal",
						"name": "\"boolean\""
					},
					{
						"type": "literal",
						"name": "\"user\""
					},
					{
						"type": "literal",
						"name": "\"guildmember\""
					},
					{
						"type": "literal",
						"name": "\"role\""
					},
					{
						"type": "literal",
						"name": "\"mentionable\""
					},
					{
						"type": "literal",
						"name": "\"channel\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODTextCommandBuilderOption",
		"comment": "## ODTextCommandBuilderOption `type`\nThe option builder for text commands.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1077:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "reference",
						"name": "ODTextCommandBuilderStringOption",
						"target": "interface",
						"typeArguments": null
					},
					{
						"type": "reference",
						"name": "ODTextCommandBuilderBooleanOption",
						"target": "interface",
						"typeArguments": null
					},
					{
						"type": "reference",
						"name": "ODTextCommandBuilderNumberOption",
						"target": "interface",
						"typeArguments": null
					},
					{
						"type": "reference",
						"name": "ODTextCommandBuilderChannelOption",
						"target": "interface",
						"typeArguments": null
					},
					{
						"type": "reference",
						"name": "ODTextCommandBuilderRoleOption",
						"target": "interface",
						"typeArguments": null
					},
					{
						"type": "reference",
						"name": "ODTextCommandBuilderUserOption",
						"target": "interface",
						"typeArguments": null
					},
					{
						"type": "reference",
						"name": "ODTextCommandBuilderGuildMemberOption",
						"target": "interface",
						"typeArguments": null
					},
					{
						"type": "reference",
						"name": "ODTextCommandBuilderMentionableOption",
						"target": "interface",
						"typeArguments": null
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODTextCommandError",
		"comment": "## ODTextCommandError `type`\nA list of types returned for errors from a text command interaction.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1253:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "reference",
						"name": "ODTextCommandErrorUnknownPrefix",
						"target": "interface",
						"typeArguments": null
					},
					{
						"type": "reference",
						"name": "ODTextCommandErrorUnknownCommand",
						"target": "interface",
						"typeArguments": null
					},
					{
						"type": "reference",
						"name": "ODTextCommandErrorInvalidOption",
						"target": "interface",
						"typeArguments": null
					},
					{
						"type": "reference",
						"name": "ODTextCommandErrorMissingOption",
						"target": "interface",
						"typeArguments": null
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODTextCommandErrorCallback",
		"comment": "## ODTextCommandErrorCallback `type`\nCallback for the text command error listener.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1263:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "error",
						"details": {
							"type": "reference",
							"name": "ODTextCommandError",
							"target": "type",
							"typeArguments": null
						}
					}
				],
				"returns": {
					"type": "primitive",
					"name": "void"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODTextCommandErrorInvalidOptionReason",
		"comment": "## ODTextCommandErrorInvalidOptionReason `type`\nA list of reasons for the invalid_option error to be thrown.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1190:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"boolean\""
					},
					{
						"type": "literal",
						"name": "\"number_max\""
					},
					{
						"type": "literal",
						"name": "\"number_min\""
					},
					{
						"type": "literal",
						"name": "\"number_decimal\""
					},
					{
						"type": "literal",
						"name": "\"number_negative\""
					},
					{
						"type": "literal",
						"name": "\"number_positive\""
					},
					{
						"type": "literal",
						"name": "\"number_zero\""
					},
					{
						"type": "literal",
						"name": "\"number_invalid\""
					},
					{
						"type": "literal",
						"name": "\"string_max_length\""
					},
					{
						"type": "literal",
						"name": "\"string_min_length\""
					},
					{
						"type": "literal",
						"name": "\"string_regex\""
					},
					{
						"type": "literal",
						"name": "\"string_choice\""
					},
					{
						"type": "literal",
						"name": "\"not_in_guild\""
					},
					{
						"type": "literal",
						"name": "\"channel_not_found\""
					},
					{
						"type": "literal",
						"name": "\"channel_type\""
					},
					{
						"type": "literal",
						"name": "\"user_not_found\""
					},
					{
						"type": "literal",
						"name": "\"member_not_found\""
					},
					{
						"type": "literal",
						"name": "\"role_not_found\""
					},
					{
						"type": "literal",
						"name": "\"mentionable_not_found\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODTextCommandInteractionCallback",
		"comment": "## ODTextCommandInteractionCallback `type`\nCallback for the text command interaction listener.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1161:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "msg",
						"details": {
							"type": "external",
							"package": "discord.js",
							"name": "discord.Message",
							"typeArguments": null
						}
					},
					{
						"name": "cmd",
						"details": {
							"type": "reference",
							"name": "ODTextCommand",
							"target": "class",
							"typeArguments": null
						}
					},
					{
						"name": "options",
						"details": {
							"type": "array",
							"child": {
								"type": "reference",
								"name": "ODTextCommandInteractionOption",
								"target": "type",
								"typeArguments": null
							}
						}
					}
				],
				"returns": {
					"type": "primitive",
					"name": "void"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODTextCommandInteractionOption",
		"comment": "## ODTextCommandInteractionOption `type`\nA list of types returned for options from a text command interaction.",
		"constant": false,
		"source": "src/core/api/modules/client.ts:1147:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "reference",
						"name": "ODTextCommandInteractionOptionBase",
						"target": "interface",
						"typeArguments": [
							{
								"type": "literal",
								"name": "\"string\""
							},
							{
								"type": "primitive",
								"name": "string"
							}
						]
					},
					{
						"type": "reference",
						"name": "ODTextCommandInteractionOptionBase",
						"target": "interface",
						"typeArguments": [
							{
								"type": "literal",
								"name": "\"number\""
							},
							{
								"type": "primitive",
								"name": "number"
							}
						]
					},
					{
						"type": "reference",
						"name": "ODTextCommandInteractionOptionBase",
						"target": "interface",
						"typeArguments": [
							{
								"type": "literal",
								"name": "\"boolean\""
							},
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					},
					{
						"type": "reference",
						"name": "ODTextCommandInteractionOptionBase",
						"target": "interface",
						"typeArguments": [
							{
								"type": "literal",
								"name": "\"channel\""
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "discord.GuildBasedChannel",
								"typeArguments": null
							}
						]
					},
					{
						"type": "reference",
						"name": "ODTextCommandInteractionOptionBase",
						"target": "interface",
						"typeArguments": [
							{
								"type": "literal",
								"name": "\"role\""
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "discord.Role",
								"typeArguments": null
							}
						]
					},
					{
						"type": "reference",
						"name": "ODTextCommandInteractionOptionBase",
						"target": "interface",
						"typeArguments": [
							{
								"type": "literal",
								"name": "\"user\""
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "discord.User",
								"typeArguments": null
							}
						]
					},
					{
						"type": "reference",
						"name": "ODTextCommandInteractionOptionBase",
						"target": "interface",
						"typeArguments": [
							{
								"type": "literal",
								"name": "\"guildmember\""
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "discord.GuildMember",
								"typeArguments": null
							}
						]
					},
					{
						"type": "reference",
						"name": "ODTextCommandInteractionOptionBase",
						"target": "interface",
						"typeArguments": [
							{
								"type": "literal",
								"name": "\"mentionable\""
							},
							{
								"type": "union",
								"children": [
									{
										"type": "external",
										"package": "discord.js",
										"name": "discord.Role",
										"typeArguments": null
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "discord.User",
										"typeArguments": null
									}
								]
							}
						]
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCode",
		"comment": "## ODCode `class`\nThis is an Open Ticket code runner.\n\nUsing this, you're able to execute a function just before the startup screen. (90% of the code is already loaded)\nYou can also specify a priority to change the execution order.\nIn Open Ticket, this is used for the following processes:\n- Autoclose/delete\n- Database syncronisation (with tickets, stats & used options)\n- Panel auto-update\n- Database Garbage Collection (removing tickets that don't exist anymore)\n- And more!",
		"constant": false,
		"source": "src/core/api/modules/code.ts:20:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/code.ts:26:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "func",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [],
								"returns": {
									"type": "union",
									"children": [
										{
											"type": "primitive",
											"name": "void"
										},
										{
											"type": "internal",
											"name": "Promise",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "void"
												}
											]
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCode",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "func",
				"comment": "The main function of this code",
				"source": "src/core/api/modules/code.ts:24:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "primitive",
								"name": "void"
							},
							{
								"type": "internal",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "void"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this code",
				"source": "src/core/api/modules/code.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCodeManager",
		"comment": "## ODCodeManager `class`\nThis is an Open Ticket code manager.\n\nIt manages & executes `ODCode`'s in the correct order.\n\nUse this to register a function/code which executes just before the startup screen. (90% is already loaded)",
		"constant": false,
		"source": "src/core/api/modules/code.ts:40:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/code.ts:41:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCodeManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODCode",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODCode",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "execute",
				"comment": "Execute all `ODCode` functions in order of their priority (high to low).",
				"source": "src/core/api/modules/code.ts:46:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Execute all `ODCode` functions in order of their priority (high to low).",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCode",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCode",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODCode",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODCode",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCode",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCode",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODCode",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCode",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCode",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCode",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCode",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODConfig",
		"comment": "## ODConfig `class`\nThis is an Open Ticket config helper.\nThis class doesn't do anything at all, it just gives a template & basic methods for a config. Use `ODJsonConfig` instead!\n\nYou can use this class if you want to create your own config implementation (e.g. `yml`, `xml`,...)!",
		"constant": false,
		"source": "src/core/api/modules/config.ts:38:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/config.ts:46:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "data",
							"details": {
								"type": "primitive",
								"name": "any"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConfig",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "An object/array of the entire config file! Variables inside it can be edited while the bot is running!",
				"source": "src/core/api/modules/config.ts:44:4",
				"details": {
					"type": "primitive",
					"name": "any"
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/config.ts:40:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/config.ts:42:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the config.",
				"source": "src/core/api/modules/config.ts:52:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Init the config.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODConfigManager",
		"comment": "## ODConfigManager `class`\nThis is an Open Ticket config manager.\n\nIt manages all config files in the bot and allows plugins to access config files from Open Ticket & other plugins!\n\nYou can use this class to get/change/add a config file (`ODConfig`) in your plugin!",
		"constant": false,
		"source": "src/core/api/modules/config.ts:16:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/config.ts:17:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConfigManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODConfig",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODConfig",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODConfig",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODConfig",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODConfig",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODConfig",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODConfig",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODConfig",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init all config files.",
				"source": "src/core/api/modules/config.ts:21:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Init all config files.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODConfig",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODConfig",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODConfig",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODConfig",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODConfig",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODJsonConfig",
		"comment": "## ODJsonConfig `class`\nThis is an Open Ticket JSON config.\nYou can use this class to get & edit variables from the config files or to create your own JSON config!",
		"constant": false,
		"source": "src/core/api/modules/config.ts:67:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/config.ts:71:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "file",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "customPath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODJsonConfig",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "An object/array of the entire config file! Variables inside it can be edited while the bot is running!",
				"source": "src/core/api/modules/config.ts:44:4",
				"details": {
					"type": "primitive",
					"name": "any"
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/config.ts:40:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/config.ts:42:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the config.",
				"source": "src/core/api/modules/config.ts:78:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Init the config.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "onReload",
				"comment": "Listen for a reload of this JSON file!",
				"source": "src/core/api/modules/config.ts:105:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Listen for a reload of this JSON file!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "internal",
								"name": "Function",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "reload",
				"comment": "Reload the JSON file. Be aware that this doesn't update classes that used individual parts of the config data!",
				"source": "src/core/api/modules/config.ts:88:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Reload the JSON file. Be aware that this doesn't update classes that used individual parts of the config data!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "removeAllReloadListeners",
				"comment": "Remove all reload listeners. Not recommended!",
				"source": "src/core/api/modules/config.ts:109:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove all reload listeners. Not recommended!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODConsoleDebugMessage",
		"comment": "## ODConsoleDebugMessage `class`\nThis is an Open Ticket console debug message.\n\nIt is the same as a normal `ODConsoleMessage`, but it has a predefined prefix & color scheme for the \"DEBUG\" messages!",
		"constant": false,
		"source": "src/core/api/modules/console.ts:157:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:158:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODConsoleMessageParam",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleDebugMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "color",
				"comment": "The color of the prefix of this message",
				"source": "src/core/api/modules/console.ts:41:4",
				"details": {
					"type": "reference",
					"name": "ODValidConsoleColor",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": "The main message sent in the console",
				"source": "src/core/api/modules/console.ts:35:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "params",
				"comment": "An array of all the parameters in this message",
				"source": "src/core/api/modules/console.ts:37:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODConsoleMessageParam",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "prefix",
				"comment": "The prefix of this message (!uppercase recommended!)",
				"source": "src/core/api/modules/console.ts:39:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "createParamsString",
				"comment": "Render the parameters of this message in a specific color.",
				"source": "src/core/api/modules/console.ts:80:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render the parameters of this message in a specific color.",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "reference",
								"name": "ODValidConsoleColor",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this message to the console using `console.log`! Returns `false` when something went wrong.",
				"source": "src/core/api/modules/console.ts:55:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this message to the console using `console.log`! Returns `false` when something went wrong.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "setColor",
				"comment": "Set the prefix color",
				"source": "src/core/api/modules/console.ts:109:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the prefix color",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "reference",
								"name": "ODValidConsoleColor",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleDebugMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setMessage",
				"comment": "Set the message",
				"source": "src/core/api/modules/console.ts:94:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the message",
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleDebugMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setParams",
				"comment": "Set the params",
				"source": "src/core/api/modules/console.ts:99:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the params",
					"parameters": [
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODConsoleMessageParam",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleDebugMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setPrefix",
				"comment": "Set the prefix",
				"source": "src/core/api/modules/console.ts:104:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the prefix",
					"parameters": [
						{
							"name": "prefix",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleDebugMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "toDebugString",
				"comment": "Create a more-detailed, non-colored version of this message to store it in the `otdebug.txt` file!",
				"source": "src/core/api/modules/console.ts:69:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Create a more-detailed, non-colored version of this message to store it in the `otdebug.txt` file!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODConsoleErrorMessage",
		"comment": "## ODConsoleErrorMessage `class`\nThis is an Open Ticket console error message.\n\nIt is the same as a normal `ODConsoleMessage`, but it has a predefined prefix & color scheme for the \"ERROR\" messages!",
		"constant": false,
		"source": "src/core/api/modules/console.ts:179:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:180:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODConsoleMessageParam",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleErrorMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "color",
				"comment": "The color of the prefix of this message",
				"source": "src/core/api/modules/console.ts:41:4",
				"details": {
					"type": "reference",
					"name": "ODValidConsoleColor",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": "The main message sent in the console",
				"source": "src/core/api/modules/console.ts:35:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "params",
				"comment": "An array of all the parameters in this message",
				"source": "src/core/api/modules/console.ts:37:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODConsoleMessageParam",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "prefix",
				"comment": "The prefix of this message (!uppercase recommended!)",
				"source": "src/core/api/modules/console.ts:39:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "createParamsString",
				"comment": "Render the parameters of this message in a specific color.",
				"source": "src/core/api/modules/console.ts:80:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render the parameters of this message in a specific color.",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "reference",
								"name": "ODValidConsoleColor",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this message to the console using `console.log`! Returns `false` when something went wrong.",
				"source": "src/core/api/modules/console.ts:55:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this message to the console using `console.log`! Returns `false` when something went wrong.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "setColor",
				"comment": "Set the prefix color",
				"source": "src/core/api/modules/console.ts:109:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the prefix color",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "reference",
								"name": "ODValidConsoleColor",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleErrorMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setMessage",
				"comment": "Set the message",
				"source": "src/core/api/modules/console.ts:94:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the message",
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleErrorMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setParams",
				"comment": "Set the params",
				"source": "src/core/api/modules/console.ts:99:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the params",
					"parameters": [
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODConsoleMessageParam",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleErrorMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setPrefix",
				"comment": "Set the prefix",
				"source": "src/core/api/modules/console.ts:104:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the prefix",
					"parameters": [
						{
							"name": "prefix",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleErrorMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "toDebugString",
				"comment": "Create a more-detailed, non-colored version of this message to store it in the `otdebug.txt` file!",
				"source": "src/core/api/modules/console.ts:69:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Create a more-detailed, non-colored version of this message to store it in the `otdebug.txt` file!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODConsoleInfoMessage",
		"comment": "## ODConsoleInfoMessage `class`\nThis is an Open Ticket console info message.\n\nIt is the same as a normal `ODConsoleMessage`, but it has a predefined prefix & color scheme for the \"INFO\" messages!",
		"constant": false,
		"source": "src/core/api/modules/console.ts:124:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:125:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODConsoleMessageParam",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleInfoMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "color",
				"comment": "The color of the prefix of this message",
				"source": "src/core/api/modules/console.ts:41:4",
				"details": {
					"type": "reference",
					"name": "ODValidConsoleColor",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": "The main message sent in the console",
				"source": "src/core/api/modules/console.ts:35:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "params",
				"comment": "An array of all the parameters in this message",
				"source": "src/core/api/modules/console.ts:37:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODConsoleMessageParam",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "prefix",
				"comment": "The prefix of this message (!uppercase recommended!)",
				"source": "src/core/api/modules/console.ts:39:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "createParamsString",
				"comment": "Render the parameters of this message in a specific color.",
				"source": "src/core/api/modules/console.ts:80:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render the parameters of this message in a specific color.",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "reference",
								"name": "ODValidConsoleColor",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this message to the console using `console.log`! Returns `false` when something went wrong.",
				"source": "src/core/api/modules/console.ts:55:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this message to the console using `console.log`! Returns `false` when something went wrong.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "setColor",
				"comment": "Set the prefix color",
				"source": "src/core/api/modules/console.ts:109:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the prefix color",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "reference",
								"name": "ODValidConsoleColor",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleInfoMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setMessage",
				"comment": "Set the message",
				"source": "src/core/api/modules/console.ts:94:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the message",
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleInfoMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setParams",
				"comment": "Set the params",
				"source": "src/core/api/modules/console.ts:99:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the params",
					"parameters": [
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODConsoleMessageParam",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleInfoMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setPrefix",
				"comment": "Set the prefix",
				"source": "src/core/api/modules/console.ts:104:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the prefix",
					"parameters": [
						{
							"name": "prefix",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleInfoMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "toDebugString",
				"comment": "Create a more-detailed, non-colored version of this message to store it in the `otdebug.txt` file!",
				"source": "src/core/api/modules/console.ts:69:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Create a more-detailed, non-colored version of this message to store it in the `otdebug.txt` file!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODConsoleManager",
		"comment": "## ODConsoleManager `class`\nThis is the Open Ticket console manager.\n\nIt handles the entire console system of Open Ticket. It's also the place where you need to log `ODConsoleMessage`'s.\nThis manager keeps a short history of messages sent to the console which is configurable by plugins.\n\nThe debug file (`otdebug.txt`) is handled in a sub-manager!",
		"constant": false,
		"source": "src/core/api/modules/console.ts:237:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:245:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "historylength",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "debugfile",
							"details": {
								"type": "reference",
								"name": "ODDebugFileManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "debugfile",
				"comment": "An alias to the debugfile manager. (`otdebug.txt`)",
				"source": "src/core/api/modules/console.ts:243:4",
				"details": {
					"type": "reference",
					"name": "ODDebugFileManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "history",
				"comment": "The history of `ODConsoleMessage`'s and `ODError`'s since startup",
				"source": "src/core/api/modules/console.ts:239:4",
				"details": {
					"type": "array",
					"child": {
						"type": "union",
						"children": [
							{
								"type": "reference",
								"name": "ODConsoleMessage",
								"target": "class",
								"typeArguments": null
							},
							{
								"type": "reference",
								"name": "ODError",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "historylength",
				"comment": "The max length of the history. The oldest messages will be removed when over the limit",
				"source": "src/core/api/modules/console.ts:241:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "method",
				"name": "log",
				"comment": "Log a message to the console ... But in the Open Ticket way :)",
				"source": "src/core/api/modules/console.ts:251:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Log a message to the console ... But in the Open Ticket way :)",
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "reference",
								"name": "ODConsoleMessage",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODConsoleMessage",
		"comment": "## ODConsoleMessage `class`\nThis is an Open Ticket console message.\n\nIt is used to create beautiful & styled logs in the console with a prefix, message & parameters.\nIt also has full color support using `ansis` and parameters are parsed for you!",
		"constant": false,
		"source": "src/core/api/modules/console.ts:33:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:43:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "prefix",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "color",
							"details": {
								"type": "reference",
								"name": "ODValidConsoleColor",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODConsoleMessageParam",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "color",
				"comment": "The color of the prefix of this message",
				"source": "src/core/api/modules/console.ts:41:4",
				"details": {
					"type": "reference",
					"name": "ODValidConsoleColor",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": "The main message sent in the console",
				"source": "src/core/api/modules/console.ts:35:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "params",
				"comment": "An array of all the parameters in this message",
				"source": "src/core/api/modules/console.ts:37:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODConsoleMessageParam",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "prefix",
				"comment": "The prefix of this message (!uppercase recommended!)",
				"source": "src/core/api/modules/console.ts:39:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "createParamsString",
				"comment": "Render the parameters of this message in a specific color.",
				"source": "src/core/api/modules/console.ts:80:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Render the parameters of this message in a specific color.",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "reference",
								"name": "ODValidConsoleColor",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this message to the console using `console.log`! Returns `false` when something went wrong.",
				"source": "src/core/api/modules/console.ts:55:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Render this message to the console using `console.log`! Returns `false` when something went wrong.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "setColor",
				"comment": "Set the prefix color",
				"source": "src/core/api/modules/console.ts:109:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the prefix color",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "reference",
								"name": "ODValidConsoleColor",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setMessage",
				"comment": "Set the message",
				"source": "src/core/api/modules/console.ts:94:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the message",
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setParams",
				"comment": "Set the params",
				"source": "src/core/api/modules/console.ts:99:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the params",
					"parameters": [
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODConsoleMessageParam",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setPrefix",
				"comment": "Set the prefix",
				"source": "src/core/api/modules/console.ts:104:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the prefix",
					"parameters": [
						{
							"name": "prefix",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "toDebugString",
				"comment": "Create a more-detailed, non-colored version of this message to store it in the `otdebug.txt` file!",
				"source": "src/core/api/modules/console.ts:69:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create a more-detailed, non-colored version of this message to store it in the `otdebug.txt` file!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODConsolePluginMessage",
		"comment": "## ODConsolePluginMessage `class`\nThis is an Open Ticket console plugin message.\n\nIt is the same as a normal `ODConsoleMessage`, but it has a predefined prefix & color scheme for the \"PLUGIN\" messages!",
		"constant": false,
		"source": "src/core/api/modules/console.ts:146:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:147:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODConsoleMessageParam",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsolePluginMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "color",
				"comment": "The color of the prefix of this message",
				"source": "src/core/api/modules/console.ts:41:4",
				"details": {
					"type": "reference",
					"name": "ODValidConsoleColor",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": "The main message sent in the console",
				"source": "src/core/api/modules/console.ts:35:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "params",
				"comment": "An array of all the parameters in this message",
				"source": "src/core/api/modules/console.ts:37:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODConsoleMessageParam",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "prefix",
				"comment": "The prefix of this message (!uppercase recommended!)",
				"source": "src/core/api/modules/console.ts:39:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "createParamsString",
				"comment": "Render the parameters of this message in a specific color.",
				"source": "src/core/api/modules/console.ts:80:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render the parameters of this message in a specific color.",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "reference",
								"name": "ODValidConsoleColor",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this message to the console using `console.log`! Returns `false` when something went wrong.",
				"source": "src/core/api/modules/console.ts:55:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this message to the console using `console.log`! Returns `false` when something went wrong.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "setColor",
				"comment": "Set the prefix color",
				"source": "src/core/api/modules/console.ts:109:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the prefix color",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "reference",
								"name": "ODValidConsoleColor",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsolePluginMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setMessage",
				"comment": "Set the message",
				"source": "src/core/api/modules/console.ts:94:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the message",
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsolePluginMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setParams",
				"comment": "Set the params",
				"source": "src/core/api/modules/console.ts:99:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the params",
					"parameters": [
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODConsoleMessageParam",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsolePluginMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setPrefix",
				"comment": "Set the prefix",
				"source": "src/core/api/modules/console.ts:104:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the prefix",
					"parameters": [
						{
							"name": "prefix",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsolePluginMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "toDebugString",
				"comment": "Create a more-detailed, non-colored version of this message to store it in the `otdebug.txt` file!",
				"source": "src/core/api/modules/console.ts:69:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Create a more-detailed, non-colored version of this message to store it in the `otdebug.txt` file!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODConsoleSystemMessage",
		"comment": "## ODConsoleSystemMessage `class`\nThis is an Open Ticket console system message.\n\nIt is the same as a normal `ODConsoleMessage`, but it has a predefined prefix & color scheme for the \"SYSTEM\" messages!",
		"constant": false,
		"source": "src/core/api/modules/console.ts:135:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:136:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODConsoleMessageParam",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleSystemMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "color",
				"comment": "The color of the prefix of this message",
				"source": "src/core/api/modules/console.ts:41:4",
				"details": {
					"type": "reference",
					"name": "ODValidConsoleColor",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": "The main message sent in the console",
				"source": "src/core/api/modules/console.ts:35:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "params",
				"comment": "An array of all the parameters in this message",
				"source": "src/core/api/modules/console.ts:37:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODConsoleMessageParam",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "prefix",
				"comment": "The prefix of this message (!uppercase recommended!)",
				"source": "src/core/api/modules/console.ts:39:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "createParamsString",
				"comment": "Render the parameters of this message in a specific color.",
				"source": "src/core/api/modules/console.ts:80:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render the parameters of this message in a specific color.",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "reference",
								"name": "ODValidConsoleColor",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this message to the console using `console.log`! Returns `false` when something went wrong.",
				"source": "src/core/api/modules/console.ts:55:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this message to the console using `console.log`! Returns `false` when something went wrong.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "setColor",
				"comment": "Set the prefix color",
				"source": "src/core/api/modules/console.ts:109:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the prefix color",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "reference",
								"name": "ODValidConsoleColor",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleSystemMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setMessage",
				"comment": "Set the message",
				"source": "src/core/api/modules/console.ts:94:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the message",
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleSystemMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setParams",
				"comment": "Set the params",
				"source": "src/core/api/modules/console.ts:99:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the params",
					"parameters": [
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODConsoleMessageParam",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleSystemMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setPrefix",
				"comment": "Set the prefix",
				"source": "src/core/api/modules/console.ts:104:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the prefix",
					"parameters": [
						{
							"name": "prefix",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleSystemMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "toDebugString",
				"comment": "Create a more-detailed, non-colored version of this message to store it in the `otdebug.txt` file!",
				"source": "src/core/api/modules/console.ts:69:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Create a more-detailed, non-colored version of this message to store it in the `otdebug.txt` file!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODConsoleWarningMessage",
		"comment": "## ODConsoleWarningMessage `class`\nThis is an Open Ticket console warning message.\n\nIt is the same as a normal `ODConsoleMessage`, but it has a predefined prefix & color scheme for the \"WARNING\" messages!",
		"constant": false,
		"source": "src/core/api/modules/console.ts:168:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:169:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODConsoleMessageParam",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleWarningMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "color",
				"comment": "The color of the prefix of this message",
				"source": "src/core/api/modules/console.ts:41:4",
				"details": {
					"type": "reference",
					"name": "ODValidConsoleColor",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": "The main message sent in the console",
				"source": "src/core/api/modules/console.ts:35:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "params",
				"comment": "An array of all the parameters in this message",
				"source": "src/core/api/modules/console.ts:37:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODConsoleMessageParam",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "prefix",
				"comment": "The prefix of this message (!uppercase recommended!)",
				"source": "src/core/api/modules/console.ts:39:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "createParamsString",
				"comment": "Render the parameters of this message in a specific color.",
				"source": "src/core/api/modules/console.ts:80:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render the parameters of this message in a specific color.",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "reference",
								"name": "ODValidConsoleColor",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this message to the console using `console.log`! Returns `false` when something went wrong.",
				"source": "src/core/api/modules/console.ts:55:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this message to the console using `console.log`! Returns `false` when something went wrong.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "setColor",
				"comment": "Set the prefix color",
				"source": "src/core/api/modules/console.ts:109:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the prefix color",
					"parameters": [
						{
							"name": "color",
							"details": {
								"type": "reference",
								"name": "ODValidConsoleColor",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleWarningMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setMessage",
				"comment": "Set the message",
				"source": "src/core/api/modules/console.ts:94:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the message",
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleWarningMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setParams",
				"comment": "Set the params",
				"source": "src/core/api/modules/console.ts:99:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the params",
					"parameters": [
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODConsoleMessageParam",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleWarningMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "setPrefix",
				"comment": "Set the prefix",
				"source": "src/core/api/modules/console.ts:104:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Set the prefix",
					"parameters": [
						{
							"name": "prefix",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODConsoleWarningMessage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "toDebugString",
				"comment": "Create a more-detailed, non-colored version of this message to store it in the `otdebug.txt` file!",
				"source": "src/core/api/modules/console.ts:69:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Create a more-detailed, non-colored version of this message to store it in the `otdebug.txt` file!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODDebugFileManager",
		"comment": "## ODDebugFileManager `class`\nThis is the Open Ticket debug file manager.\n\nIt manages the Open Ticket debug file (`otdebug.txt`) which keeps a history of all system logs.\nThere are even internal logs that aren't logged to the console which are available in this file!\n\nUsing this class, you can change the max length of this file and some other cool things!",
		"constant": false,
		"source": "src/core/api/modules/console.ts:295:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:305:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "path",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "filename",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "maxlines",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "version",
							"details": {
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDebugFileManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "filename",
				"comment": "The filename of the debugfile (`otdebug.txt` by default)",
				"source": "src/core/api/modules/console.ts:299:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "maxlines",
				"comment": "The max length of the debug file.",
				"source": "src/core/api/modules/console.ts:303:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the debugfile (`./otdebug.txt` by default)",
				"source": "src/core/api/modules/console.ts:297:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "version",
				"comment": "The current version of the bot used in the debug file.",
				"source": "src/core/api/modules/console.ts:301:4",
				"details": {
					"type": "reference",
					"name": "ODVersion",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "writeConsoleMessage",
				"comment": "Write an `ODConsoleMessage` to the debug file",
				"source": "src/core/api/modules/console.ts:383:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Write an `ODConsoleMessage` to the debug file",
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "reference",
								"name": "ODConsoleMessage",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "writeErrorMessage",
				"comment": "Write an `ODError` to the debug file",
				"source": "src/core/api/modules/console.ts:387:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Write an `ODError` to the debug file",
					"parameters": [
						{
							"name": "error",
							"details": {
								"type": "reference",
								"name": "ODError",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "writeNote",
				"comment": "Write a custom note to the debug file (starting with `[NOTE]:`)",
				"source": "src/core/api/modules/console.ts:395:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Write a custom note to the debug file (starting with `[NOTE]:`)",
					"parameters": [
						{
							"name": "text",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "writeText",
				"comment": "Write custom text to the debug file",
				"source": "src/core/api/modules/console.ts:391:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Write custom text to the debug file",
					"parameters": [
						{
							"name": "text",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODDebugger",
		"comment": "## ODDebugger `class`\nThis is the Open Ticket debugger.\n\nIt is a simple wrapper around the `ODConsoleManager` to handle debugging (primarily for `ODManagers`).\nMessages created using this debugger are only logged to the debug file unless specified otherwise.\n\nYou will probably notice this class being used in the `ODManager` constructor.\n\nUsing this system, all additions & removals inside a manager are logged to the debug file. This makes searching for errors a lot easier!",
		"constant": false,
		"source": "src/core/api/modules/console.ts:410:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:416:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "console",
							"details": {
								"type": "reference",
								"name": "ODConsoleManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDebugger",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "console",
				"comment": "An alias to the Open Ticket console manager.",
				"source": "src/core/api/modules/console.ts:412:4",
				"details": {
					"type": "reference",
					"name": "ODConsoleManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "visible",
				"comment": "When enabled, debug logs are also shown in the console.",
				"source": "src/core/api/modules/console.ts:414:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "method",
				"name": "debug",
				"comment": "Create a debug message. This will always be logged to `otdebug.txt` & sometimes to the console (when enabled). Returns `true` when visible",
				"source": "src/core/api/modules/console.ts:421:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create a debug message. This will always be logged to `otdebug.txt` & sometimes to the console (when enabled). Returns `true` when visible",
					"parameters": [
						{
							"name": "message",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODError",
		"comment": "## ODError `class`\nThis is an Open Ticket error.\n\nIt is used to render and log Node.js errors & crashes in a styled way to the console & `otdebug.txt` file!",
		"constant": false,
		"source": "src/core/api/modules/console.ts:190:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:196:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "error",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "internal",
										"name": "Error",
										"typeArguments": null
									},
									{
										"type": "reference",
										"name": "ODSystemError",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "reference",
										"name": "ODPluginError",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "origin",
							"details": {
								"type": "external",
								"package": "@types/node",
								"name": "UncaughtExceptionOrigin",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODError",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "error",
				"comment": "The original error that this class wraps around",
				"source": "src/core/api/modules/console.ts:192:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "internal",
							"name": "Error",
							"typeArguments": null
						},
						{
							"type": "reference",
							"name": "ODSystemError",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "reference",
							"name": "ODPluginError",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "origin",
				"comment": "The origin of the original error",
				"source": "src/core/api/modules/console.ts:194:4",
				"details": {
					"type": "external",
					"package": "@types/node",
					"name": "UncaughtExceptionOrigin",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this error to the console using `console.log`! Returns `false` when something went wrong.",
				"source": "src/core/api/modules/console.ts:202:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Render this error to the console using `console.log`! Returns `false` when something went wrong.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "toDebugString",
				"comment": "Create a more-detailed, non-colored version of this error to store it in the `otdebug.txt` file!",
				"source": "src/core/api/modules/console.ts:219:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create a more-detailed, non-colored version of this error to store it in the `otdebug.txt` file!",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODLiveStatusFileSource",
		"comment": "## ODLiveStatusFileSource `class`\nThis is the Open Ticket livestatus file source.\n\nIt is a LiveStatus source that will read the data from a local file.\n\nThis can be used for testing/extending the LiveStatus system!",
		"constant": false,
		"source": "src/core/api/modules/console.ts:535:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:539:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "path",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODLiveStatusFileSource",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "The raw data of this source",
				"source": "src/core/api/modules/console.ts:488:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODLiveStatusSourceData",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the source file",
				"source": "src/core/api/modules/console.ts:537:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "getMessages",
				"comment": "Get all messages relevant to the bot based on some parameters.",
				"source": "src/core/api/modules/console.ts:500:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all messages relevant to the bot based on some parameters.",
					"parameters": [
						{
							"name": "main",
							"details": {
								"type": "reference",
								"name": "ODMain",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODLiveStatusSourceData",
									"target": "interface",
									"typeArguments": null
								}
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setData",
				"comment": "Change the current data using this method!",
				"source": "src/core/api/modules/console.ts:496:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Change the current data using this method!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODLiveStatusSourceData",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODLiveStatusManager",
		"comment": "## ODLiveStatusManager `class`\nThis is the Open Ticket livestatus manager.\n\nIt manages all LiveStatus sources and has the renderer for all LiveStatus messages.\n\nYou can use this to customise or add stuff to the LiveStatus system.\nAccess it in the global `openticket.startscreen.livestatus` variable!",
		"constant": false,
		"source": "src/core/api/modules/console.ts:589:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:595:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "main",
							"details": {
								"type": "reference",
								"name": "ODMain",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODLiveStatusManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "renderer",
				"comment": "The class responsible for rendering the livestatus messages.",
				"source": "src/core/api/modules/console.ts:591:4",
				"details": {
					"type": "reference",
					"name": "ODLiveStatusRenderer",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODLiveStatusSource",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODLiveStatusSource",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODLiveStatusSource",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODLiveStatusSource",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getAllMessages",
				"comment": "Get the messages from all sources combined!",
				"source": "src/core/api/modules/console.ts:602:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the messages from all sources combined!",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODLiveStatusSourceData",
									"target": "interface",
									"typeArguments": null
								}
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODLiveStatusSource",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODLiveStatusSource",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODLiveStatusSource",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODLiveStatusSource",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODLiveStatusSource",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODLiveStatusSource",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODLiveStatusSource",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODLiveStatusSource",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODLiveStatusSource",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODLiveStatusRenderer",
		"comment": "## ODLiveStatusRenderer `class`\nThis is the Open Ticket livestatus renderer.\n\nIt's responsible for rendering all LiveStatus messages to the console.",
		"constant": false,
		"source": "src/core/api/modules/console.ts:618:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:622:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "console",
							"details": {
								"type": "reference",
								"name": "ODConsoleManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODLiveStatusRenderer",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render all messages",
				"source": "src/core/api/modules/console.ts:627:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Render all messages",
					"parameters": [
						{
							"name": "messages",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODLiveStatusSourceData",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODLiveStatusSource",
		"comment": "## ODLiveStatusSource `class`\nThis is the Open Ticket livestatus source.\n\nIt is an empty template for a livestatus source.\nBy default, you should use `ODLiveStatusUrlSource` or `ODLiveStatusFileSource`,\nunless you want to create one on your own!\n\nThis class doesn't do anything on it's own! It's just a template!",
		"constant": false,
		"source": "src/core/api/modules/console.ts:486:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:490:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "data",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODLiveStatusSourceData",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODLiveStatusSource",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "The raw data of this source",
				"source": "src/core/api/modules/console.ts:488:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODLiveStatusSourceData",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "getMessages",
				"comment": "Get all messages relevant to the bot based on some parameters.",
				"source": "src/core/api/modules/console.ts:500:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all messages relevant to the bot based on some parameters.",
					"parameters": [
						{
							"name": "main",
							"details": {
								"type": "reference",
								"name": "ODMain",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODLiveStatusSourceData",
									"target": "interface",
									"typeArguments": null
								}
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setData",
				"comment": "Change the current data using this method!",
				"source": "src/core/api/modules/console.ts:496:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Change the current data using this method!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODLiveStatusSourceData",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODLiveStatusUrlSource",
		"comment": "## ODLiveStatusUrlSource `class`\nThis is the Open Ticket livestatus url source.\n\nIt is a LiveStatus source that will read the data from a http URL (json file).\n\nThis is the default way of receiving LiveStatus messages!",
		"constant": false,
		"source": "src/core/api/modules/console.ts:554:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/console.ts:560:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "url",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODLiveStatusUrlSource",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "The raw data of this source",
				"source": "src/core/api/modules/console.ts:488:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODLiveStatusSourceData",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "request",
				"comment": "The `ODHTTPGetRequest` helper to fetch the url!",
				"source": "src/core/api/modules/console.ts:558:4",
				"details": {
					"type": "reference",
					"name": "ODHTTPGetRequest",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "url",
				"comment": "The url used in the request",
				"source": "src/core/api/modules/console.ts:556:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "getMessages",
				"comment": "Get all messages relevant to the bot based on some parameters.",
				"source": "src/core/api/modules/console.ts:565:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all messages relevant to the bot based on some parameters.",
					"parameters": [
						{
							"name": "main",
							"details": {
								"type": "reference",
								"name": "ODMain",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODLiveStatusSourceData",
									"target": "interface",
									"typeArguments": null
								}
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setData",
				"comment": "Change the current data using this method!",
				"source": "src/core/api/modules/console.ts:496:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Change the current data using this method!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODLiveStatusSourceData",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODConsoleMessageParam",
		"comment": "## ODConsoleMessageParam `type`\nThis interface contains all data required for a console log parameter within Open Ticket.",
		"constant": false,
		"source": "src/core/api/modules/console.ts:18:17",
		"children": [
			{
				"type": "property",
				"name": "hidden",
				"comment": "When enabled, this parameter will only be shown in the debug file.",
				"source": "src/core/api/modules/console.ts:24:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "key",
				"comment": "The key of this parameter.",
				"source": "src/core/api/modules/console.ts:20:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The value of this parameter.",
				"source": "src/core/api/modules/console.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODLiveStatusSourceData",
		"comment": "## ODLiveStatusSourceData `interface`\nThis is an interface containing all raw data received from the LiveStatus system.",
		"constant": false,
		"source": "src/core/api/modules/console.ts:440:17",
		"children": [
			{
				"type": "property",
				"name": "active",
				"comment": "The message will only be shown when the bot matches all statements",
				"source": "src/core/api/modules/console.ts:453:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": "The message to display",
				"source": "src/core/api/modules/console.ts:442:4",
				"details": {
					"type": "unknown"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODConsoleMessageTypes",
		"comment": "## ODConsoleMessageTypes `type`\nThis is a collection of all the default console message types within Open Ticket.",
		"constant": false,
		"source": "src/core/api/modules/console.ts:227:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"info\""
					},
					{
						"type": "literal",
						"name": "\"system\""
					},
					{
						"type": "literal",
						"name": "\"plugin\""
					},
					{
						"type": "literal",
						"name": "\"debug\""
					},
					{
						"type": "literal",
						"name": "\"warning\""
					},
					{
						"type": "literal",
						"name": "\"error\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODLiveStatusColor",
		"comment": "## ODLivestatusColor `type`\nThis is a collection of all the colors available within the LiveStatus system.",
		"constant": false,
		"source": "src/core/api/modules/console.ts:435:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"normal\""
					},
					{
						"type": "literal",
						"name": "\"red\""
					},
					{
						"type": "literal",
						"name": "\"green\""
					},
					{
						"type": "literal",
						"name": "\"blue\""
					},
					{
						"type": "literal",
						"name": "\"yellow\""
					},
					{
						"type": "literal",
						"name": "\"white\""
					},
					{
						"type": "literal",
						"name": "\"gray\""
					},
					{
						"type": "literal",
						"name": "\"magenta\""
					},
					{
						"type": "literal",
						"name": "\"cyan\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODValidConsoleColor",
		"comment": "## ODValidConsoleColor `type`\nThis is a collection of all the supported console colors within Open Ticket.",
		"constant": false,
		"source": "src/core/api/modules/console.ts:13:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"white\""
					},
					{
						"type": "literal",
						"name": "\"red\""
					},
					{
						"type": "literal",
						"name": "\"yellow\""
					},
					{
						"type": "literal",
						"name": "\"green\""
					},
					{
						"type": "literal",
						"name": "\"blue\""
					},
					{
						"type": "literal",
						"name": "\"gray\""
					},
					{
						"type": "literal",
						"name": "\"cyan\""
					},
					{
						"type": "literal",
						"name": "\"magenta\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCooldown",
		"comment": "## ODCooldown `class`\nThis is an Open Ticket cooldown.\n\nIt doesn't do anything on it's own, but it provides the methods that are used to interact with a cooldown.\nThis class can be extended from to create a working cooldown.\n\nThere are also premade cooldowns available in the bot!",
		"constant": false,
		"source": "src/core/api/modules/cooldown.ts:52:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/cooldown.ts:57:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCooldown",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Data",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": null,
				"source": "src/core/api/modules/cooldown.ts:53:4",
				"details": {
					"type": "reference",
					"name": "ODManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODCooldownData",
							"target": "class",
							"typeArguments": [
								{
									"type": "typeParam",
									"name": "Data",
									"typeArguments": null
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": "Is this cooldown already initialized?",
				"source": "src/core/api/modules/cooldown.ts:55:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check this id without starting or updating the cooldown. Returns `true` when on cooldown!",
				"source": "src/core/api/modules/cooldown.ts:66:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check this id without starting or updating the cooldown. Returns `true` when on cooldown!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "delete",
				"comment": "Remove the cooldown for an id when available.",
				"source": "src/core/api/modules/cooldown.ts:70:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove the cooldown for an id when available.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initialize the internal systems of this cooldown.",
				"source": "src/core/api/modules/cooldown.ts:74:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Initialize the internal systems of this cooldown.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "use",
				"comment": "Check this id and start cooldown when it exeeds the limit! Returns `true` when on cooldown!",
				"source": "src/core/api/modules/cooldown.ts:62:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check this id and start cooldown when it exeeds the limit! Returns `true` when on cooldown!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Data",
				"type": {
					"type": "primitive",
					"name": "object"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODCooldownData",
		"comment": "## ODCooldownData `class`\nThis is Open Ticket cooldown data.\n\nIt contains the instance of an active cooldown (e.g. for a user). It is handled by the cooldown itself.",
		"constant": false,
		"source": "src/core/api/modules/cooldown.ts:31:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/cooldown.ts:37:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "active",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "data",
							"details": {
								"type": "typeParam",
								"name": "Data",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCooldownData",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Data",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "active",
				"comment": "Is this cooldown active?",
				"source": "src/core/api/modules/cooldown.ts:33:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "Additional data of this cooldown instance. (different for each cooldown type)",
				"source": "src/core/api/modules/cooldown.ts:35:4",
				"details": {
					"type": "typeParam",
					"name": "Data",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Data",
				"type": {
					"type": "primitive",
					"name": "object"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODCooldownManager",
		"comment": "## ODCooldownManager `class`\nThis is an Open Ticket cooldown manager.\n\nIt is responsible for managing all cooldowns in Open Ticket. An example of this is the ticket creation cooldown.\n\nThere are many types of cooldowns available, but you can also create your own!",
		"constant": false,
		"source": "src/core/api/modules/cooldown.ts:14:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/cooldown.ts:15:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCooldownManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODCooldown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "object"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODCooldown",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "object"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCooldown",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "object"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCooldown",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "object"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODCooldown",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "object"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODCooldown",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "object"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCooldown",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "object"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCooldown",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "object"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initiate all cooldowns in this manager.",
				"source": "src/core/api/modules/cooldown.ts:19:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Initiate all cooldowns in this manager.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODCooldown",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "object"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCooldown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "object"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCooldown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "object"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCooldown",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "object"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCooldown",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "object"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCounterCooldown",
		"comment": "## ODCounterCooldown `class`\nThis is an Open Ticket counter cooldown.\n\nIt is is a cooldown based on a counter. When the number exceeds the limit, the cooldown is activated.\nThe number will automatically be decreased with a set amount & interval.",
		"constant": false,
		"source": "src/core/api/modules/cooldown.ts:85:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/cooldown.ts:97:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "activeLimit",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "cancelLimit",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "increment",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "decrement",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "intervalMs",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCounterCooldown",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "activeLimit",
				"comment": "The cooldown will activate when exceeding this limit.",
				"source": "src/core/api/modules/cooldown.ts:87:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "cancelLimit",
				"comment": "The cooldown will deactivate when below this limit.",
				"source": "src/core/api/modules/cooldown.ts:89:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": null,
				"source": "src/core/api/modules/cooldown.ts:53:4",
				"details": {
					"type": "reference",
					"name": "ODManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODCooldownData",
							"target": "class",
							"typeArguments": [
								{
									"type": "unknown"
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "decrement",
				"comment": "The amount to decrease the counter over time.",
				"source": "src/core/api/modules/cooldown.ts:93:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "increment",
				"comment": "The amount to increase the counter with everytime the cooldown is triggered/updated.",
				"source": "src/core/api/modules/cooldown.ts:91:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "invervalMs",
				"comment": "The interval between decrements in milliseconds.",
				"source": "src/core/api/modules/cooldown.ts:95:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": "Is this cooldown already initialized?",
				"source": "src/core/api/modules/cooldown.ts:55:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check this id without starting or updating the cooldown. Returns `true` when on cooldown!",
				"source": "src/core/api/modules/cooldown.ts:129:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check this id without starting or updating the cooldown. Returns `true` when on cooldown!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "delete",
				"comment": "Remove the cooldown for an id when available.",
				"source": "src/core/api/modules/cooldown.ts:136:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove the cooldown for an id when available.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initialize the internal systems of this cooldown.",
				"source": "src/core/api/modules/cooldown.ts:139:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Initialize the internal systems of this cooldown.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "use",
				"comment": "Check this id and start cooldown when it exeeds the limit! Returns `true` when on cooldown!",
				"source": "src/core/api/modules/cooldown.ts:106:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check this id and start cooldown when it exeeds the limit! Returns `true` when on cooldown!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODIncrementalCounterCooldown",
		"comment": "## ODIncrementalCounterCooldown `class`\nThis is an Open Ticket incremental counter cooldown.\n\nIt is is a cooldown based on an incremental counter. It is exactly the same as the normal counter,\nwith the only difference being that it still increments when the limit is already exeeded.",
		"constant": false,
		"source": "src/core/api/modules/cooldown.ts:162:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/cooldown.ts:174:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "activeLimit",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "cancelLimit",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "increment",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "decrement",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "intervalMs",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODIncrementalCounterCooldown",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "activeLimit",
				"comment": "The cooldown will activate when exceeding this limit.",
				"source": "src/core/api/modules/cooldown.ts:164:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "cancelLimit",
				"comment": "The cooldown will deactivate when below this limit.",
				"source": "src/core/api/modules/cooldown.ts:166:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": null,
				"source": "src/core/api/modules/cooldown.ts:53:4",
				"details": {
					"type": "reference",
					"name": "ODManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODCooldownData",
							"target": "class",
							"typeArguments": [
								{
									"type": "unknown"
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "decrement",
				"comment": "The amount to decrease the counter over time.",
				"source": "src/core/api/modules/cooldown.ts:170:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "increment",
				"comment": "The amount to increase the counter with everytime the cooldown is triggered/updated.",
				"source": "src/core/api/modules/cooldown.ts:168:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "invervalMs",
				"comment": "The interval between decrements in milliseconds.",
				"source": "src/core/api/modules/cooldown.ts:172:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": "Is this cooldown already initialized?",
				"source": "src/core/api/modules/cooldown.ts:55:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check this id without starting or updating the cooldown. Returns `true` when on cooldown!",
				"source": "src/core/api/modules/cooldown.ts:207:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check this id without starting or updating the cooldown. Returns `true` when on cooldown!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "delete",
				"comment": "Remove the cooldown for an id when available.",
				"source": "src/core/api/modules/cooldown.ts:214:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove the cooldown for an id when available.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initialize the internal systems of this cooldown.",
				"source": "src/core/api/modules/cooldown.ts:217:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Initialize the internal systems of this cooldown.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "use",
				"comment": "Check this id and start cooldown when it exeeds the limit! Returns `true` when on cooldown!",
				"source": "src/core/api/modules/cooldown.ts:183:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check this id and start cooldown when it exeeds the limit! Returns `true` when on cooldown!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODIncrementalTimeoutCooldown",
		"comment": "## ODIncrementalTimeoutCooldown `class`\nThis is an Open Ticket incremental timeout cooldown.\n\nIt is is a cooldown based on an incremental timer. It is exactly the same as the normal timer,\nwith the only difference being that it adds additional time when triggered/updated while the cooldown is already active.",
		"constant": false,
		"source": "src/core/api/modules/cooldown.ts:296:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/cooldown.ts:302:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "timeoutMs",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "incrementMs",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODIncrementalTimeoutCooldown",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": null,
				"source": "src/core/api/modules/cooldown.ts:53:4",
				"details": {
					"type": "reference",
					"name": "ODManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODCooldownData",
							"target": "class",
							"typeArguments": [
								{
									"type": "unknown"
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "incrementMs",
				"comment": "The amount of milliseconds to add when triggered/updated while the cooldown is already active.",
				"source": "src/core/api/modules/cooldown.ts:300:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": "Is this cooldown already initialized?",
				"source": "src/core/api/modules/cooldown.ts:55:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "timeoutMs",
				"comment": "The amount of milliseconds before the cooldown times-out",
				"source": "src/core/api/modules/cooldown.ts:298:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check this id without starting or updating the cooldown. Returns `true` when on cooldown!",
				"source": "src/core/api/modules/cooldown.ts:327:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check this id without starting or updating the cooldown. Returns `true` when on cooldown!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "delete",
				"comment": "Remove the cooldown for an id when available.",
				"source": "src/core/api/modules/cooldown.ts:334:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove the cooldown for an id when available.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initialize the internal systems of this cooldown.",
				"source": "src/core/api/modules/cooldown.ts:344:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Initialize the internal systems of this cooldown.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "remaining",
				"comment": "Get the remaining amount of milliseconds before the timeout stops.",
				"source": "src/core/api/modules/cooldown.ts:338:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the remaining amount of milliseconds before the timeout stops.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "primitive",
								"name": "number"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "use",
				"comment": "Check this id and start cooldown when it exeeds the limit! Returns `true` when on cooldown!",
				"source": "src/core/api/modules/cooldown.ts:308:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check this id and start cooldown when it exeeds the limit! Returns `true` when on cooldown!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODTimeoutCooldown",
		"comment": "## ODTimeoutCooldown `class`\nThis is an Open Ticket timeout cooldown.\n\nIt is a cooldown based on a timer. When triggered/updated, the cooldown is activated for the set amount of time.\nAfter the timer has timed out, the cooldown will be deleted.",
		"constant": false,
		"source": "src/core/api/modules/cooldown.ts:240:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/cooldown.ts:244:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "timeoutMs",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTimeoutCooldown",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": null,
				"source": "src/core/api/modules/cooldown.ts:53:4",
				"details": {
					"type": "reference",
					"name": "ODManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODCooldownData",
							"target": "class",
							"typeArguments": [
								{
									"type": "unknown"
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": "Is this cooldown already initialized?",
				"source": "src/core/api/modules/cooldown.ts:55:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "timeoutMs",
				"comment": "The amount of milliseconds before the cooldown times-out",
				"source": "src/core/api/modules/cooldown.ts:242:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "check",
				"comment": "Check this id without starting or updating the cooldown. Returns `true` when on cooldown!",
				"source": "src/core/api/modules/cooldown.ts:267:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check this id without starting or updating the cooldown. Returns `true` when on cooldown!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "delete",
				"comment": "Remove the cooldown for an id when available.",
				"source": "src/core/api/modules/cooldown.ts:274:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove the cooldown for an id when available.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initialize the internal systems of this cooldown.",
				"source": "src/core/api/modules/cooldown.ts:284:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Initialize the internal systems of this cooldown.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "remaining",
				"comment": "Get the remaining amount of milliseconds before the timeout stops.",
				"source": "src/core/api/modules/cooldown.ts:278:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the remaining amount of milliseconds before the timeout stops.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "primitive",
								"name": "number"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "use",
				"comment": "Check this id and start cooldown when it exeeds the limit! Returns `true` when on cooldown!",
				"source": "src/core/api/modules/cooldown.ts:249:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check this id and start cooldown when it exeeds the limit! Returns `true` when on cooldown!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODDatabase",
		"comment": "## ODDatabase `class`\nThis is an Open Ticket database template.\nThis class doesn't do anything at all, it just gives a template & basic methods for a database. Use `ODJsonDatabase` instead!\n\nYou can use this class if you want to create your own database implementation (e.g. `mongodb`, `mysql`,...)!",
		"constant": false,
		"source": "src/core/api/modules/database.ts:40:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/base.ts:176:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDatabase",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/database.ts:42:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/database.ts:44:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "delete",
				"comment": "Delete a specific category & key in the database",
				"source": "src/core/api/modules/database.ts:59:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Delete a specific category & key in the database",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if a specific category & key exists in the database",
				"source": "src/core/api/modules/database.ts:63:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if a specific category & key exists in the database",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get a specific category & key in the database",
				"source": "src/core/api/modules/database.ts:55:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a specific category & key in the database",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all values in the database",
				"source": "src/core/api/modules/database.ts:71:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all values in the database",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODJsonDatabaseStructure",
								"target": "type",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getCategory",
				"comment": "Get a specific category in the database",
				"source": "src/core/api/modules/database.ts:67:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a specific category in the database",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "undefined"
									},
									{
										"type": "array",
										"child": {
											"type": "unknown"
										}
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the database.",
				"source": "src/core/api/modules/database.ts:47:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Init the database.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "set",
				"comment": "Add/Overwrite a specific category & key in the database. Returns `true` when overwritten.",
				"source": "src/core/api/modules/database.ts:51:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add/Overwrite a specific category & key in the database. Returns `true` when overwritten.",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODDatabaseManager",
		"comment": "## ODDatabaseManager `class`\nThis is an Open Ticket database manager.\n\nIt manages all databases in the bot and allows to permanently store data from the bot!\n\nYou can use this class to get/add a database (`ODDatabase`) in your plugin!",
		"constant": false,
		"source": "src/core/api/modules/database.ts:17:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/database.ts:18:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDatabaseManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODDatabase",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODDatabase",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDatabase",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODDatabase",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODDatabase",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDatabase",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDatabase",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init all database files.",
				"source": "src/core/api/modules/database.ts:23:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Init all database files.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODDatabase",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDatabase",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDatabase",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDatabase",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODFormattedJsonDatabase",
		"comment": "## ODFormattedJsonDatabase `class`\nThis is an Open Ticket Formatted JSON database.\nIt stores data in a `json` file as a large `Array` using the `category`, `key`, `value` strategy.\nYou can store the following types: `string`, `number`, `boolean`, `array`, `object` & `null`!\n\nThis one is exactly the same as `ODJsonDatabase`, but it has a formatter from the `formatted-json-stringify` package.\nThis can help you organise it a little bit better!",
		"constant": false,
		"source": "src/core/api/modules/database.ts:189:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/database.ts:193:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "file",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "formatter",
							"details": {
								"type": "external",
								"package": "formatted-json-stringify",
								"name": "ArrayFormatter",
								"typeArguments": null
							}
						},
						{
							"name": "customPath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFormattedJsonDatabase",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/database.ts:42:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "formatter",
				"comment": "The formatter to use on the database array",
				"source": "src/core/api/modules/database.ts:191:4",
				"details": {
					"type": "external",
					"package": "formatted-json-stringify",
					"name": "ArrayFormatter",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/database.ts:44:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "delete",
				"comment": "Remove the value of `category` & `key`. Returns `undefined` when non-existent!",
				"source": "src/core/api/modules/database.ts:238:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove the value of `category` & `key`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if a value of `category` & `key` exists. Returns `false` when non-existent!",
				"source": "src/core/api/modules/database.ts:247:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if a value of `category` & `key` exists. Returns `false` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get the value of `category` & `key`. Returns `undefined` when non-existent!",
				"source": "src/core/api/modules/database.ts:228:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the value of `category` & `key`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all values in `category`.",
				"source": "src/core/api/modules/database.ts:259:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all values in `category`.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODJsonDatabaseStructure",
								"target": "type",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getCategory",
				"comment": "Get all values in `category`. Returns `undefined` when non-existent!",
				"source": "src/core/api/modules/database.ts:253:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all values in `category`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "undefined"
									},
									{
										"type": "array",
										"child": {
											"type": "unknown"
										}
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the database.",
				"source": "src/core/api/modules/database.ts:201:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Init the database.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "set",
				"comment": "Set/overwrite the value of `category` & `key`. Returns `true` when overwritten!",
				"source": "src/core/api/modules/database.ts:209:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set/overwrite the value of `category` & `key`. Returns `true` when overwritten!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODJsonDatabase",
		"comment": "## ODJsonDatabase `class`\nThis is an Open Ticket JSON database.\nIt stores data in a `json` file as a large `Array` using the `category`, `key`, `value` strategy.\nYou can store the following types: `string`, `number`, `boolean`, `array`, `object` & `null`!\n\nYou can use this class if you want to add your own database or to use an existing one!",
		"constant": false,
		"source": "src/core/api/modules/database.ts:88:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/database.ts:89:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "file",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "customPath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODJsonDatabase",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/database.ts:42:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/database.ts:44:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "delete",
				"comment": "Remove the value of `category` & `key`. Returns `undefined` when non-existent!",
				"source": "src/core/api/modules/database.ts:133:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove the value of `category` & `key`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if a value of `category` & `key` exists. Returns `false` when non-existent!",
				"source": "src/core/api/modules/database.ts:142:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if a value of `category` & `key` exists. Returns `false` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get the value of `category` & `key`. Returns `undefined` when non-existent!",
				"source": "src/core/api/modules/database.ts:123:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the value of `category` & `key`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all values in `category`.",
				"source": "src/core/api/modules/database.ts:154:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all values in `category`.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODJsonDatabaseStructure",
								"target": "type",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getCategory",
				"comment": "Get all values in `category`. Returns `undefined` when non-existent!",
				"source": "src/core/api/modules/database.ts:148:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all values in `category`. Returns `undefined` when non-existent!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "undefined"
									},
									{
										"type": "array",
										"child": {
											"type": "unknown"
										}
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the database.",
				"source": "src/core/api/modules/database.ts:96:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Init the database.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "set",
				"comment": "Set/overwrite the value of `category` & `key`. Returns `true` when overwritten!",
				"source": "src/core/api/modules/database.ts:104:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set/overwrite the value of `category` & `key`. Returns `true` when overwritten!",
					"parameters": [
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "key",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidJsonType",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionalPromise",
						"target": "type",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODJsonDatabaseStructure",
		"comment": "## ODJsonDatabaseStructure `type`\nThis is the structure of how a JSON database file!",
		"constant": false,
		"source": "src/core/api/modules/database.ts:79:12",
		"children": [
			{
				"type": "array",
				"child": {
					"type": "unknown"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODDefaultsManager",
		"comment": "## ODDefaultsManager `class`\nThis is an Open Ticket defaults manager.\n\nIt manages all settings in Open Ticket that are not meant to be in the config.\nHere you can disable certain default features to replace them or to specifically enable them!\n\nYou are unable to add your own defaults, you can only edit Open Ticket defaults!",
		"constant": false,
		"source": "src/core/api/modules/defaults.ts:227:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/defaults.ts:231:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODDefaultsManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "getDefault",
				"comment": "Get a default. Remember! All plugins can edit these values, so this value could be overwritten!",
				"source": "src/core/api/modules/defaults.ts:337:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a default. Remember! All plugins can edit these values, so this value could be overwritten!",
					"parameters": [
						{
							"name": "key",
							"details": {
								"type": "typeParam",
								"name": "DefaultName",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "index",
						"index": {
							"type": "typeParam",
							"name": "DefaultName",
							"typeArguments": null
						},
						"object": {
							"type": "reference",
							"name": "ODDefaults",
							"target": "interface",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "setDefault",
				"comment": "Set a default to a specific value. Remember! All plugins can edit these values, so your value could be overwritten!",
				"source": "src/core/api/modules/defaults.ts:332:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set a default to a specific value. Remember! All plugins can edit these values, so your value could be overwritten!",
					"parameters": [
						{
							"name": "key",
							"details": {
								"type": "typeParam",
								"name": "DefaultName",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "index",
								"index": {
									"type": "typeParam",
									"name": "DefaultName",
									"typeArguments": null
								},
								"object": {
									"type": "reference",
									"name": "ODDefaults",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODDefaults",
		"comment": "## ODDefaults `interface`\nThis type is a list of all defaults available in the `ODDefaultsManager` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/modules/defaults.ts:9:17",
		"children": [
			{
				"type": "property",
				"name": "actionsLoading",
				"comment": "Load the default Open Ticket actions.",
				"source": "src/core/api/modules/defaults.ts:137:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "allowDumpCommand",
				"comment": "When enabled, you're able to use the \"!OPENTICKET:dump\" command to send the OT debug file. This is only possible when you're the owner of the bot.",
				"source": "src/core/api/modules/defaults.ts:17:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "allowSlashCommandRemoval",
				"comment": "When enabled, the bot is allowed to unregister all slash commands which aren't used in Open Ticket. Disable this if you don't want to use the Open Ticket `ODSlashCommand` classes.",
				"source": "src/core/api/modules/defaults.ts:91:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "autocloseCheckInterval",
				"comment": "The interval in milliseconds that are between autoclose timeout checkers.",
				"source": "src/core/api/modules/defaults.ts:182:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "autodeleteCheckInterval",
				"comment": "The interval in milliseconds that are between autodelete timeout checkers.",
				"source": "src/core/api/modules/defaults.ts:184:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "backupLanguage",
				"comment": "Set the backup language when the primary language is missing a property.",
				"source": "src/core/api/modules/defaults.ts:52:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "blacklistLoading",
				"comment": "Load the default Open Ticket blacklist (from `database/users.json`)",
				"source": "src/core/api/modules/defaults.ts:106:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "buttonBuildersLoading",
				"comment": "Load the default Open Ticket button builders.",
				"source": "src/core/api/modules/defaults.ts:113:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "buttonRespondersLoading",
				"comment": "Load the default Open Ticket button responders.",
				"source": "src/core/api/modules/defaults.ts:128:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "checkerExecution",
				"comment": "Enable the default execution of the config checkers.",
				"source": "src/core/api/modules/defaults.ts:61:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "checkerFunctionLoading",
				"comment": "Load the default Open Ticket config checker functions.",
				"source": "src/core/api/modules/defaults.ts:59:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "checkerLoading",
				"comment": "Load the default Open Ticket config checker.",
				"source": "src/core/api/modules/defaults.ts:57:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "checkerQuit",
				"comment": "Enable the default quit action when there is an error in the config checker.",
				"source": "src/core/api/modules/defaults.ts:67:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "checkerRenderEmpty",
				"comment": "Render the checker even when there are no errors & warnings.",
				"source": "src/core/api/modules/defaults.ts:69:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "checkerRendering",
				"comment": "Enable the default rendering of the config checkers.",
				"source": "src/core/api/modules/defaults.ts:65:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "checkerTranslationLoading",
				"comment": "Load the default Open Ticket config checker translations.",
				"source": "src/core/api/modules/defaults.ts:63:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "clientActivityInitiating",
				"comment": "Load the default Open Ticket client activity initialization (& status refresh).",
				"source": "src/core/api/modules/defaults.ts:82:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "clientActivityLoading",
				"comment": "Load the default Open Ticket client activity (from `config/general.json`).",
				"source": "src/core/api/modules/defaults.ts:80:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "clientInitiating",
				"comment": "Load the default Open Ticket client initialization.",
				"source": "src/core/api/modules/defaults.ts:74:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "clientLoading",
				"comment": "Load the default Open Ticket client configuration.",
				"source": "src/core/api/modules/defaults.ts:72:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "clientMultiGuildWarning",
				"comment": "Create a warning when the bot is present in multiple guilds.",
				"source": "src/core/api/modules/defaults.ts:78:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "clientReady",
				"comment": "Load the default Open Ticket client ready actions (status, commands, permissions, ...).",
				"source": "src/core/api/modules/defaults.ts:76:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "codeExecution",
				"comment": "Execute the default Open Ticket code/functions.",
				"source": "src/core/api/modules/defaults.ts:166:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "codeLoading",
				"comment": "Load the default Open Ticket code/functions.",
				"source": "src/core/api/modules/defaults.ts:164:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "commandRespondersLoading",
				"comment": "Load the default Open Ticket command responders.",
				"source": "src/core/api/modules/defaults.ts:126:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "configInitiating",
				"comment": "Enable the default initializer for Open Ticket config.",
				"source": "src/core/api/modules/defaults.ts:37:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "configLoading",
				"comment": "Load the default Open Ticket configs.",
				"source": "src/core/api/modules/defaults.ts:35:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "cooldownsInitiating",
				"comment": "Initiate the default Open Ticket cooldowns.",
				"source": "src/core/api/modules/defaults.ts:150:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "cooldownsLoading",
				"comment": "Load the default Open Ticket cooldowns.",
				"source": "src/core/api/modules/defaults.ts:148:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "crashOnError",
				"comment": "Crash when there is an unknown bot error.",
				"source": "src/core/api/modules/defaults.ts:13:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "databaseInitiating",
				"comment": "Enable the default initializer for Open Ticket database.",
				"source": "src/core/api/modules/defaults.ts:41:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "databaseLoading",
				"comment": "Load the default Open Ticket databases.",
				"source": "src/core/api/modules/defaults.ts:39:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "debugLoading",
				"comment": "Enable the system responsible for the `--debug` flag.",
				"source": "src/core/api/modules/defaults.ts:15:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "dropdownBuildersLoading",
				"comment": "Load the default Open Ticket dropdown builders.",
				"source": "src/core/api/modules/defaults.ts:115:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "dropdownRespondersLoading",
				"comment": "Load the default Open Ticket dropdown responders.",
				"source": "src/core/api/modules/defaults.ts:130:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "embedBuildersLoading",
				"comment": "Load the default Open Ticket embed builders.",
				"source": "src/core/api/modules/defaults.ts:119:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "emojiTitleDivider",
				"comment": "The emoji divider to use in embed & message titles using `utilities.emoijTitle()`",
				"source": "src/core/api/modules/defaults.ts:180:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "emojiTitleStyle",
				"comment": "The emoji style to use in embed & message titles using `utilities.emoijTitle()`",
				"source": "src/core/api/modules/defaults.ts:178:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"disabled\""
						},
						{
							"type": "literal",
							"name": "\"before\""
						},
						{
							"type": "literal",
							"name": "\"after\""
						},
						{
							"type": "literal",
							"name": "\"double\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "emojiTitleStyleLoading",
				"comment": "Load the emoji style from the Open Ticket general config.",
				"source": "src/core/api/modules/defaults.ts:176:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "errorHandling",
				"comment": "Enable the default error handling system.",
				"source": "src/core/api/modules/defaults.ts:11:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "fileBuildersLoading",
				"comment": "Load the default Open Ticket file builders.",
				"source": "src/core/api/modules/defaults.ts:117:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "flagInitiating",
				"comment": "Enable the default initializer for Open Ticket flags.",
				"source": "src/core/api/modules/defaults.ts:29:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "flagLoading",
				"comment": "Load the default Open Ticket flags.",
				"source": "src/core/api/modules/defaults.ts:27:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "forceSlashCommandRegistration",
				"comment": "When enabled, the bot is forced to re-register all slash commands in the server. This can be used in case of a auto-update malfunction.",
				"source": "src/core/api/modules/defaults.ts:89:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "helpMenuCategoryLoading",
				"comment": "Load the default Open Ticket help menu categories.",
				"source": "src/core/api/modules/defaults.ts:152:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "helpMenuComponentLoading",
				"comment": "Load the default Open Ticket help menu components.",
				"source": "src/core/api/modules/defaults.ts:154:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "languageInitiating",
				"comment": "Enable the default initializer for Open Ticket languages.",
				"source": "src/core/api/modules/defaults.ts:48:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "languageList",
				"comment": "**[NOT FOR PLUGIN TRANSLATIONS]** The full list of available languages (used in the default config checker).",
				"source": "src/core/api/modules/defaults.ts:54:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "languageLoading",
				"comment": "Load the default Open Ticket languages.",
				"source": "src/core/api/modules/defaults.ts:46:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "languageSelection",
				"comment": "Enable selecting the current language from `config/general.json`.",
				"source": "src/core/api/modules/defaults.ts:50:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "liveStatusLoading",
				"comment": "Load the default Open Ticket livestatus.",
				"source": "src/core/api/modules/defaults.ts:169:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "messageBuildersLoading",
				"comment": "Load the default Open Ticket message builders.",
				"source": "src/core/api/modules/defaults.ts:121:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "modalBuildersLoading",
				"comment": "Load the default Open Ticket modal builders.",
				"source": "src/core/api/modules/defaults.ts:123:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "modalRespondersLoading",
				"comment": "Load the default Open Ticket modal responders.",
				"source": "src/core/api/modules/defaults.ts:132:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "optionLoading",
				"comment": "Load the default Open Ticket options (from `config/options.json`)",
				"source": "src/core/api/modules/defaults.ts:98:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "panelLoading",
				"comment": "Load the default Open Ticket panels (from `config/panels.json`)",
				"source": "src/core/api/modules/defaults.ts:100:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "permissionsLoading",
				"comment": "Load the default Open Ticket permissions.",
				"source": "src/core/api/modules/defaults.ts:142:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "pluginClassLoading",
				"comment": "Load the default Open Ticket plugin classes.",
				"source": "src/core/api/modules/defaults.ts:24:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "pluginLoading",
				"comment": "Enable loading all Open Ticket plugins, sadly enough is only useful for the system :)",
				"source": "src/core/api/modules/defaults.ts:19:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "postsInitiating",
				"comment": "Initiate the default Open Ticket posts.",
				"source": "src/core/api/modules/defaults.ts:146:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "postsLoading",
				"comment": "Load the default Open Ticket posts.",
				"source": "src/core/api/modules/defaults.ts:144:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "progressBarLoading",
				"comment": "Load the default Open Ticket progress bars.",
				"source": "src/core/api/modules/defaults.ts:33:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "progressBarRendererLoading",
				"comment": "Load the default Open Ticket progress bar renderers.",
				"source": "src/core/api/modules/defaults.ts:31:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "questionLoading",
				"comment": "Load the default Open Ticket questions (from `config/questions.json`)",
				"source": "src/core/api/modules/defaults.ts:96:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "responderTimeoutMs",
				"comment": "Set the time (in ms) before Open Ticket sends an error message when no reply is sent in a responder.",
				"source": "src/core/api/modules/defaults.ts:134:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "roleLoading",
				"comment": "Load the default Open Ticket reaction roles (from `config/options.json`)",
				"source": "src/core/api/modules/defaults.ts:104:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "sessionLoading",
				"comment": "Load the default Open Ticket sessions.",
				"source": "src/core/api/modules/defaults.ts:43:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "slashCommandLoading",
				"comment": "Load the default Open Ticket slash commands.",
				"source": "src/core/api/modules/defaults.ts:85:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "slashCommandRegistering",
				"comment": "Load the default Open Ticket slash command registerer (register slash cmds in discord).",
				"source": "src/core/api/modules/defaults.ts:87:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "softPluginLoading",
				"comment": "Don't crash the bot when a plugin crashes!",
				"source": "src/core/api/modules/defaults.ts:21:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "startScreenLoading",
				"comment": "Load the default Open Ticket startscreen.",
				"source": "src/core/api/modules/defaults.ts:171:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "startScreenRendering",
				"comment": "Render the default Open Ticket startscreen.",
				"source": "src/core/api/modules/defaults.ts:173:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "statInitiating",
				"comment": "Initiate the default Open Ticket stats.",
				"source": "src/core/api/modules/defaults.ts:161:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "statLoading",
				"comment": "Load the default Open Ticket stats.",
				"source": "src/core/api/modules/defaults.ts:159:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "statScopesLoading",
				"comment": "Load the default Open Ticket stat scopes.",
				"source": "src/core/api/modules/defaults.ts:157:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "textCommandLoading",
				"comment": "Load the default Open Ticket text commands.",
				"source": "src/core/api/modules/defaults.ts:93:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "ticketLoading",
				"comment": "Load the default Open Ticket tickets (from `database/tickets.json`)",
				"source": "src/core/api/modules/defaults.ts:102:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "transcriptCompilerLoading",
				"comment": "Load the default Open Ticket transcript compilers.",
				"source": "src/core/api/modules/defaults.ts:108:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "transcriptHistoryLoading",
				"comment": "Load the default Open Ticket transcript history (from `database/transcripts.json`)",
				"source": "src/core/api/modules/defaults.ts:110:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "verifyBarsLoading",
				"comment": "Load the default Open Ticket verify bars.",
				"source": "src/core/api/modules/defaults.ts:140:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODDefaultsBooleans",
		"comment": "## ODDefaultsBooleans `type`\nThis type is a list of boolean defaults available in the `ODDefaultsManager` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/modules/defaults.ts:191:12",
		"children": [
			{
				"type": "index",
				"index": {
					"type": "keyof",
					"child": {
						"type": "reference",
						"name": "ODDefaults",
						"target": "interface",
						"typeArguments": null
					}
				},
				"object": {
					"type": "mapped",
					"parameterName": "Key",
					"parameter": {
						"type": "keyof",
						"child": {
							"type": "reference",
							"name": "ODDefaults",
							"target": "interface",
							"typeArguments": null
						}
					},
					"template": {
						"type": "conditional",
						"checker": {
							"type": "index",
							"index": {
								"type": "typeParam",
								"name": "Key",
								"typeArguments": null
							},
							"object": {
								"type": "reference",
								"name": "ODDefaults",
								"target": "interface",
								"typeArguments": null
							}
						},
						"extends": {
							"type": "primitive",
							"name": "boolean"
						},
						"trueValue": {
							"type": "typeParam",
							"name": "Key",
							"typeArguments": null
						},
						"falseValue": {
							"type": "primitive",
							"name": "never"
						}
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODDefaultsNumbers",
		"comment": "## ODDefaultsNumbers `type`\nThis type is a list of number defaults available in the `ODDefaultsManager` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/modules/defaults.ts:207:12",
		"children": [
			{
				"type": "index",
				"index": {
					"type": "keyof",
					"child": {
						"type": "reference",
						"name": "ODDefaults",
						"target": "interface",
						"typeArguments": null
					}
				},
				"object": {
					"type": "mapped",
					"parameterName": "Key",
					"parameter": {
						"type": "keyof",
						"child": {
							"type": "reference",
							"name": "ODDefaults",
							"target": "interface",
							"typeArguments": null
						}
					},
					"template": {
						"type": "conditional",
						"checker": {
							"type": "index",
							"index": {
								"type": "typeParam",
								"name": "Key",
								"typeArguments": null
							},
							"object": {
								"type": "reference",
								"name": "ODDefaults",
								"target": "interface",
								"typeArguments": null
							}
						},
						"extends": {
							"type": "primitive",
							"name": "number"
						},
						"trueValue": {
							"type": "typeParam",
							"name": "Key",
							"typeArguments": null
						},
						"falseValue": {
							"type": "primitive",
							"name": "never"
						}
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODDefaultsStringArray",
		"comment": "## ODDefaultsStringArray `type`\nThis type is a list of string[] defaults available in the `ODDefaultsManager` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/modules/defaults.ts:215:12",
		"children": [
			{
				"type": "index",
				"index": {
					"type": "keyof",
					"child": {
						"type": "reference",
						"name": "ODDefaults",
						"target": "interface",
						"typeArguments": null
					}
				},
				"object": {
					"type": "mapped",
					"parameterName": "Key",
					"parameter": {
						"type": "keyof",
						"child": {
							"type": "reference",
							"name": "ODDefaults",
							"target": "interface",
							"typeArguments": null
						}
					},
					"template": {
						"type": "conditional",
						"checker": {
							"type": "index",
							"index": {
								"type": "typeParam",
								"name": "Key",
								"typeArguments": null
							},
							"object": {
								"type": "reference",
								"name": "ODDefaults",
								"target": "interface",
								"typeArguments": null
							}
						},
						"extends": {
							"type": "array",
							"child": {
								"type": "primitive",
								"name": "string"
							}
						},
						"trueValue": {
							"type": "typeParam",
							"name": "Key",
							"typeArguments": null
						},
						"falseValue": {
							"type": "primitive",
							"name": "never"
						}
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODDefaultsStrings",
		"comment": "## ODDefaultsStrings `type`\nThis type is a list of string defaults available in the `ODDefaultsManager` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/modules/defaults.ts:199:12",
		"children": [
			{
				"type": "index",
				"index": {
					"type": "keyof",
					"child": {
						"type": "reference",
						"name": "ODDefaults",
						"target": "interface",
						"typeArguments": null
					}
				},
				"object": {
					"type": "mapped",
					"parameterName": "Key",
					"parameter": {
						"type": "keyof",
						"child": {
							"type": "reference",
							"name": "ODDefaults",
							"target": "interface",
							"typeArguments": null
						}
					},
					"template": {
						"type": "conditional",
						"checker": {
							"type": "index",
							"index": {
								"type": "typeParam",
								"name": "Key",
								"typeArguments": null
							},
							"object": {
								"type": "reference",
								"name": "ODDefaults",
								"target": "interface",
								"typeArguments": null
							}
						},
						"extends": {
							"type": "primitive",
							"name": "string"
						},
						"trueValue": {
							"type": "typeParam",
							"name": "Key",
							"typeArguments": null
						},
						"falseValue": {
							"type": "primitive",
							"name": "never"
						}
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODEvent",
		"comment": "## ODEvent `class`\nThis is an Open Ticket event.\n\nThis class is made to work with the `ODEventManager` to handle events.\nThe function of this specific class is to manage all listeners for a specifc event!",
		"constant": false,
		"source": "src/core/api/modules/event.ts:13:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/base.ts:176:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEvent",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "listenerLimit",
				"comment": "The max listener limit before a possible memory leak will be announced",
				"source": "src/core/api/modules/event.ts:21:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "listeners",
				"comment": "The list of permanent listeners.",
				"source": "src/core/api/modules/event.ts:17:4",
				"details": {
					"type": "array",
					"child": {
						"type": "internal",
						"name": "Function",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "oncelisteners",
				"comment": "The list of one-time listeners. List is cleared every time the event is emitted.",
				"source": "src/core/api/modules/event.ts:19:4",
				"details": {
					"type": "array",
					"child": {
						"type": "internal",
						"name": "Function",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "emit",
				"comment": "Emit this event to all listeners. You are required to provide all parameters of the event!",
				"source": "src/core/api/modules/event.ts:62:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Emit this event to all listeners. You are required to provide all parameters of the event!",
					"parameters": [
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "any"
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "listen",
				"comment": "Add a permanent callback to this event. This will stay as long as the bot is running!",
				"source": "src/core/api/modules/event.ts:41:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add a permanent callback to this event. This will stay as long as the bot is running!",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "internal",
								"name": "Function",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "listenOnce",
				"comment": "Add a one-time-only callback to this event. This will only trigger the callback once!",
				"source": "src/core/api/modules/event.ts:52:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add a one-time-only callback to this event. This will only trigger the callback once!",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "internal",
								"name": "Function",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "setListenerLimit",
				"comment": "Edit the listener limit",
				"source": "src/core/api/modules/event.ts:37:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Edit the listener limit",
					"parameters": [
						{
							"name": "limit",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/event.ts:24:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODDebugger",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "wait",
				"comment": "Wait until this event is fired! Be carefull with it, because it could block the entire bot when wrongly used!",
				"source": "src/core/api/modules/event.ts:56:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Wait until this event is fired! Be carefull with it, because it could block the entire bot when wrongly used!",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "any"
								}
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODEventManager",
		"comment": "## ODEventManager `class`\nThis is an Open Ticket event manager.\n\nThis class is made to manage all events in the bot. You can compare it with the built-in node.js `EventEmitter`\n\nIt's not recommended to create this class yourself. Plugin events should be registered in their `plugin.json` file instead.\nAll events are available in the `openticket.events` global!",
		"constant": false,
		"source": "src/core/api/modules/event.ts:81:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/event.ts:85:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODEventManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/event.ts:90:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODEvent",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODEvent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODEvent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODEvent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODEvent",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODEvent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODEvent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODEvent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODEvent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODEvent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODEvent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/event.ts:94:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODEvent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODFlag",
		"comment": "## ODFlag `class`\nThis is an Open Ticket flag.\n\nA flag is a boolean that can be specified by a parameter in the console.\nIt's useful for small settings that are only required once in a while.\n\nFlags can also be enabled manually by plugins!",
		"constant": false,
		"source": "src/core/api/modules/flag.ts:15:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/flag.ts:29:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "description",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "param",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "aliases",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "string"
								}
							}
						},
						{
							"name": "initialValue",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFlag",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "aliases",
				"comment": "A list of aliases for the parameter in the console.",
				"source": "src/core/api/modules/flag.ts:25:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "description",
				"comment": "The description of this flag. Visible to the user.",
				"source": "src/core/api/modules/flag.ts:21:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "method",
				"comment": "The method that has been used to set the value of this flag. (`null` when not set)",
				"source": "src/core/api/modules/flag.ts:17:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "literal",
							"name": "\"manual\""
						},
						{
							"type": "literal",
							"name": "\"param\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this flag. Visible to the user.",
				"source": "src/core/api/modules/flag.ts:19:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "param",
				"comment": "The name of the parameter in the console. (e.g. `--test`)",
				"source": "src/core/api/modules/flag.ts:23:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The value of this flag.",
				"source": "src/core/api/modules/flag.ts:27:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "detectProcessParams",
				"comment": "Detect if the process contains the param or aliases & set the value. Use `force` to overwrite a manually set value.",
				"source": "src/core/api/modules/flag.ts:44:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Detect if the process contains the param or aliases & set the value. Use `force` to overwrite a manually set value.",
					"parameters": [
						{
							"name": "force",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "setValue",
				"comment": "Set the value of this flag.",
				"source": "src/core/api/modules/flag.ts:39:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the value of this flag.",
					"parameters": [
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "method",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"manual\""
									},
									{
										"type": "literal",
										"name": "\"param\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODFlagManager",
		"comment": "## ODFlagManager `class`\nThis is an Open Ticket flag manager.\n\nThis class is responsible for managing & initiating all flags of the bot.\nIt also contains a shortcut for initiating all flags.",
		"constant": false,
		"source": "src/core/api/modules/flag.ts:62:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/flag.ts:63:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODFlagManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODFlag",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODFlag",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODFlag",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODFlag",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODFlag",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODFlag",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODFlag",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODFlag",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Set all flags to their `process.argv` value.",
				"source": "src/core/api/modules/flag.ts:68:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set all flags to their `process.argv` value.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODFlag",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODFlag",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODFlag",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODFlag",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODFlag",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODHelpMenuCategory",
		"comment": "## ODHelpMenuCategory `class`\nThis is an Open Ticket help menu category.\n\nEvery category in the help menu is an embed field by default.\nTry to limit the amount of components per category.",
		"constant": false,
		"source": "src/core/api/modules/helpmenu.ts:101:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/helpmenu.ts:111:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "newPage",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODHelpMenuCategory",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this category.",
				"source": "src/core/api/modules/helpmenu.ts:103:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this category. (can include emoji's)",
				"source": "src/core/api/modules/helpmenu.ts:107:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "newPage",
				"comment": "When enabled, it automatically starts this category on a new page.",
				"source": "src/core/api/modules/helpmenu.ts:109:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this category. The higher, the earlier it will appear in the menu.",
				"source": "src/core/api/modules/helpmenu.ts:105:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODHelpMenuComponent",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this category and it's components.",
				"source": "src/core/api/modules/helpmenu.ts:120:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Render this category and it's components.",
					"parameters": [
						{
							"name": "page",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "category",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"text\""
									},
									{
										"type": "literal",
										"name": "\"slash\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODHelpMenuCommandComponent",
		"comment": "## ODHelpMenuCommandComponent `class`\nThis is an Open Ticket help menu command component.\n\nIt contains a useful helper to render a command in the Open Ticket help menu.",
		"constant": false,
		"source": "src/core/api/modules/helpmenu.ts:76:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/helpmenu.ts:77:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "settings",
							"details": {
								"type": "reference",
								"name": "ODHelpMenuCommandComponentSettings",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODHelpMenuCommandComponent",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this component. The higher, the earlier it will appear in the help menu.",
				"source": "src/core/api/modules/helpmenu.ts:19:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "render",
				"comment": "The render function for this component.",
				"source": "src/core/api/modules/helpmenu.ts:21:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuComponentRenderer",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODHelpMenuComponent",
		"comment": "## ODHelpMenuComponent `class`\nThis is an Open Ticket help menu component.\n\nIt can render something on the Open Ticket help menu.",
		"constant": false,
		"source": "src/core/api/modules/helpmenu.ts:17:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/helpmenu.ts:23:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "render",
							"details": {
								"type": "reference",
								"name": "ODHelpMenuComponentRenderer",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODHelpMenuComponent",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this component. The higher, the earlier it will appear in the help menu.",
				"source": "src/core/api/modules/helpmenu.ts:19:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "render",
				"comment": "The render function for this component.",
				"source": "src/core/api/modules/helpmenu.ts:21:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuComponentRenderer",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODHelpMenuManager",
		"comment": "## ODHelpMenuManager `class`\nThis is an Open Ticket help menu manager.\n\nIt is responsible for rendering the entire help menu content.\nYou are also able to configure the amount of categories per page here.\n\nFewer Categories == More Clean Menu",
		"constant": false,
		"source": "src/core/api/modules/helpmenu.ts:158:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/helpmenu.ts:164:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODHelpMenuManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "categoriesPerPage",
				"comment": "The amount of categories per-page.",
				"source": "src/core/api/modules/helpmenu.ts:162:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/helpmenu.ts:169:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODHelpMenuCategory",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuCategory",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuCategory",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuCategory",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODHelpMenuCategory",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuCategory",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODHelpMenuCategory",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODHelpMenuCategory",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuCategory",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuCategory",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODHelpMenuCategory",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODHelpMenuCategory",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render this entire help menu & return a `ODHelpMenuRenderResult`.",
				"source": "src/core/api/modules/helpmenu.ts:175:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Render this entire help menu & return a `ODHelpMenuRenderResult`.",
					"parameters": [
						{
							"name": "mode",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"text\""
									},
									{
										"type": "literal",
										"name": "\"slash\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODHelpMenuRenderResult",
								"target": "type",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODHelpMenuTextComponent",
		"comment": "## ODHelpMenuTextComponent `class`\nThis is an Open Ticket help menu text component.\n\nIt can render a static piece of text on the Open Ticket help menu.",
		"constant": false,
		"source": "src/core/api/modules/helpmenu.ts:35:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/helpmenu.ts:36:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "text",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODHelpMenuTextComponent",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this component. The higher, the earlier it will appear in the help menu.",
				"source": "src/core/api/modules/helpmenu.ts:19:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "render",
				"comment": "The render function for this component.",
				"source": "src/core/api/modules/helpmenu.ts:21:4",
				"details": {
					"type": "reference",
					"name": "ODHelpMenuComponentRenderer",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODHelpMenuCommandComponentOption",
		"comment": "## ODHelpMenuCommandComponentOption `interface`\nThis interface contains a command option for the `ODHelpMenuCommandComponent`.",
		"constant": false,
		"source": "src/core/api/modules/helpmenu.ts:46:17",
		"children": [
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this option.",
				"source": "src/core/api/modules/helpmenu.ts:48:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "optional",
				"comment": "Is this option optional?",
				"source": "src/core/api/modules/helpmenu.ts:50:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODHelpMenuCommandComponentSettings",
		"comment": "## ODHelpMenuCommandComponentSettings `interface`\nThis interface contains the settings for the `ODHelpMenuCommandComponent`.",
		"constant": false,
		"source": "src/core/api/modules/helpmenu.ts:56:17",
		"children": [
			{
				"type": "property",
				"name": "slashDescription",
				"comment": "The description for the slash command.",
				"source": "src/core/api/modules/helpmenu.ts:68:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "slashName",
				"comment": "The name of this slash command.",
				"source": "src/core/api/modules/helpmenu.ts:60:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "slashOptions",
				"comment": "Options available in the slash command.",
				"source": "src/core/api/modules/helpmenu.ts:64:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODHelpMenuCommandComponentOption",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "textDescription",
				"comment": "The description for the text command.",
				"source": "src/core/api/modules/helpmenu.ts:66:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "textName",
				"comment": "The name of this text command.",
				"source": "src/core/api/modules/helpmenu.ts:58:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "textOptions",
				"comment": "Options available in the text command.",
				"source": "src/core/api/modules/helpmenu.ts:62:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODHelpMenuCommandComponentOption",
						"target": "interface",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODHelpMenuComponentRenderer",
		"comment": "## ODHelpMenuComponentRenderer `type`\nThis is the callback of the help menu component renderer. It also contains information about how & where it is rendered.",
		"constant": false,
		"source": "src/core/api/modules/helpmenu.ts:10:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "page",
						"details": {
							"type": "primitive",
							"name": "number"
						}
					},
					{
						"name": "category",
						"details": {
							"type": "primitive",
							"name": "number"
						}
					},
					{
						"name": "location",
						"details": {
							"type": "primitive",
							"name": "number"
						}
					},
					{
						"name": "mode",
						"details": {
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "\"slash\""
								},
								{
									"type": "literal",
									"name": "\"text\""
								}
							]
						}
					}
				],
				"returns": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "string"
						},
						{
							"type": "internal",
							"name": "Promise",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								}
							]
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODHelpMenuRenderResult",
		"comment": "## ODHelpMenuRenderResult `type`\nThis is the array returned when the help menu has been rendered successfully.\n\nIt contains a list of pages, which contain categories by name & value (content).",
		"constant": false,
		"source": "src/core/api/modules/helpmenu.ts:148:12",
		"children": [
			{
				"type": "array",
				"child": {
					"type": "array",
					"child": {
						"type": "unknown"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODJsonLanguage",
		"comment": "## ODJsonLanguage `class`\nThis is an Open Ticket JSON language file.\n\nIt contains metadata and all translation strings from a certain JSON file (in `./languages/`).\nRegister this class to an `ODLanguageManager` to use it!\n\nUse the `ODLanguage` class to use translations from non-JSON files!",
		"constant": false,
		"source": "src/core/api/modules/language.ts:183:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/language.ts:184:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "file",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "customPath",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODJsonLanguage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "The raw object data of the translation.",
				"source": "src/core/api/modules/language.ts:160:4",
				"details": {
					"type": "primitive",
					"name": "any"
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/language.ts:156:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "metadata",
				"comment": "The metadata of the language if available.",
				"source": "src/core/api/modules/language.ts:162:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODLanguageMetadata",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/language.ts:158:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the langauge.",
				"source": "src/core/api/modules/language.ts:191:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Init the langauge.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODLanguage",
		"comment": "## ODLanguage `class`\nThis is an Open Ticket language file.\n\nIt contains metadata and all translation strings available in this language.\nRegister this class to an `ODLanguageManager` to use it!\n\nJSON languages should be created using the `ODJsonLanguage` class instead!",
		"constant": false,
		"source": "src/core/api/modules/language.ts:154:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/language.ts:164:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "data",
							"details": {
								"type": "primitive",
								"name": "any"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODLanguage",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "The raw object data of the translation.",
				"source": "src/core/api/modules/language.ts:160:4",
				"details": {
					"type": "primitive",
					"name": "any"
				}
			},
			{
				"type": "property",
				"name": "file",
				"comment": "The name of the file with extension.",
				"source": "src/core/api/modules/language.ts:156:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "metadata",
				"comment": "The metadata of the language if available.",
				"source": "src/core/api/modules/language.ts:162:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODLanguageMetadata",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "path",
				"comment": "The path to the file relative to the main directory.",
				"source": "src/core/api/modules/language.ts:158:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init the language.",
				"source": "src/core/api/modules/language.ts:170:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Init the language.",
					"parameters": [],
					"returns": {
						"type": "reference",
						"name": "ODPromiseVoid",
						"target": "type",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODLanguageManager",
		"comment": "## ODLanguageManager `class`\nThis is an Open Ticket language manager.\n\nIt manages all languages in the bot and manages translation for you!\nGet a translation via the `getTranslation()` or `getTranslationWithParams()` methods.\n\nAdd new languages using the `ODlanguage` class in your plugin!",
		"constant": false,
		"source": "src/core/api/modules/language.ts:33:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/language.ts:41:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "presets",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODLanguageManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "backup",
				"comment": "The currently selected backup language. (used when translation missing in current language)",
				"source": "src/core/api/modules/language.ts:37:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODLanguage",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "current",
				"comment": "The currently selected language.",
				"source": "src/core/api/modules/language.ts:35:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODLanguage",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODLanguage",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODLanguage",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODLanguage",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODLanguage",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getBackupLanguage",
				"comment": "Get the backup language (same as `this.backup`)",
				"source": "src/core/api/modules/language.ts:74:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the backup language (same as `this.backup`)",
					"parameters": [],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODLanguage",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getCurrentLanguage",
				"comment": "Get the current language (same as `this.current`)",
				"source": "src/core/api/modules/language.ts:60:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the current language (same as `this.current`)",
					"parameters": [],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODLanguage",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getCurrentLanguageId",
				"comment": "Get the ID (string) of the current language. (Not backup language)",
				"source": "src/core/api/modules/language.ts:83:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the ID (string) of the current language. (Not backup language)",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODLanguage",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODLanguage",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODLanguage",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLanguageMetadata",
				"comment": "Get the metadata of the current/backup language.",
				"source": "src/core/api/modules/language.ts:78:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the metadata of the current/backup language.",
					"parameters": [
						{
							"name": "frombackup",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODLanguageMetadata",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODLanguage",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getTranslation",
				"comment": "Get a translation string by JSON location. (e.g. `\"checker.system.typeError\"`)",
				"source": "src/core/api/modules/language.ts:87:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a translation string by JSON location. (e.g. `\"checker.system.typeError\"`)",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getTranslationWithParams",
				"comment": "Get a backup translation string by JSON location and replace `{0}`,`{1}`,`{2}`,... with the provided parameters.",
				"source": "src/core/api/modules/language.ts:123:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a backup translation string by JSON location and replace `{0}`,`{1}`,`{2}`,... with the provided parameters.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "params",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "string"
								}
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init all language files.",
				"source": "src/core/api/modules/language.ts:135:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Init all language files.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODLanguage",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODLanguage",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODLanguage",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODLanguage",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODLanguage",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setBackupLanguage",
				"comment": "Set the backup language by providing the ID of a language which is registered in this manager.",
				"source": "src/core/api/modules/language.ts:64:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the backup language by providing the ID of a language which is registered in this manager.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "setCurrentLanguage",
				"comment": "Set the current language by providing the ID of a language which is registered in this manager.",
				"source": "src/core/api/modules/language.ts:50:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the current language by providing the ID of a language which is registered in this manager.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODLanguageMetadata",
		"comment": "## ODLanguageMetadata `interface`\nThis interface contains all metadata available in the language files.",
		"constant": false,
		"source": "src/core/api/modules/language.ts:12:17",
		"children": [
			{
				"type": "property",
				"name": "automated",
				"comment": "When `true`, the translator made use of some sort of automation while creating the translation. (e.g. ChatGPT, Google Translate, DeepL, ...)",
				"source": "src/core/api/modules/language.ts:22:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "language",
				"comment": "The name of the language in english (with capital letter).",
				"source": "src/core/api/modules/language.ts:16:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "lastedited",
				"comment": "The last date that this translation has been modified (format: DD/MM/YYYY)",
				"source": "src/core/api/modules/language.ts:20:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "otversion",
				"comment": "The version of Open Ticket this translation is made for.",
				"source": "src/core/api/modules/language.ts:14:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "translators",
				"comment": "A list of translators (discord/github username) who've contributed to this language.",
				"source": "src/core/api/modules/language.ts:18:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "enum",
		"name": "ODPermissionLevel",
		"comment": "## ODPermissionLevel `enum`\nAll available permission types/levels. But as `enum` instead of `type`. Used to calculate the level.",
		"constant": false,
		"source": "src/core/api/modules/permission.ts:35:12",
		"children": [
			{
				"type": "enumerable",
				"name": "admin",
				"comment": "Admin. Higher than a moderator. (Used for global-admins)",
				"source": "src/core/api/modules/permission.ts:43:4",
				"details": {
					"type": "literal",
					"name": "3"
				}
			},
			{
				"type": "enumerable",
				"name": "developer",
				"comment": "Bot owner or all users from dev team. (Able to use all commands including `/stats reset`)",
				"source": "src/core/api/modules/permission.ts:47:4",
				"details": {
					"type": "literal",
					"name": "5"
				}
			},
			{
				"type": "enumerable",
				"name": "member",
				"comment": "A normal member. (Default for everyone)",
				"source": "src/core/api/modules/permission.ts:37:4",
				"details": {
					"type": "literal",
					"name": "0"
				}
			},
			{
				"type": "enumerable",
				"name": "moderator",
				"comment": "Moderator. Higher than the support team. (Unused)",
				"source": "src/core/api/modules/permission.ts:41:4",
				"details": {
					"type": "literal",
					"name": "2"
				}
			},
			{
				"type": "enumerable",
				"name": "owner",
				"comment": "Server owner. (Able to use all commands including `/stats reset`)",
				"source": "src/core/api/modules/permission.ts:45:4",
				"details": {
					"type": "literal",
					"name": "4"
				}
			},
			{
				"type": "enumerable",
				"name": "support",
				"comment": "Support team. Higher than a normal member. (Used for ticket-admins)",
				"source": "src/core/api/modules/permission.ts:39:4",
				"details": {
					"type": "literal",
					"name": "1"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODPermission",
		"comment": "## ODPermission `class`\nThis is an Open Ticket permission.\n\nIt defines a single permission level for a specific scope (global/channel & user/role)\nThese permissions only apply to commands & interactions.\nThey are not related to channel permissions in the ticket system.\n\nRegister this class to an `ODPermissionManager` to use it!",
		"constant": false,
		"source": "src/core/api/modules/permission.ts:59:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/permission.ts:69:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "scope",
							"details": {
								"type": "literal",
								"name": "\"global-user\""
							}
						},
						{
							"name": "permission",
							"details": {
								"type": "reference",
								"name": "ODPermissionType",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPermission",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "channel",
				"comment": "The channel that this permission applies to. (`null` when global)",
				"source": "src/core/api/modules/permission.ts:67:13",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "Channel",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "permission",
				"comment": "The type/level of this permission.",
				"source": "src/core/api/modules/permission.ts:63:13",
				"details": {
					"type": "reference",
					"name": "ODPermissionType",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "scope",
				"comment": "The scope of this permission.",
				"source": "src/core/api/modules/permission.ts:61:13",
				"details": {
					"type": "reference",
					"name": "ODPermissionScope",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The user/role of this permission.",
				"source": "src/core/api/modules/permission.ts:65:13",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "external",
							"package": "discord.js",
							"name": "User",
							"typeArguments": null
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "Role",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODPermissionManager",
		"comment": "## ODPermissionManager `class`\nThis is an Open Ticket permission manager.\n\nIt manages all permissions in the bot!\nUse the `getPermissions()` and `hasPermissions()` methods to get user perms.\n\nAdd new permissions using the `ODPermission` class in your plugin!",
		"constant": false,
		"source": "src/core/api/modules/permission.ts:111:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/permission.ts:122:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "useDefaultCalculation",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPermissionManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "defaultResult",
				"comment": "The result which is returned when no other permissions match. (`member` by default)",
				"source": "src/core/api/modules/permission.ts:115:4",
				"details": {
					"type": "reference",
					"name": "ODPermissionResult",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODPermission",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODPermission",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPermission",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPermission",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODPermission",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODPermission",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPermission",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getPermissions",
				"comment": "Get an `ODPermissionResult` based on a few context factors. Use `hasPermissions()` to simplify the result.",
				"source": "src/core/api/modules/permission.ts:136:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get an `ODPermissionResult` based on a few context factors. Use `hasPermissions()` to simplify the result.",
					"parameters": [
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						},
						{
							"name": "channel",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Channel",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "guild",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "settings",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODPermissionSettings",
										"target": "interface",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODPermissionResult",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPermission",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "hasPermissions",
				"comment": "Simplifies the `ODPermissionResult` returned from `getPermissions()` and returns a boolean to check if the user matches the required permissions.",
				"source": "src/core/api/modules/permission.ts:146:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Simplifies the `ODPermissionResult` returned from `getPermissions()` and returns a boolean to check if the user matches the required permissions.",
					"parameters": [
						{
							"name": "minimum",
							"details": {
								"type": "reference",
								"name": "ODPermissionType",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODPermissionResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODPermission",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPermission",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPermission",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPermission",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPermission",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setCalculation",
				"comment": "Edit the permission calculation function in this manager.",
				"source": "src/core/api/modules/permission.ts:128:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Edit the permission calculation function in this manager.",
					"parameters": [
						{
							"name": "calculation",
							"details": {
								"type": "reference",
								"name": "ODPermissionCalculationCallback",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "setDefaultResult",
				"comment": "Edit the result which is returned when no other permissions match. (`member` by default)",
				"source": "src/core/api/modules/permission.ts:132:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Edit the result which is returned when no other permissions match. (`member` by default)",
					"parameters": [
						{
							"name": "result",
							"details": {
								"type": "reference",
								"name": "ODPermissionResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODPermissionResult",
		"comment": "## ODPermissionResult `interface`\nThe result returned by `ODPermissionManager.getPermissions()`.",
		"constant": false,
		"source": "src/core/api/modules/permission.ts:21:17",
		"children": [
			{
				"type": "property",
				"name": "level",
				"comment": "The highest level available for this scope.",
				"source": "src/core/api/modules/permission.ts:27:4",
				"details": {
					"type": "reference",
					"name": "ODPermissionLevel",
					"target": "enum",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "scope",
				"comment": "The permission scope.",
				"source": "src/core/api/modules/permission.ts:25:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"default\""
						},
						{
							"type": "reference",
							"name": "ODPermissionScope",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "source",
				"comment": "The permission which returned this level.",
				"source": "src/core/api/modules/permission.ts:29:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODPermission",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The permission type.",
				"source": "src/core/api/modules/permission.ts:23:4",
				"details": {
					"type": "reference",
					"name": "ODPermissionType",
					"target": "type",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODPermissionSettings",
		"comment": "## ODPermissionSettings `interface`\nOptional settings for the `getPermissions()` method in the `ODPermissionManager`.",
		"constant": false,
		"source": "src/core/api/modules/permission.ts:85:17",
		"children": [
			{
				"type": "property",
				"name": "allowChannelRoleScope",
				"comment": "Include permissions from the channel role scope.",
				"source": "src/core/api/modules/permission.ts:93:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "allowChannelUserScope",
				"comment": "Include permissions from the channel user scope.",
				"source": "src/core/api/modules/permission.ts:91:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "allowGlobalRoleScope",
				"comment": "Include permissions from the global role scope.",
				"source": "src/core/api/modules/permission.ts:89:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "allowGlobalUserScope",
				"comment": "Include permissions from the global user scope.",
				"source": "src/core/api/modules/permission.ts:87:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "idRegex",
				"comment": "Only include permissions of which the id matches this regex.",
				"source": "src/core/api/modules/permission.ts:95:4",
				"details": {
					"type": "internal",
					"name": "RegExp",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODPermissionCalculationCallback",
		"comment": "## ODPermissionCalculationCallback `type`\nThe callback of the permission calculation. (Used in `ODPermissionManager`)",
		"constant": false,
		"source": "src/core/api/modules/permission.ts:101:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "user",
						"details": {
							"type": "external",
							"package": "discord.js",
							"name": "discord.User",
							"typeArguments": null
						}
					},
					{
						"name": "channel",
						"details": {
							"type": "union",
							"children": [
								{
									"type": "external",
									"package": "discord.js",
									"name": "discord.Channel",
									"typeArguments": null
								},
								{
									"type": "literal",
									"name": "null"
								}
							]
						}
					},
					{
						"name": "guild",
						"details": {
							"type": "union",
							"children": [
								{
									"type": "external",
									"package": "discord.js",
									"name": "discord.Guild",
									"typeArguments": null
								},
								{
									"type": "literal",
									"name": "null"
								}
							]
						}
					},
					{
						"name": "settings",
						"details": {
							"type": "union",
							"children": [
								{
									"type": "reference",
									"name": "ODPermissionSettings",
									"target": "interface",
									"typeArguments": null
								},
								{
									"type": "literal",
									"name": "null"
								}
							]
						}
					}
				],
				"returns": {
					"type": "internal",
					"name": "Promise",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODPermissionResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODPermissionScope",
		"comment": "## ODPermissionScope `type`\nThe scope in which a certain permission is active.",
		"constant": false,
		"source": "src/core/api/modules/permission.ts:16:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"global-user\""
					},
					{
						"type": "literal",
						"name": "\"channel-user\""
					},
					{
						"type": "literal",
						"name": "\"global-role\""
					},
					{
						"type": "literal",
						"name": "\"channel-role\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODPermissionType",
		"comment": "## ODPermissionType `type`\nAll available permission types/levels. Can be used in the `ODPermission` class.",
		"constant": false,
		"source": "src/core/api/modules/permission.ts:11:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"member\""
					},
					{
						"type": "literal",
						"name": "\"support\""
					},
					{
						"type": "literal",
						"name": "\"moderator\""
					},
					{
						"type": "literal",
						"name": "\"admin\""
					},
					{
						"type": "literal",
						"name": "\"owner\""
					},
					{
						"type": "literal",
						"name": "\"developer\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODPlugin",
		"comment": "## ODPlugin `class`\nThis is an Open Ticket plugin.\n\nIt represents a single plugin in the `./plugins/` directory.\nAll plugins are accessible via the `openticket.plugins` global.\n\nDon't re-execute plugins which are already enabled! It might break the bot or plugin.",
		"constant": false,
		"source": "src/core/api/modules/plugin.ts:103:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/plugin.ts:126:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "dir",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "jsondata",
							"details": {
								"type": "reference",
								"name": "ODPluginData",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPlugin",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "crashed",
				"comment": "Did this plugin crash? (A reason is available in the `crashReason`)",
				"source": "src/core/api/modules/plugin.ts:122:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "crashReason",
				"comment": "The reason which caused this plugin to crash.",
				"source": "src/core/api/modules/plugin.ts:124:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "literal",
							"name": "\"incompatible.plugin\""
						},
						{
							"type": "literal",
							"name": "\"missing.plugin\""
						},
						{
							"type": "literal",
							"name": "\"missing.dependency\""
						},
						{
							"type": "literal",
							"name": "\"executed\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "All plugin data found in the `plugin.json` file.",
				"source": "src/core/api/modules/plugin.ts:107:4",
				"details": {
					"type": "reference",
					"name": "ODPluginData",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "details",
				"comment": "The additional details of this plugin.",
				"source": "src/core/api/modules/plugin.ts:115:4",
				"details": {
					"type": "reference",
					"name": "ODPluginDetails",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "dir",
				"comment": "The name of the directory of this plugin. (same as id)",
				"source": "src/core/api/modules/plugin.ts:105:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "enabled",
				"comment": "Is this plugin enabled?",
				"source": "src/core/api/modules/plugin.ts:118:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "executed",
				"comment": "Did this plugin execute successfully?.",
				"source": "src/core/api/modules/plugin.ts:120:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this plugin.",
				"source": "src/core/api/modules/plugin.ts:109:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this plugin.",
				"source": "src/core/api/modules/plugin.ts:111:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "version",
				"comment": "The version of this plugin.",
				"source": "src/core/api/modules/plugin.ts:113:4",
				"details": {
					"type": "reference",
					"name": "ODVersion",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "dependenciesInstalled",
				"comment": "Get a list of all missing npm dependencies that are required for this plugin.",
				"source": "src/core/api/modules/plugin.ts:184:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a list of all missing npm dependencies that are required for this plugin.",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "primitive",
							"name": "string"
						}
					}
				}
			},
			{
				"type": "method",
				"name": "execute",
				"comment": "Execute this plugin. Returns `false` on crash.",
				"source": "src/core/api/modules/plugin.ts:146:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Execute this plugin. Returns `false` on crash.",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "force",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getStartFile",
				"comment": "Get the startfile location relative to the `./plugins/` directory. (`./dist/plugins/`) when compiled)",
				"source": "src/core/api/modules/plugin.ts:141:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the startfile location relative to the `./plugins/` directory. (`./dist/plugins/`) when compiled)",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "pluginsIncompatible",
				"comment": "Get a list of all enabled incompatible plugins that interfere with this plugin.",
				"source": "src/core/api/modules/plugin.ts:207:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a list of all enabled incompatible plugins that interfere with this plugin.",
					"parameters": [
						{
							"name": "manager",
							"details": {
								"type": "reference",
								"name": "ODPluginManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "primitive",
							"name": "string"
						}
					}
				}
			},
			{
				"type": "method",
				"name": "pluginsInstalled",
				"comment": "Get a list of all missing plugins that are required for this plugin.",
				"source": "src/core/api/modules/plugin.ts:195:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a list of all missing plugins that are required for this plugin.",
					"parameters": [
						{
							"name": "manager",
							"details": {
								"type": "reference",
								"name": "ODPluginManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "primitive",
							"name": "string"
						}
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODPluginClassManager",
		"comment": "## ODPluginClassManager `class`\nThis is an Open Ticket plugin class manager.\n\nIt manages all managers registered by plugins!\nPlugins are able to register their own managers, handlers, functions, classes, ... here.\nBy doing this, other plugins are also able to make use of it.\nThis can be useful for plugins that want to extend other plugins.\n\nUse `isPluginLoaded()` to check if a plugin has been loaded before trying to access the manager.",
		"constant": false,
		"source": "src/core/api/modules/plugin.ts:230:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/plugin.ts:231:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPluginClassManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODManagerData",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODManagerData",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODManagerData",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODManagerData",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODManagerData",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODManagerData",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODManagerData",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODManagerData",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODManagerData",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODManagerData",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODManagerData",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODManagerData",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODManagerData",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODPluginManager",
		"comment": "## ODPluginManager `class`\nThis is an Open Ticket plugin manager.\n\nIt manages all active plugins in the bot!\nIt also contains all \"plugin classes\" which are managers registered by plugins.\nThese are accessible via the `openticket.plugins.classes` global.\n\nUse `isPluginLoaded()` to check if a plugin has been loaded.",
		"constant": false,
		"source": "src/core/api/modules/plugin.ts:27:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/plugin.ts:33:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPluginManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "classes",
				"comment": "A manager for all custom managers registered by plugins.",
				"source": "src/core/api/modules/plugin.ts:29:4",
				"details": {
					"type": "reference",
					"name": "ODPluginClassManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "unknownCrashedPlugins",
				"comment": "A list of basic details from all plugins that crashed while loading the `plugin.json` file.",
				"source": "src/core/api/modules/plugin.ts:31:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODUnknownCrashedPlugin",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODPlugin",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODPlugin",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPlugin",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPlugin",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODPlugin",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODPlugin",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPlugin",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPlugin",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "isPluginLoaded",
				"comment": "Check if a plugin has been loaded successfully and is available for usage.",
				"source": "src/core/api/modules/plugin.ts:39:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if a plugin has been loaded successfully and is available for usage.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODPlugin",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPlugin",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPlugin",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPlugin",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPlugin",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODPluginData",
		"comment": "## ODPluginData `interface`\nParsed data from the `plugin.json` file in a plugin.",
		"constant": false,
		"source": "src/core/api/modules/plugin.ts:49:17",
		"children": [
			{
				"type": "property",
				"name": "details",
				"comment": "Additional details about this plugin.",
				"source": "src/core/api/modules/plugin.ts:74:4",
				"details": {
					"type": "reference",
					"name": "ODPluginDetails",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "enabled",
				"comment": "Is this plugin enabled?",
				"source": "src/core/api/modules/plugin.ts:60:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "events",
				"comment": "A list of events to register to the `openticket.events` global before loading any plugins. This way, plugins with a higher priority are able to use events from this plugin as well!",
				"source": "src/core/api/modules/plugin.ts:64:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this plugin. (Must be identical to directory name)",
				"source": "src/core/api/modules/plugin.ts:53:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "incompatiblePlugins",
				"comment": "Plugins which are incompatible with this plugin.",
				"source": "src/core/api/modules/plugin.ts:71:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this plugin (shown on startup)",
				"source": "src/core/api/modules/plugin.ts:51:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "npmDependencies",
				"comment": "Npm dependencies which are required for this plugin to work.",
				"source": "src/core/api/modules/plugin.ts:67:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this plugin. Higher priority will load before lower priority.",
				"source": "src/core/api/modules/plugin.ts:62:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "requiredPlugins",
				"comment": "Plugins which are required for this plugin to work.",
				"source": "src/core/api/modules/plugin.ts:69:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "startFile",
				"comment": "The location of the start file of the plugin relative to the rootDir of the plugin",
				"source": "src/core/api/modules/plugin.ts:57:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "version",
				"comment": "The version of this plugin.",
				"source": "src/core/api/modules/plugin.ts:55:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODPluginDetails",
		"comment": "## ODPluginDetails `interface`\nAdditional details in the `plugin.json` file from a plugin.",
		"constant": false,
		"source": "src/core/api/modules/plugin.ts:80:17",
		"children": [
			{
				"type": "property",
				"name": "author",
				"comment": "The author of the plugin.",
				"source": "src/core/api/modules/plugin.ts:82:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "imageUrl",
				"comment": "A URL to a cover image of this plugin. (currently unused)",
				"source": "src/core/api/modules/plugin.ts:88:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "longDescription",
				"comment": "A large description of this plugin.",
				"source": "src/core/api/modules/plugin.ts:86:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "projectUrl",
				"comment": "A URL to the website/project page of this plugin. (currently unused)",
				"source": "src/core/api/modules/plugin.ts:90:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "shortDescription",
				"comment": "A short description of this plugin.",
				"source": "src/core/api/modules/plugin.ts:84:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "tags",
				"comment": "A list of tags/categories that this plugin affects.",
				"source": "src/core/api/modules/plugin.ts:92:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODUnknownCrashedPlugin",
		"comment": "## ODUnknownCrashedPlugin `interface`\nBasic details for a plugin that crashed while loading the `plugin.json` file.",
		"constant": false,
		"source": "src/core/api/modules/plugin.ts:11:17",
		"children": [
			{
				"type": "property",
				"name": "description",
				"comment": "The description of the plugin. (when found before crashing)",
				"source": "src/core/api/modules/plugin.ts:15:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of the plugin. (path when plugin crashed before `name` was loaded)",
				"source": "src/core/api/modules/plugin.ts:13:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODPost",
		"comment": "## ODPost `class`\nThis is an Open Ticket post class.\n\nA post is just a shortcut to a static discord channel or category.\nThis can be used to get a specific channel over and over again!\n\nThis class also contains utilities for sending messages via the Open Ticket builders.",
		"constant": false,
		"source": "src/core/api/modules/post.ts:46:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/post.ts:56:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "channelId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPost",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "ChannelType",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "channel",
				"comment": "The discord.js channel",
				"source": "src/core/api/modules/post.ts:52:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "typeParam",
							"name": "ChannelType",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "channelId",
				"comment": "The discord channel id",
				"source": "src/core/api/modules/post.ts:54:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": "Is this post already initialized?",
				"source": "src/core/api/modules/post.ts:50:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initialize the discord.js channel of this post.",
				"source": "src/core/api/modules/post.ts:70:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Initialize the discord.js channel of this post.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "undefined"
									},
									{
										"type": "literal",
										"name": "null"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "send",
				"comment": "Send a message to this channel using the Open Ticket builder system",
				"source": "src/core/api/modules/post.ts:81:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Send a message to this channel using the Open Ticket builder system",
					"parameters": [
						{
							"name": "msg",
							"details": {
								"type": "reference",
								"name": "ODMessageBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODMessageBuildSentResult",
								"target": "interface",
								"typeArguments": [
									{
										"type": "literal",
										"name": "true"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setChannelId",
				"comment": "Change the channel id to another channel!",
				"source": "src/core/api/modules/post.ts:66:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Change the channel id to another channel!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useGuild",
				"comment": "Use a specific guild in this class for fetching the channel",
				"source": "src/core/api/modules/post.ts:62:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Use a specific guild in this class for fetching the channel",
					"parameters": [
						{
							"name": "guild",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "ChannelType",
				"type": {
					"type": "external",
					"package": "discord.js",
					"name": "discord.GuildBasedChannel",
					"typeArguments": null
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODPostManager",
		"comment": "## ODPostManager `class`\nThis is an Open Ticket post manager.\n\nIt manages `ODPosts`'s for you.\n\nYou can use this to get the logs channel of the bot (or some other static channel/category).",
		"constant": false,
		"source": "src/core/api/modules/post.ts:16:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/post.ts:20:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPostManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/post.ts:24:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODPost",
								"target": "class",
								"typeArguments": [
									{
										"type": "external",
										"package": "discord.js",
										"name": "GuildBasedChannel",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPost",
								"target": "class",
								"typeArguments": [
									{
										"type": "external",
										"package": "discord.js",
										"name": "GuildBasedChannel",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPost",
							"target": "class",
							"typeArguments": [
								{
									"type": "external",
									"package": "discord.js",
									"name": "GuildBasedChannel",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODPost",
											"target": "class",
											"typeArguments": [
												{
													"type": "external",
													"package": "discord.js",
													"name": "GuildBasedChannel",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODPost",
												"target": "class",
												"typeArguments": [
													{
														"type": "external",
														"package": "discord.js",
														"name": "GuildBasedChannel",
														"typeArguments": null
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPost",
							"target": "class",
							"typeArguments": [
								{
									"type": "external",
									"package": "discord.js",
									"name": "GuildBasedChannel",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPost",
							"target": "class",
							"typeArguments": [
								{
									"type": "external",
									"package": "discord.js",
									"name": "GuildBasedChannel",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initialize the post manager & all posts.",
				"source": "src/core/api/modules/post.ts:29:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Initialize the post manager & all posts.",
					"parameters": [
						{
							"name": "guild",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "Guild",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODPost",
											"target": "class",
											"typeArguments": [
												{
													"type": "external",
													"package": "discord.js",
													"name": "GuildBasedChannel",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPost",
										"target": "class",
										"typeArguments": [
											{
												"type": "external",
												"package": "discord.js",
												"name": "GuildBasedChannel",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPost",
										"target": "class",
										"typeArguments": [
											{
												"type": "external",
												"package": "discord.js",
												"name": "GuildBasedChannel",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPost",
										"target": "class",
										"typeArguments": [
											{
												"type": "external",
												"package": "discord.js",
												"name": "GuildBasedChannel",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPost",
								"target": "class",
								"typeArguments": [
									{
										"type": "external",
										"package": "discord.js",
										"name": "GuildBasedChannel",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODManualProgressBar",
		"comment": "## ODManualProgressBar `class`\nThis is an Open Ticket manual console progress bar.\n\nIt is used to create a simple manual progress bar in the console.\nYou can update the progress manually using `update()`.",
		"constant": false,
		"source": "src/core/api/modules/progressbar.ts:212:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/progressbar.ts:213:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "renderer",
							"details": {
								"type": "reference",
								"name": "ODProgressBarRenderer",
								"target": "class",
								"typeArguments": [
									{
										"type": "unknown"
									}
								]
							}
						},
						{
							"name": "amount",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "autoStop",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "literal",
										"name": "\"min\""
									},
									{
										"type": "literal",
										"name": "\"max\""
									}
								]
							}
						},
						{
							"name": "prefix",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						},
						{
							"name": "suffix",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODManualProgressBar",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "autoStop",
				"comment": "Enable automatic stopping when reaching `min` or `max`.",
				"source": "src/core/api/modules/progressbar.ts:107:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "literal",
							"name": "\"min\""
						},
						{
							"type": "literal",
							"name": "\"max\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "initialValue",
				"comment": "The initial value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:100:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "max",
				"comment": "The maximum value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:98:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "min",
				"comment": "The minimum value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:96:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "prefix",
				"comment": "The prefix displayed in the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:102:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderer",
				"comment": "The renderer of this progress bar.",
				"source": "src/core/api/modules/progressbar.ts:88:4",
				"details": {
					"type": "reference",
					"name": "ODProgressBarRenderer",
					"target": "class",
					"typeArguments": [
						{
							"type": "unknown"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "suffix",
				"comment": "The prefix displayed in the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:104:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The current value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:94:14",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "decrease",
				"comment": "Decrease the value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:229:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Decrease the value of the progress bar.",
					"parameters": [
						{
							"name": "amount",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "stop",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "finished",
				"comment": "Wait for the progress bar to finish.",
				"source": "src/core/api/modules/progressbar.ts:155:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Wait for the progress bar to finish.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get the current value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:221:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the current value of the progress bar.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "increase",
				"comment": "Increase the value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:225:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Increase the value of the progress bar.",
					"parameters": [
						{
							"name": "amount",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "stop",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "set",
				"comment": "Set the value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:217:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the value of the progress bar.",
					"parameters": [
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "stop",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "start",
				"comment": "Start showing this progress bar in the console.",
				"source": "src/core/api/modules/progressbar.ts:134:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Start showing this progress bar in the console.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "update",
				"comment": "Update this progress bar while active. (will automatically update the progress bar in the console)",
				"source": "src/core/api/modules/progressbar.ts:142:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Update this progress bar while active. (will automatically update the progress bar in the console)",
					"parameters": [
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "stop",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODProgressBar",
		"comment": "## ODProgressBar `class`\nThis is an Open Ticket console progress bar.\n\nIt is used to create a simple or advanced progress bar in the console of the bot.\nThese progress bars are not visible in the `otdebug.txt` file and should only be used as extra visuals.\n\nUse other classes as existing templates or create your own progress bar from scratch using this class.",
		"constant": false,
		"source": "src/core/api/modules/progressbar.ts:86:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/progressbar.ts:109:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "renderer",
							"details": {
								"type": "reference",
								"name": "ODProgressBarRenderer",
								"target": "class",
								"typeArguments": [
									{
										"type": "unknown"
									}
								]
							}
						},
						{
							"name": "min",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "max",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "autoStop",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "literal",
										"name": "\"min\""
									},
									{
										"type": "literal",
										"name": "\"max\""
									}
								]
							}
						},
						{
							"name": "prefix",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						},
						{
							"name": "suffix",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODProgressBar",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "autoStop",
				"comment": "Enable automatic stopping when reaching `min` or `max`.",
				"source": "src/core/api/modules/progressbar.ts:107:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "literal",
							"name": "\"min\""
						},
						{
							"type": "literal",
							"name": "\"max\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "initialValue",
				"comment": "The initial value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:100:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "max",
				"comment": "The maximum value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:98:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "min",
				"comment": "The minimum value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:96:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "prefix",
				"comment": "The prefix displayed in the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:102:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderer",
				"comment": "The renderer of this progress bar.",
				"source": "src/core/api/modules/progressbar.ts:88:4",
				"details": {
					"type": "reference",
					"name": "ODProgressBarRenderer",
					"target": "class",
					"typeArguments": [
						{
							"type": "unknown"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "suffix",
				"comment": "The prefix displayed in the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:104:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The current value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:94:14",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "finished",
				"comment": "Wait for the progress bar to finish.",
				"source": "src/core/api/modules/progressbar.ts:155:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Wait for the progress bar to finish.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "start",
				"comment": "Start showing this progress bar in the console.",
				"source": "src/core/api/modules/progressbar.ts:134:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Start showing this progress bar in the console.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "update",
				"comment": "Update this progress bar while active. (will automatically update the progress bar in the console)",
				"source": "src/core/api/modules/progressbar.ts:142:14",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Update this progress bar while active. (will automatically update the progress bar in the console)",
					"parameters": [
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "stop",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODProgressBarManager",
		"comment": "## ODProgressBarManager `class`\nThis is an Open Ticket progress bar manager.\n\nIt is responsible for managing all console progress bars in Open Ticket. An example of this is the slash command registration progress bar.\n\nThere are many types of progress bars available, but you can also create your own!",
		"constant": false,
		"source": "src/core/api/modules/progressbar.ts:28:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/progressbar.ts:31:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODProgressBarManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "renderers",
				"comment": null,
				"source": "src/core/api/modules/progressbar.ts:29:4",
				"details": {
					"type": "reference",
					"name": "ODProgressBarRendererManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODProgressBar",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODProgressBar",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODProgressBar",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODProgressBar",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODProgressBar",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODProgressBar",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODProgressBar",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODProgressBar",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODProgressBar",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODProgressBar",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODProgressBar",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODProgressBar",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODProgressBar",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODProgressBarRenderer",
		"comment": "## ODProgressBarRenderer `class`\nThis is an Open Ticket console progress bar renderer.\n\nIt is used to render a progress bar in the console of the bot.\n\nThere are already a lot of default options available if you just want an easy progress bar!",
		"constant": false,
		"source": "src/core/api/modules/progressbar.ts:49:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/progressbar.ts:53:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "render",
							"details": {
								"type": "reference",
								"name": "ODProgressBarRenderFunc",
								"target": "type",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "Settings",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "settings",
							"details": {
								"type": "typeParam",
								"name": "Settings",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODProgressBarRenderer",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Settings",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "settings",
				"comment": null,
				"source": "src/core/api/modules/progressbar.ts:50:4",
				"details": {
					"type": "typeParam",
					"name": "Settings",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render a progress bar using this renderer.",
				"source": "src/core/api/modules/progressbar.ts:60:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Render a progress bar using this renderer.",
					"parameters": [
						{
							"name": "min",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "max",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "prefix",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						},
						{
							"name": "suffix",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "withAdditionalSettings",
				"comment": null,
				"source": "src/core/api/modules/progressbar.ts:69:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "settings",
							"details": {
								"type": "internal",
								"name": "Partial",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "Settings",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODProgressBarRenderer",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Settings",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Settings",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODProgressBarRendererManager",
		"comment": "## ODProgressBarRendererManager `class`\nThis is an Open Ticket progress bar renderer manager.\n\nIt is responsible for managing all console progress bar renderers in Open Ticket.\n\nA renderer is a function which will try to visualize the progress bar in the console.",
		"constant": false,
		"source": "src/core/api/modules/progressbar.ts:15:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/progressbar.ts:16:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODProgressBarRendererManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODProgressBarRenderer",
										"target": "class",
										"typeArguments": [
											{
												"type": "unknown"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODProgressBarRenderer",
											"target": "class",
											"typeArguments": [
												{
													"type": "unknown"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODProgressBarRenderer",
								"target": "class",
								"typeArguments": [
									{
										"type": "unknown"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODProgressBarRenderer",
							"target": "class",
							"typeArguments": [
								{
									"type": "unknown"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODProgressBarRenderer",
											"target": "class",
											"typeArguments": [
												{
													"type": "unknown"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODProgressBarRenderer",
												"target": "class",
												"typeArguments": [
													{
														"type": "unknown"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODProgressBarRenderer",
							"target": "class",
							"typeArguments": [
								{
									"type": "unknown"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODProgressBarRenderer",
							"target": "class",
							"typeArguments": [
								{
									"type": "unknown"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODProgressBarRenderer",
											"target": "class",
											"typeArguments": [
												{
													"type": "unknown"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODProgressBarRenderer",
										"target": "class",
										"typeArguments": [
											{
												"type": "unknown"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODProgressBarRenderer",
										"target": "class",
										"typeArguments": [
											{
												"type": "unknown"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODProgressBarRenderer",
										"target": "class",
										"typeArguments": [
											{
												"type": "unknown"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODProgressBarRenderer",
								"target": "class",
								"typeArguments": [
									{
										"type": "unknown"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODTimedProgressBar",
		"comment": "## ODTimedProgressBar `class`\nThis is an Open Ticket timed console progress bar.\n\nIt is used to create a simple timed progress bar in the console.\nYou can set a fixed duration (milliseconds) in the constructor.",
		"constant": false,
		"source": "src/core/api/modules/progressbar.ts:168:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/progressbar.ts:174:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "renderer",
							"details": {
								"type": "reference",
								"name": "ODProgressBarRenderer",
								"target": "class",
								"typeArguments": [
									{
										"type": "unknown"
									}
								]
							}
						},
						{
							"name": "time",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"increasing\""
									},
									{
										"type": "literal",
										"name": "\"decreasing\""
									}
								]
							}
						},
						{
							"name": "prefix",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						},
						{
							"name": "suffix",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTimedProgressBar",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "autoStop",
				"comment": "Enable automatic stopping when reaching `min` or `max`.",
				"source": "src/core/api/modules/progressbar.ts:107:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "literal",
							"name": "\"min\""
						},
						{
							"type": "literal",
							"name": "\"max\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "initialValue",
				"comment": "The initial value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:100:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "max",
				"comment": "The maximum value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:98:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "min",
				"comment": "The minimum value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:96:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "mode",
				"comment": "The mode of the timer.",
				"source": "src/core/api/modules/progressbar.ts:172:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"increasing\""
						},
						{
							"type": "literal",
							"name": "\"decreasing\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "prefix",
				"comment": "The prefix displayed in the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:102:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderer",
				"comment": "The renderer of this progress bar.",
				"source": "src/core/api/modules/progressbar.ts:88:4",
				"details": {
					"type": "reference",
					"name": "ODProgressBarRenderer",
					"target": "class",
					"typeArguments": [
						{
							"type": "unknown"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "suffix",
				"comment": "The prefix displayed in the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:104:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "time",
				"comment": "The time in milliseconds.",
				"source": "src/core/api/modules/progressbar.ts:170:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The current value of the progress bar.",
				"source": "src/core/api/modules/progressbar.ts:94:14",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "finished",
				"comment": "Wait for the progress bar to finish.",
				"source": "src/core/api/modules/progressbar.ts:155:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Wait for the progress bar to finish.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "start",
				"comment": "Start showing this progress bar in the console.",
				"source": "src/core/api/modules/progressbar.ts:198:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Start showing this progress bar in the console.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "update",
				"comment": "Update this progress bar while active. (will automatically update the progress bar in the console)",
				"source": "src/core/api/modules/progressbar.ts:142:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Update this progress bar while active. (will automatically update the progress bar in the console)",
					"parameters": [
						{
							"name": "value",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "stop",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODProgressBarRenderFunc",
		"comment": "## ODProgressBarRenderFunc `type`\nThis is the render function for an Open Ticket console progress bar.",
		"constant": false,
		"source": "src/core/api/modules/progressbar.ts:40:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "settings",
						"details": {
							"type": "typeParam",
							"name": "Settings",
							"typeArguments": null
						}
					},
					{
						"name": "min",
						"details": {
							"type": "primitive",
							"name": "number"
						}
					},
					{
						"name": "max",
						"details": {
							"type": "primitive",
							"name": "number"
						}
					},
					{
						"name": "value",
						"details": {
							"type": "primitive",
							"name": "number"
						}
					},
					{
						"name": "prefix",
						"details": {
							"type": "union",
							"children": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "literal",
									"name": "null"
								}
							]
						}
					},
					{
						"name": "suffix",
						"details": {
							"type": "union",
							"children": [
								{
									"type": "primitive",
									"name": "string"
								},
								{
									"type": "literal",
									"name": "null"
								}
							]
						}
					}
				],
				"returns": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": [
			{
				"name": "Settings",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODButtonResponder",
		"comment": "## ODButtonResponder `class`\nThis is an Open Ticket button responder.\n\nThis class manages all workers which are executed when the related button is triggered.",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:638:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:24:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "match",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "internal",
										"name": "RegExp",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButtonResponderInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButtonResponder",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "match",
				"comment": "The `commandName` or `customId` needs to match this string or regex for this responder to be executed.",
				"source": "src/core/api/modules/responder.ts:22:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "string"
						},
						{
							"type": "internal",
							"name": "RegExp",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/modules/responder.ts:20:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODButtonResponderInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "respond",
				"comment": "Respond to this button",
				"source": "src/core/api/modules/responder.ts:640:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Respond to this button",
					"parameters": [
						{
							"name": "instance",
							"details": {
								"type": "reference",
								"name": "ODButtonResponderInstance",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODButtonResponderInstance",
		"comment": "## ODButtonResponderInstance `class`\nThis is an Open Ticket button responder instance.\n\nAn instance is an active button interaction. You can reply to the button using `reply()`.",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:507:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:523:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "interaction",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "ButtonInteraction",
								"typeArguments": null
							}
						},
						{
							"name": "errorCallback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODResponderTimeoutErrorCallback",
										"target": "type",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODButtonResponderInstance",
												"target": "class",
												"typeArguments": null
											},
											{
												"type": "literal",
												"name": "\"button\""
											}
										]
									}
								]
							}
						},
						{
							"name": "timeoutMs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButtonResponderInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "channel",
				"comment": "The channel where this button was triggered.",
				"source": "src/core/api/modules/responder.ts:519:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "TextBasedChannel",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "didReply",
				"comment": "Did a worker already reply to this instance/interaction?",
				"source": "src/core/api/modules/responder.ts:511:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "guild",
				"comment": "The guild where this button was triggered.",
				"source": "src/core/api/modules/responder.ts:517:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "Guild",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "interaction",
				"comment": "The interaction which is the source of this instance.",
				"source": "src/core/api/modules/responder.ts:509:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "ButtonInteraction",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "member",
				"comment": "The guild member who triggered this button.",
				"source": "src/core/api/modules/responder.ts:515:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "GuildMember",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": "The message this button originates from.",
				"source": "src/core/api/modules/responder.ts:521:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "Message",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "user",
				"comment": "The user who triggered this button.",
				"source": "src/core/api/modules/responder.ts:513:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "User",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "defer",
				"comment": "Defer this button.",
				"source": "src/core/api/modules/responder.ts:585:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Defer this button.",
					"parameters": [
						{
							"name": "type",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"reply\""
									},
									{
										"type": "literal",
										"name": "\"update\""
									}
								]
							}
						},
						{
							"name": "ephemeral",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getMessageComponent",
				"comment": "Get a component from the original message of this button.",
				"source": "src/core/api/modules/responder.ts:604:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a component from the original message of this button.",
					"parameters": [
						{
							"name": "type",
							"details": {
								"type": "literal",
								"name": "\"button\""
							}
						},
						{
							"name": "id",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "internal",
										"name": "RegExp",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "ButtonComponent",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getMessageEmbed",
				"comment": "Get the first embed of the original message if it exists.",
				"source": "src/core/api/modules/responder.ts:628:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the first embed of the original message if it exists.",
					"parameters": [],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "Embed",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "modal",
				"comment": "Show a modal as reply to this button.",
				"source": "src/core/api/modules/responder.ts:597:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Show a modal as reply to this button.",
					"parameters": [
						{
							"name": "modal",
							"details": {
								"type": "reference",
								"name": "ODModalBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "reply",
				"comment": "Reply to this button.",
				"source": "src/core/api/modules/responder.ts:551:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Reply to this button.",
					"parameters": [
						{
							"name": "msg",
							"details": {
								"type": "reference",
								"name": "ODMessageBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODMessageBuildSentResult",
								"target": "interface",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "boolean"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "update",
				"comment": "Update the message of this button.",
				"source": "src/core/api/modules/responder.ts:568:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Update the message of this button.",
					"parameters": [
						{
							"name": "msg",
							"details": {
								"type": "reference",
								"name": "ODMessageBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODMessageBuildSentResult",
								"target": "interface",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "boolean"
									}
								]
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODButtonResponderManager",
		"comment": "## ODButtonResponderManager `class`\nThis is an Open Ticket button responder manager.\n\nIt contains all Open Ticket button responders. These can respond to button interactions.\n\nUsing the Open Ticket responder system has a few advantages compared to vanilla discord.js:\n- plugins can extend/edit replies\n- automatically reply on error\n- independent workers (with priority)\n- fail-safe design using try-catch\n- know where the request came from!\n- And so much more!",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:463:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:473:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "client",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODButtonResponderManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/responder.ts:489:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODButtonResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"button\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODButtonResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"button\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODButtonResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"button\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODButtonResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "literal",
													"name": "\"button\""
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODButtonResponder",
												"target": "class",
												"typeArguments": [
													{
														"type": "literal",
														"name": "\"button\""
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODButtonResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"button\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODButtonResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"button\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODButtonResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "literal",
													"name": "\"button\""
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButtonResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"button\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButtonResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"button\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODButtonResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"button\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODButtonResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"button\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setTimeoutErrorCallback",
				"comment": "Set the message to send when the response times out!",
				"source": "src/core/api/modules/responder.ts:484:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the message to send when the response times out!",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODResponderTimeoutErrorCallback",
										"target": "type",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODButtonResponderInstance",
												"target": "class",
												"typeArguments": null
											},
											{
												"type": "literal",
												"name": "\"button\""
											}
										]
									}
								]
							}
						},
						{
							"name": "ms",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCommandResponder",
		"comment": "## ODCommandResponder `class`\nThis is an Open Ticket command responder.\n\nThis class manages all workers which are executed when the related command is triggered.",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:434:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:438:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "prefix",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "match",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "internal",
										"name": "RegExp",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCommandResponderInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCommandResponder",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "match",
				"comment": "The `commandName` or `customId` needs to match this string or regex for this responder to be executed.",
				"source": "src/core/api/modules/responder.ts:22:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "string"
						},
						{
							"type": "internal",
							"name": "RegExp",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "prefix",
				"comment": "The prefix of the text command needs to match this",
				"source": "src/core/api/modules/responder.ts:436:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/modules/responder.ts:20:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODCommandResponderInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "respond",
				"comment": "Respond to this command",
				"source": "src/core/api/modules/responder.ts:444:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Respond to this command",
					"parameters": [
						{
							"name": "instance",
							"details": {
								"type": "reference",
								"name": "ODCommandResponderInstance",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"slash\""
						},
						{
							"type": "literal",
							"name": "\"text\""
						}
					]
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODCommandResponderInstance",
		"comment": "## ODCommandResponderInstance `class`\nThis is an Open Ticket command responder instance.\n\nAn instance is an active slash interaction or used text command. You can reply to the command using `reply()` for both slash & text commands.",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:338:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:358:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "interaction",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "external",
										"package": "discord.js",
										"name": "ChatInputCommandInteraction",
										"typeArguments": null
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Message",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "cmd",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODSlashCommand",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "reference",
										"name": "ODTextCommand",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "errorCallback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODResponderTimeoutErrorCallback",
										"target": "type",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODCommandResponderInstance",
												"target": "class",
												"typeArguments": null
											},
											{
												"type": "union",
												"children": [
													{
														"type": "literal",
														"name": "\"text\""
													},
													{
														"type": "literal",
														"name": "\"slash\""
													}
												]
											}
										]
									}
								]
							}
						},
						{
							"name": "timeoutMs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									}
								]
							}
						},
						{
							"name": "options",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODTextCommandInteractionOption",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCommandResponderInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "channel",
				"comment": "The channel where this command was triggered.",
				"source": "src/core/api/modules/responder.ts:356:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "TextBasedChannel",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "cmd",
				"comment": "The command wich is the source of this instance.",
				"source": "src/core/api/modules/responder.ts:342:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "reference",
							"name": "ODSlashCommand",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "reference",
							"name": "ODTextCommand",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "didReply",
				"comment": "Did a worker already reply to this instance/interaction?",
				"source": "src/core/api/modules/responder.ts:346:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "guild",
				"comment": "The guild where this command was triggered.",
				"source": "src/core/api/modules/responder.ts:354:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "Guild",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "interaction",
				"comment": "The interaction which is the source of this instance.",
				"source": "src/core/api/modules/responder.ts:340:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "external",
							"package": "discord.js",
							"name": "ChatInputCommandInteraction",
							"typeArguments": null
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "Message",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "member",
				"comment": "The guild member who triggered this command.",
				"source": "src/core/api/modules/responder.ts:352:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "GuildMember",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "The manager for all options of this command.",
				"source": "src/core/api/modules/responder.ts:348:4",
				"details": {
					"type": "reference",
					"name": "ODCommandResponderInstanceOptions",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type/source of instance. (from text or slash command)",
				"source": "src/core/api/modules/responder.ts:344:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"message\""
						},
						{
							"type": "literal",
							"name": "\"interaction\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "user",
				"comment": "The user who triggered this command.",
				"source": "src/core/api/modules/responder.ts:350:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "User",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "defer",
				"comment": "Defer this command.",
				"source": "src/core/api/modules/responder.ts:412:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Defer this command.",
					"parameters": [
						{
							"name": "ephemeral",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "modal",
				"comment": "Show a modal as reply to this command.",
				"source": "src/core/api/modules/responder.ts:421:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Show a modal as reply to this command.",
					"parameters": [
						{
							"name": "modal",
							"details": {
								"type": "reference",
								"name": "ODModalBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "reply",
				"comment": "Reply to this command.",
				"source": "src/core/api/modules/responder.ts:389:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Reply to this command.",
					"parameters": [
						{
							"name": "msg",
							"details": {
								"type": "reference",
								"name": "ODMessageBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODMessageBuildSentResult",
								"target": "interface",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "boolean"
									}
								]
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCommandResponderInstanceOptions",
		"comment": "## ODCommandResponderInstanceOptions `class`\nThis is an Open Ticket command responder instance options manager.\n\nThis class will manage all options & subcommands from slash & text commands.",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:132:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:140:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "interaction",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "external",
										"package": "discord.js",
										"name": "ChatInputCommandInteraction",
										"typeArguments": null
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Message",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "cmd",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODSlashCommand",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "reference",
										"name": "ODTextCommand",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "options",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODTextCommandInteractionOption",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCommandResponderInstanceOptions",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "getBoolean",
				"comment": "Get a boolean option.",
				"source": "src/core/api/modules/responder.ts:165:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a boolean option.",
					"parameters": [
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "required",
							"details": {
								"type": "literal",
								"name": "true"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "getChannel",
				"comment": "Get a channel option.",
				"source": "src/core/api/modules/responder.ts:201:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a channel option.",
					"parameters": [
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "required",
							"details": {
								"type": "literal",
								"name": "true"
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "external",
								"package": "discord.js",
								"name": "CategoryChannel",
								"typeArguments": null
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "NewsChannel",
								"typeArguments": null
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "StageChannel",
								"typeArguments": null
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "TextChannel",
								"typeArguments": null
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "VoiceChannel",
								"typeArguments": null
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "ForumChannel",
								"typeArguments": null
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "MediaChannel",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getGuildMember",
				"comment": "Get a guild member option.",
				"source": "src/core/api/modules/responder.ts:255:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a guild member option.",
					"parameters": [
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "required",
							"details": {
								"type": "literal",
								"name": "true"
							}
						}
					],
					"returns": {
						"type": "external",
						"package": "discord.js",
						"name": "GuildMember",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "getMentionable",
				"comment": "Get a mentionable option.",
				"source": "src/core/api/modules/responder.ts:275:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a mentionable option.",
					"parameters": [
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "required",
							"details": {
								"type": "literal",
								"name": "true"
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "Role",
								"typeArguments": null
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "GuildMember",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getNumber",
				"comment": "Get a number option.",
				"source": "src/core/api/modules/responder.ts:183:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a number option.",
					"parameters": [
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "required",
							"details": {
								"type": "literal",
								"name": "true"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRole",
				"comment": "Get a role option.",
				"source": "src/core/api/modules/responder.ts:219:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a role option.",
					"parameters": [
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "required",
							"details": {
								"type": "literal",
								"name": "true"
							}
						}
					],
					"returns": {
						"type": "external",
						"package": "discord.js",
						"name": "Role",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "getString",
				"comment": "Get a string option.",
				"source": "src/core/api/modules/responder.ts:147:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a string option.",
					"parameters": [
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "required",
							"details": {
								"type": "literal",
								"name": "true"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "getSubCommand",
				"comment": "Get a subcommand.",
				"source": "src/core/api/modules/responder.ts:310:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a subcommand.",
					"parameters": [],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getSubGroup",
				"comment": "Get a subgroup.",
				"source": "src/core/api/modules/responder.ts:293:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a subgroup.",
					"parameters": [],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getUser",
				"comment": "Get a user option.",
				"source": "src/core/api/modules/responder.ts:237:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a user option.",
					"parameters": [
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "required",
							"details": {
								"type": "literal",
								"name": "true"
							}
						}
					],
					"returns": {
						"type": "external",
						"package": "discord.js",
						"name": "User",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODCommandResponderManager",
		"comment": "## ODCommandResponderManager `class`\nThis is an Open Ticket command responder manager.\n\nIt contains all Open Ticket command responders. These can respond to text & slash commands.\n\nUsing the Open Ticket responder system has a few advantages compared to vanilla discord.js:\n- plugins can extend/edit replies\n- automatically reply on error\n- independent workers (with priority)\n- fail-safe design using try-catch\n- write code once => reply to both slash & text commands at the same time!\n- know where the request came from & parse options/subcommands & without errors!\n- And so much more!",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:87:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:95:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "client",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODCommandResponderManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/responder.ts:106:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODCommandResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "\"text\""
											},
											{
												"type": "literal",
												"name": "\"slash\""
											}
										]
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCommandResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "\"text\""
											},
											{
												"type": "literal",
												"name": "\"slash\""
											}
										]
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCommandResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "union",
									"children": [
										{
											"type": "literal",
											"name": "\"text\""
										},
										{
											"type": "literal",
											"name": "\"slash\""
										}
									]
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODCommandResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "union",
													"children": [
														{
															"type": "literal",
															"name": "\"text\""
														},
														{
															"type": "literal",
															"name": "\"slash\""
														}
													]
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODCommandResponder",
												"target": "class",
												"typeArguments": [
													{
														"type": "union",
														"children": [
															{
																"type": "literal",
																"name": "\"text\""
															},
															{
																"type": "literal",
																"name": "\"slash\""
															}
														]
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCommandResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "union",
									"children": [
										{
											"type": "literal",
											"name": "\"text\""
										},
										{
											"type": "literal",
											"name": "\"slash\""
										}
									]
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODCommandResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "union",
									"children": [
										{
											"type": "literal",
											"name": "\"text\""
										},
										{
											"type": "literal",
											"name": "\"slash\""
										}
									]
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODCommandResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "union",
													"children": [
														{
															"type": "literal",
															"name": "\"text\""
														},
														{
															"type": "literal",
															"name": "\"slash\""
														}
													]
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCommandResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "union",
												"children": [
													{
														"type": "literal",
														"name": "\"text\""
													},
													{
														"type": "literal",
														"name": "\"slash\""
													}
												]
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCommandResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "union",
												"children": [
													{
														"type": "literal",
														"name": "\"text\""
													},
													{
														"type": "literal",
														"name": "\"slash\""
													}
												]
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODCommandResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "union",
												"children": [
													{
														"type": "literal",
														"name": "\"text\""
													},
													{
														"type": "literal",
														"name": "\"slash\""
													}
												]
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODCommandResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "union",
										"children": [
											{
												"type": "literal",
												"name": "\"text\""
											},
											{
												"type": "literal",
												"name": "\"slash\""
											}
										]
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setTimeoutErrorCallback",
				"comment": "Set the message to send when the response times out!",
				"source": "src/core/api/modules/responder.ts:101:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the message to send when the response times out!",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODResponderTimeoutErrorCallback",
										"target": "type",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODCommandResponderInstance",
												"target": "class",
												"typeArguments": null
											},
											{
												"type": "union",
												"children": [
													{
														"type": "literal",
														"name": "\"text\""
													},
													{
														"type": "literal",
														"name": "\"slash\""
													}
												]
											}
										]
									}
								]
							}
						},
						{
							"name": "ms",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODDropdownResponder",
		"comment": "## ODDropdownResponder `class`\nThis is an Open Ticket dropdown responder.\n\nThis class manages all workers which are executed when the related dropdown is triggered.",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:925:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:24:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "match",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "internal",
										"name": "RegExp",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdownResponderInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownResponder",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "match",
				"comment": "The `commandName` or `customId` needs to match this string or regex for this responder to be executed.",
				"source": "src/core/api/modules/responder.ts:22:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "string"
						},
						{
							"type": "internal",
							"name": "RegExp",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/modules/responder.ts:20:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODDropdownResponderInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "respond",
				"comment": "Respond to this dropdown",
				"source": "src/core/api/modules/responder.ts:927:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Respond to this dropdown",
					"parameters": [
						{
							"name": "instance",
							"details": {
								"type": "reference",
								"name": "ODDropdownResponderInstance",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODDropdownResponderInstance",
		"comment": "## ODDropdownResponderInstance `class`\nThis is an Open Ticket dropdown responder instance.\n\nAn instance is an active dropdown interaction. You can reply to the dropdown using `reply()`.",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:777:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:797:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "interaction",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "AnySelectMenuInteraction",
								"typeArguments": [
									{
										"type": "external",
										"package": "discord.js",
										"name": "CacheType",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "errorCallback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODResponderTimeoutErrorCallback",
										"target": "type",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODDropdownResponderInstance",
												"target": "class",
												"typeArguments": null
											},
											{
												"type": "literal",
												"name": "\"dropdown\""
											}
										]
									}
								]
							}
						},
						{
							"name": "timeoutMs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownResponderInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "channel",
				"comment": "The channel where this dropdown was triggered.",
				"source": "src/core/api/modules/responder.ts:793:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "TextBasedChannel",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "didReply",
				"comment": "Did a worker already reply to this instance/interaction?",
				"source": "src/core/api/modules/responder.ts:781:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "guild",
				"comment": "The guild where this dropdown was triggered.",
				"source": "src/core/api/modules/responder.ts:791:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "Guild",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "interaction",
				"comment": "The interaction which is the source of this instance.",
				"source": "src/core/api/modules/responder.ts:779:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "AnySelectMenuInteraction",
					"typeArguments": [
						{
							"type": "external",
							"package": "discord.js",
							"name": "CacheType",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "member",
				"comment": "The guild member who triggered this dropdown.",
				"source": "src/core/api/modules/responder.ts:789:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "GuildMember",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": "The message this dropdown originates from.",
				"source": "src/core/api/modules/responder.ts:795:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "Message",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The dropdown type.",
				"source": "src/core/api/modules/responder.ts:783:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"string\""
						},
						{
							"type": "literal",
							"name": "\"role\""
						},
						{
							"type": "literal",
							"name": "\"channel\""
						},
						{
							"type": "literal",
							"name": "\"user\""
						},
						{
							"type": "literal",
							"name": "\"mentionable\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "user",
				"comment": "The user who triggered this dropdown.",
				"source": "src/core/api/modules/responder.ts:787:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "User",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "values",
				"comment": "The manager for all values of this dropdown.",
				"source": "src/core/api/modules/responder.ts:785:4",
				"details": {
					"type": "reference",
					"name": "ODDropdownResponderInstanceValues",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "defer",
				"comment": "Defer this dropdown.",
				"source": "src/core/api/modules/responder.ts:872:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Defer this dropdown.",
					"parameters": [
						{
							"name": "type",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"reply\""
									},
									{
										"type": "literal",
										"name": "\"update\""
									}
								]
							}
						},
						{
							"name": "ephemeral",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getMessageComponent",
				"comment": "Get a component from the original message of this dropdown.",
				"source": "src/core/api/modules/responder.ts:891:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get a component from the original message of this dropdown.",
					"parameters": [
						{
							"name": "type",
							"details": {
								"type": "literal",
								"name": "\"button\""
							}
						},
						{
							"name": "id",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "internal",
										"name": "RegExp",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "ButtonComponent",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getMessageEmbed",
				"comment": "Get the first embed of the original message if it exists.",
				"source": "src/core/api/modules/responder.ts:915:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the first embed of the original message if it exists.",
					"parameters": [],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "external",
								"package": "discord.js",
								"name": "Embed",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "modal",
				"comment": "Show a modal as reply to this dropdown.",
				"source": "src/core/api/modules/responder.ts:884:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Show a modal as reply to this dropdown.",
					"parameters": [
						{
							"name": "modal",
							"details": {
								"type": "reference",
								"name": "ODModalBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "reply",
				"comment": "Reply to this dropdown.",
				"source": "src/core/api/modules/responder.ts:838:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Reply to this dropdown.",
					"parameters": [
						{
							"name": "msg",
							"details": {
								"type": "reference",
								"name": "ODMessageBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODMessageBuildSentResult",
								"target": "interface",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "boolean"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "update",
				"comment": "Update the message of this dropdown.",
				"source": "src/core/api/modules/responder.ts:855:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Update the message of this dropdown.",
					"parameters": [
						{
							"name": "msg",
							"details": {
								"type": "reference",
								"name": "ODMessageBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODMessageBuildSentResult",
								"target": "interface",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "boolean"
									}
								]
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODDropdownResponderInstanceValues",
		"comment": "## ODDropdownResponderInstanceValues `class`\nThis is an Open Ticket dropdown responder instance values manager.\n\nThis class will manage all values from the dropdowns & select menus.",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:703:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:709:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "interaction",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "AnySelectMenuInteraction",
								"typeArguments": [
									{
										"type": "external",
										"package": "discord.js",
										"name": "CacheType",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "type",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"string\""
									},
									{
										"type": "literal",
										"name": "\"role\""
									},
									{
										"type": "literal",
										"name": "\"channel\""
									},
									{
										"type": "literal",
										"name": "\"user\""
									},
									{
										"type": "literal",
										"name": "\"mentionable\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownResponderInstanceValues",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "getChannelValues",
				"comment": "Get the selected channels.",
				"source": "src/core/api/modules/responder.ts:756:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the selected channels.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "array",
								"child": {
									"type": "external",
									"package": "discord.js",
									"name": "GuildBasedChannel",
									"typeArguments": null
								}
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getRoleValues",
				"comment": "Get the selected roles.",
				"source": "src/core/api/modules/responder.ts:727:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the selected roles.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "array",
								"child": {
									"type": "external",
									"package": "discord.js",
									"name": "Role",
									"typeArguments": null
								}
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getStringValues",
				"comment": "Get the selected values.",
				"source": "src/core/api/modules/responder.ts:719:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the selected values.",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "primitive",
							"name": "string"
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getUserValues",
				"comment": "Get the selected users.",
				"source": "src/core/api/modules/responder.ts:742:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the selected users.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "array",
								"child": {
									"type": "external",
									"package": "discord.js",
									"name": "User",
									"typeArguments": null
								}
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODDropdownResponderManager",
		"comment": "## ODDropdownResponderManager `class`\nThis is an Open Ticket dropdown responder manager.\n\nIt contains all Open Ticket dropdown responders. These can respond to dropdown interactions.\n\nUsing the Open Ticket responder system has a few advantages compared to vanilla discord.js:\n- plugins can extend/edit replies\n- automatically reply on error\n- independent workers (with priority)\n- fail-safe design using try-catch\n- know where the request came from!\n- And so much more!",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:659:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:669:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "client",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDropdownResponderManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/responder.ts:685:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODDropdownResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"dropdown\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODDropdownResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"dropdown\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDropdownResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"dropdown\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODDropdownResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "literal",
													"name": "\"dropdown\""
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODDropdownResponder",
												"target": "class",
												"typeArguments": [
													{
														"type": "literal",
														"name": "\"dropdown\""
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDropdownResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"dropdown\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODDropdownResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"dropdown\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODDropdownResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "literal",
													"name": "\"dropdown\""
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdownResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"dropdown\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdownResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"dropdown\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODDropdownResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"dropdown\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODDropdownResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"dropdown\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setTimeoutErrorCallback",
				"comment": "Set the message to send when the response times out!",
				"source": "src/core/api/modules/responder.ts:680:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the message to send when the response times out!",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODResponderTimeoutErrorCallback",
										"target": "type",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODDropdownResponderInstance",
												"target": "class",
												"typeArguments": null
											},
											{
												"type": "literal",
												"name": "\"dropdown\""
											}
										]
									}
								]
							}
						},
						{
							"name": "ms",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODModalResponder",
		"comment": "## ODModalResponder `class`\nThis is an Open Ticket modal responder.\n\nThis class manages all workers which are executed when the related modal is triggered.",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:1108:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:24:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "match",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "internal",
										"name": "RegExp",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModalResponderInstance",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModalResponder",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "match",
				"comment": "The `commandName` or `customId` needs to match this string or regex for this responder to be executed.",
				"source": "src/core/api/modules/responder.ts:22:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "string"
						},
						{
							"type": "internal",
							"name": "RegExp",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/modules/responder.ts:20:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODModalResponderInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "respond",
				"comment": "Respond to this modal",
				"source": "src/core/api/modules/responder.ts:1110:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Respond to this modal",
					"parameters": [
						{
							"name": "instance",
							"details": {
								"type": "reference",
								"name": "ODModalResponderInstance",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODModalResponderInstance",
		"comment": "## ODModalResponderInstance `class`\nThis is an Open Ticket modal responder instance.\n\nAn instance is an active modal interaction. You can reply to the modal using `reply()`.",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:1017:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:1033:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "interaction",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "ModalSubmitInteraction",
								"typeArguments": null
							}
						},
						{
							"name": "errorCallback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODResponderTimeoutErrorCallback",
										"target": "type",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODModalResponderInstance",
												"target": "class",
												"typeArguments": null
											},
											{
												"type": "literal",
												"name": "\"modal\""
											}
										]
									}
								]
							}
						},
						{
							"name": "timeoutMs",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModalResponderInstance",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "channel",
				"comment": "The channel where this modal was triggered.",
				"source": "src/core/api/modules/responder.ts:1031:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "TextBasedChannel",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "didReply",
				"comment": "Did a worker already reply to this instance/interaction?",
				"source": "src/core/api/modules/responder.ts:1021:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "guild",
				"comment": "The guild where this modal was triggered.",
				"source": "src/core/api/modules/responder.ts:1029:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "Guild",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "interaction",
				"comment": "The interaction which is the source of this instance.",
				"source": "src/core/api/modules/responder.ts:1019:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "ModalSubmitInteraction",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "member",
				"comment": "The guild member who triggered this modal.",
				"source": "src/core/api/modules/responder.ts:1027:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "external",
							"package": "discord.js",
							"name": "GuildMember",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "user",
				"comment": "The user who triggered this modal.",
				"source": "src/core/api/modules/responder.ts:1025:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "User",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "values",
				"comment": "The manager for all fields of this modal.",
				"source": "src/core/api/modules/responder.ts:1023:4",
				"details": {
					"type": "reference",
					"name": "ODModalResponderInstanceValues",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "defer",
				"comment": "Defer this modal.",
				"source": "src/core/api/modules/responder.ts:1090:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Defer this modal.",
					"parameters": [
						{
							"name": "type",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"reply\""
									},
									{
										"type": "literal",
										"name": "\"update\""
									}
								]
							}
						},
						{
							"name": "ephemeral",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "reply",
				"comment": "Reply to this modal.",
				"source": "src/core/api/modules/responder.ts:1060:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Reply to this modal.",
					"parameters": [
						{
							"name": "msg",
							"details": {
								"type": "reference",
								"name": "ODMessageBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODMessageBuildSentResult",
								"target": "interface",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "boolean"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "update",
				"comment": "Update the message of this modal.",
				"source": "src/core/api/modules/responder.ts:1077:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Update the message of this modal.",
					"parameters": [
						{
							"name": "msg",
							"details": {
								"type": "reference",
								"name": "ODMessageBuildResult",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ODMessageBuildSentResult",
								"target": "interface",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "boolean"
									}
								]
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODModalResponderInstanceValues",
		"comment": "## ODModalResponderInstanceValues `class`\nThis is an Open Ticket modal responder instance values manager.\n\nThis class will manage all fields from the modals.",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:990:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:994:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "interaction",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "ModalSubmitInteraction",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModalResponderInstanceValues",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "getTextField",
				"comment": "Get the value of a text field.",
				"source": "src/core/api/modules/responder.ts:999:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the value of a text field.",
					"parameters": [
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "required",
							"details": {
								"type": "literal",
								"name": "true"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODModalResponderManager",
		"comment": "## ODModalResponderManager `class`\nThis is an Open Ticket modal responder manager.\n\nIt contains all Open Ticket modal responders. These can respond to modal interactions.\n\nUsing the Open Ticket responder system has a few advantages compared to vanilla discord.js:\n- plugins can extend/edit replies\n- automatically reply on error\n- independent workers (with priority)\n- fail-safe design using try-catch\n- know where the request came from!\n- And so much more!",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:946:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:956:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "client",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODModalResponderManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/responder.ts:972:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODModalResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"modal\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODModalResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"modal\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODModalResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"modal\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODModalResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "literal",
													"name": "\"modal\""
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODModalResponder",
												"target": "class",
												"typeArguments": [
													{
														"type": "literal",
														"name": "\"modal\""
													},
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODModalResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"modal\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODModalResponder",
							"target": "class",
							"typeArguments": [
								{
									"type": "literal",
									"name": "\"modal\""
								},
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODModalResponder",
											"target": "class",
											"typeArguments": [
												{
													"type": "literal",
													"name": "\"modal\""
												},
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModalResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"modal\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModalResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"modal\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODModalResponder",
										"target": "class",
										"typeArguments": [
											{
												"type": "literal",
												"name": "\"modal\""
											},
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODModalResponder",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"modal\""
									},
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setTimeoutErrorCallback",
				"comment": "Set the message to send when the response times out!",
				"source": "src/core/api/modules/responder.ts:967:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set the message to send when the response times out!",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODResponderTimeoutErrorCallback",
										"target": "type",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODModalResponderInstance",
												"target": "class",
												"typeArguments": null
											},
											{
												"type": "literal",
												"name": "\"modal\""
											}
										]
									}
								]
							}
						},
						{
							"name": "ms",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODResponderImplementation",
		"comment": "## ODResponderImplementation `class`\nThis is an Open Ticket responder implementation.\n\nIt is a basic implementation of the `ODWorkerManager` used by all `ODResponder` classes.\n\nThis class can't be used stand-alone & needs to be extended from!",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:18:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:24:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "match",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "primitive",
										"name": "string"
									},
									{
										"type": "internal",
										"name": "RegExp",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "Instance",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callbackId",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODResponderImplementation",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Instance",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "match",
				"comment": "The `commandName` or `customId` needs to match this string or regex for this responder to be executed.",
				"source": "src/core/api/modules/responder.ts:22:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "string"
						},
						{
							"type": "internal",
							"name": "RegExp",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "workers",
				"comment": "The manager that has all workers of this implementation",
				"source": "src/core/api/modules/responder.ts:20:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "typeParam",
							"name": "Instance",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "respond",
				"comment": "Execute all workers & return the result.",
				"source": "src/core/api/modules/responder.ts:31:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Execute all workers & return the result.",
					"parameters": [
						{
							"name": "instance",
							"details": {
								"type": "typeParam",
								"name": "Instance",
								"typeArguments": null
							}
						},
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Instance",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODResponderManager",
		"comment": "## ODResponderManager `class`\nThis is an Open Ticket responder manager.\n\nIt contains all Open Ticket responders. Responders can respond to an interaction, button, dropdown, modal or command.\n\nUsing the Open Ticket responder system has a few advantages compared to vanilla discord.js:\n- plugins can extend/edit replies\n- automatically reply on error\n- independent workers (with priority)\n- fail-safe design using try-catch\n- write code once => reply to both slash & text commands at the same time!\n- know where the request came from & parse options/subcommands & without errors!\n- And so much more!",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:55:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/responder.ts:65:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "client",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODResponderManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "buttons",
				"comment": "A manager for all button responders.",
				"source": "src/core/api/modules/responder.ts:59:4",
				"details": {
					"type": "reference",
					"name": "ODButtonResponderManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "commands",
				"comment": "A manager for all (text & slash) command responders.",
				"source": "src/core/api/modules/responder.ts:57:4",
				"details": {
					"type": "reference",
					"name": "ODCommandResponderManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "dropdowns",
				"comment": "A manager for all dropdown/select menu responders.",
				"source": "src/core/api/modules/responder.ts:61:4",
				"details": {
					"type": "reference",
					"name": "ODDropdownResponderManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "modals",
				"comment": "A manager for all modal responders.",
				"source": "src/core/api/modules/responder.ts:63:4",
				"details": {
					"type": "reference",
					"name": "ODModalResponderManager",
					"target": "class",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODResponderTimeoutErrorCallback",
		"comment": "## ODResponderTimeoutErrorCallback `type`\nThis is the callback for the responder timeout function. It will be executed when something went wrong or the action takes too much time.",
		"constant": false,
		"source": "src/core/api/modules/responder.ts:39:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "instance",
						"details": {
							"type": "typeParam",
							"name": "Instance",
							"typeArguments": null
						}
					},
					{
						"name": "source",
						"details": {
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						}
					}
				],
				"returns": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "void"
						},
						{
							"type": "internal",
							"name": "Promise",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "void"
								}
							]
						}
					]
				}
			}
		],
		"typeParams": [
			{
				"name": "Instance",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "Source",
				"type": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"slash\""
						},
						{
							"type": "literal",
							"name": "\"text\""
						},
						{
							"type": "literal",
							"name": "\"button\""
						},
						{
							"type": "literal",
							"name": "\"dropdown\""
						},
						{
							"type": "literal",
							"name": "\"modal\""
						},
						{
							"type": "literal",
							"name": "\"other\""
						}
					]
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODSession",
		"comment": "## ODSession `class`\nThis is an Open Ticket session.\n\nIt can be used to create 100% unique id's for usage in the bot. An id can also store additional data which isn't saved to the filesystem.\nYou can almost compare it to the PHP session system.",
		"constant": false,
		"source": "src/core/api/modules/session.ts:47:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/session.ts:61:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "intervalSeconds",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODSession",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "sessions",
				"comment": "An array of all the currently active session instances.",
				"source": "src/core/api/modules/session.ts:53:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODSessionInstance",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "timeoutMinutes",
				"comment": "The default amount of minutes before a session automatically stops.",
				"source": "src/core/api/modules/session.ts:55:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "data",
				"comment": "Get the data of a session instance. Returns `null` when not found.",
				"source": "src/core/api/modules/session.ts:118:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the data of a session instance. Returns `null` when not found.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "any"
					}
				}
			},
			{
				"type": "method",
				"name": "onTimeout",
				"comment": "Listen for a session timeout (default or custom)",
				"source": "src/core/api/modules/session.ts:152:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Listen for a session timeout (default or custom)",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODSessionTimeoutCallback",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "setTimeout",
				"comment": "Change the global or session timeout minutes. Returns `true` when sucessful.",
				"source": "src/core/api/modules/session.ts:138:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Change the global or session timeout minutes. Returns `true` when sucessful.",
					"parameters": [
						{
							"name": "min",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "start",
				"comment": "Start a session instance with data. Returns the unique id required to access the session.",
				"source": "src/core/api/modules/session.ts:108:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Start a session instance with data. Returns the unique id required to access the session.",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "primitive",
								"name": "any"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "stop",
				"comment": "Stop & delete a session instance. Returns `true` when sucessful.",
				"source": "src/core/api/modules/session.ts:124:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Stop & delete a session instance. Returns `true` when sucessful.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "stopAutoTimeout",
				"comment": "Stop the global interval that automatically deletes timed-out sessions. (This action can't be reverted!)",
				"source": "src/core/api/modules/session.ts:103:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Stop the global interval that automatically deletes timed-out sessions. (This action can't be reverted!)",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "update",
				"comment": "Update the data of a session instance. Returns `true` when sucessful.",
				"source": "src/core/api/modules/session.ts:131:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Update the data of a session instance. Returns `true` when sucessful.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "data",
							"details": {
								"type": "primitive",
								"name": "any"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODSessionManager",
		"comment": "## ODSessionManager `class`\nThis is an Open Ticket session manager.\n\nIt contains all sessions in Open Ticket. Sessions are a sort of temporary storage which will be cleared when the bot stops.\nData in sessions have a randomly generated key which will always be unique.\n\nVisit the `ODSession` class for more info",
		"constant": false,
		"source": "src/core/api/modules/session.ts:16:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/session.ts:17:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODSessionManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODSession",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODSession",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODSession",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSession",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODSession",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODSession",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSession",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODSession",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODSession",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODSession",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODSession",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODSession",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODSession",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODSessionInstance",
		"comment": "## ODSessionInstance `interface`\nThis interface represents a single session instance. It contains an id, data & some dates.",
		"constant": false,
		"source": "src/core/api/modules/session.ts:25:17",
		"children": [
			{
				"type": "property",
				"name": "creation",
				"comment": "The creation date of this session instance.",
				"source": "src/core/api/modules/session.ts:29:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "This is the data from this session instance",
				"source": "src/core/api/modules/session.ts:33:4",
				"details": {
					"type": "primitive",
					"name": "any"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this session instance.",
				"source": "src/core/api/modules/session.ts:27:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "timeout",
				"comment": "The custom amount of minutes before this session expires.",
				"source": "src/core/api/modules/session.ts:31:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODSessionTimeoutCallback",
		"comment": "## ODSessionTimeoutCallback `type`\nThis is the callback used for session timeout listeners.",
		"constant": false,
		"source": "src/core/api/modules/session.ts:39:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "id",
						"details": {
							"type": "primitive",
							"name": "string"
						}
					},
					{
						"name": "timeout",
						"details": {
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "\"default\""
								},
								{
									"type": "literal",
									"name": "\"custom\""
								}
							]
						}
					},
					{
						"name": "data",
						"details": {
							"type": "primitive",
							"name": "any"
						}
					},
					{
						"name": "creation",
						"details": {
							"type": "internal",
							"name": "Date",
							"typeArguments": null
						}
					}
				],
				"returns": {
					"type": "primitive",
					"name": "void"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStartScreenCategoryComponent",
		"comment": "## ODStartScreenCategoryComponent `class`\nThis is an Open Ticket startscreen category component.\n\nThis component will render a category to the startscreen. This will only render the category name. You'll need to provide your own renderer for the contents.\nAn optional priority can be specified to choose the location of the component.",
		"constant": false,
		"source": "src/core/api/modules/startscreen.ts:200:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/startscreen.ts:206:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "render",
							"details": {
								"type": "reference",
								"name": "ODStartScreenComponentRenderCallback",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "renderIfEmpty",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStartScreenCategoryComponent",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this category.",
				"source": "src/core/api/modules/startscreen.ts:202:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this component.",
				"source": "src/core/api/modules/startscreen.ts:69:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "render",
				"comment": "The render function which will render the contents of this component.",
				"source": "src/core/api/modules/startscreen.ts:73:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenComponentRenderCallback",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "renderAfter",
				"comment": "An optional render function which will be inserted behind the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:75:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderBefore",
				"comment": "An optional render function which will be inserted before the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:71:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderIfEmpty",
				"comment": "When enabled, this category will still be rendered when the contents are empty. (enabled by default)",
				"source": "src/core/api/modules/startscreen.ts:204:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "renderAll",
				"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
				"source": "src/core/api/modules/startscreen.ts:84:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
					"parameters": [
						{
							"name": "location",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStartScreenComponent",
		"comment": "## ODStartScreenComponent `class`\nThis is an Open Ticket startscreen component.\n\nThis component can be rendered to the start screen of the bot.\nAn optional priority can be specified to choose the location of the component.\n\nIt's recommended to use pre-built components except if you really need a custom one.",
		"constant": false,
		"source": "src/core/api/modules/startscreen.ts:67:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/startscreen.ts:77:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "render",
							"details": {
								"type": "reference",
								"name": "ODStartScreenComponentRenderCallback",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStartScreenComponent",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this component.",
				"source": "src/core/api/modules/startscreen.ts:69:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "render",
				"comment": "The render function which will render the contents of this component.",
				"source": "src/core/api/modules/startscreen.ts:73:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenComponentRenderCallback",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "renderAfter",
				"comment": "An optional render function which will be inserted behind the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:75:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderBefore",
				"comment": "An optional render function which will be inserted before the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:71:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "renderAll",
				"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
				"source": "src/core/api/modules/startscreen.ts:84:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
					"parameters": [
						{
							"name": "location",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStartScreenFlagsCategoryComponent",
		"comment": "## ODStartScreenFlagsCategoryComponent `class`\nThis is an Open Ticket startscreen flags category component.\n\nThis component will render a flags category to the startscreen. This will list the enabled flags in the category.\nAn optional priority can be specified to choose the location of the component.",
		"constant": false,
		"source": "src/core/api/modules/startscreen.ts:246:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/startscreen.ts:250:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "flags",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODFlag",
									"target": "class",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStartScreenFlagsCategoryComponent",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "flags",
				"comment": "A list of all flags to render.",
				"source": "src/core/api/modules/startscreen.ts:248:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODFlag",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this category.",
				"source": "src/core/api/modules/startscreen.ts:202:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this component.",
				"source": "src/core/api/modules/startscreen.ts:69:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "render",
				"comment": "The render function which will render the contents of this component.",
				"source": "src/core/api/modules/startscreen.ts:73:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenComponentRenderCallback",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "renderAfter",
				"comment": "An optional render function which will be inserted behind the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:75:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderBefore",
				"comment": "An optional render function which will be inserted before the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:71:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderIfEmpty",
				"comment": "When enabled, this category will still be rendered when the contents are empty. (enabled by default)",
				"source": "src/core/api/modules/startscreen.ts:204:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "renderAll",
				"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
				"source": "src/core/api/modules/startscreen.ts:84:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
					"parameters": [
						{
							"name": "location",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStartScreenHeaderComponent",
		"comment": "## ODStartScreenHeaderComponent `class`\nThis is an Open Ticket startscreen header component.\n\nThis component will render a header to the startscreen. Properties can be aligned left, right or centered.\nAn optional priority can be specified to choose the location of the component.",
		"constant": false,
		"source": "src/core/api/modules/startscreen.ts:148:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/startscreen.ts:156:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "properties",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODStartScreenProperty",
									"target": "interface",
									"typeArguments": null
								}
							}
						},
						{
							"name": "spacer",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "align",
							"details": {
								"type": "reference",
								"name": "ODStartScreenHeaderAlignmentSettings",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStartScreenHeaderComponent",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "align",
				"comment": "The alignment settings of this header component.",
				"source": "src/core/api/modules/startscreen.ts:154:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenHeaderAlignmentSettings",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this component.",
				"source": "src/core/api/modules/startscreen.ts:69:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "properties",
				"comment": "All properties of this header component.",
				"source": "src/core/api/modules/startscreen.ts:150:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODStartScreenProperty",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "render",
				"comment": "The render function which will render the contents of this component.",
				"source": "src/core/api/modules/startscreen.ts:73:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenComponentRenderCallback",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "renderAfter",
				"comment": "An optional render function which will be inserted behind the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:75:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderBefore",
				"comment": "An optional render function which will be inserted before the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:71:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "spacer",
				"comment": "The spacer used between properties.",
				"source": "src/core/api/modules/startscreen.ts:152:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "renderAll",
				"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
				"source": "src/core/api/modules/startscreen.ts:84:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
					"parameters": [
						{
							"name": "location",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStartScreenLiveStatusCategoryComponent",
		"comment": "## ODStartScreenLiveStatusCategoryComponent `class`\nThis is an Open Ticket startscreen livestatus category component.\n\nThis component will render a livestatus category to the startscreen. This will list the livestatus messages in the category.\nAn optional priority can be specified to choose the location of the component.",
		"constant": false,
		"source": "src/core/api/modules/startscreen.ts:291:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/startscreen.ts:295:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "livestatus",
							"details": {
								"type": "reference",
								"name": "ODLiveStatusManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStartScreenLiveStatusCategoryComponent",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "livestatus",
				"comment": "A reference to the Open Ticket livestatus manager.",
				"source": "src/core/api/modules/startscreen.ts:293:4",
				"details": {
					"type": "reference",
					"name": "ODLiveStatusManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this category.",
				"source": "src/core/api/modules/startscreen.ts:202:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this component.",
				"source": "src/core/api/modules/startscreen.ts:69:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "render",
				"comment": "The render function which will render the contents of this component.",
				"source": "src/core/api/modules/startscreen.ts:73:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenComponentRenderCallback",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "renderAfter",
				"comment": "An optional render function which will be inserted behind the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:75:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderBefore",
				"comment": "An optional render function which will be inserted before the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:71:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderIfEmpty",
				"comment": "When enabled, this category will still be rendered when the contents are empty. (enabled by default)",
				"source": "src/core/api/modules/startscreen.ts:204:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "renderAll",
				"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
				"source": "src/core/api/modules/startscreen.ts:84:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
					"parameters": [
						{
							"name": "location",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStartScreenLogCategoryComponent",
		"comment": "## ODStartScreenLogsCategoryComponent `class`\nThis is an Open Ticket startscreen logs category component.\n\nThis component will render a logs category to the startscreen. This will only render the logs category name.\nAn optional priority can be specified to choose the location of the component.",
		"constant": false,
		"source": "src/core/api/modules/startscreen.ts:310:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/startscreen.ts:311:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStartScreenLogCategoryComponent",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this category.",
				"source": "src/core/api/modules/startscreen.ts:202:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this component.",
				"source": "src/core/api/modules/startscreen.ts:69:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "render",
				"comment": "The render function which will render the contents of this component.",
				"source": "src/core/api/modules/startscreen.ts:73:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenComponentRenderCallback",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "renderAfter",
				"comment": "An optional render function which will be inserted behind the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:75:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderBefore",
				"comment": "An optional render function which will be inserted before the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:71:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderIfEmpty",
				"comment": "When enabled, this category will still be rendered when the contents are empty. (enabled by default)",
				"source": "src/core/api/modules/startscreen.ts:204:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "renderAll",
				"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
				"source": "src/core/api/modules/startscreen.ts:84:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
					"parameters": [
						{
							"name": "location",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStartScreenLogoComponent",
		"comment": "## ODStartScreenLogoComponent `class`\nThis is an Open Ticket startscreen logo component.\n\nThis component will render an ASCII art logo (from an array) to the startscreen. Every property in the array is another row.\nAn optional priority can be specified to choose the location of the component.",
		"constant": false,
		"source": "src/core/api/modules/startscreen.ts:108:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/startscreen.ts:118:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "logo",
							"details": {
								"type": "array",
								"child": {
									"type": "primitive",
									"name": "string"
								}
							}
						},
						{
							"name": "topPadding",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "bottomPadding",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						},
						{
							"name": "logoHexColor",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStartScreenLogoComponent",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "bottomPadding",
				"comment": "When enabled, the component will add a new line below the logo.",
				"source": "src/core/api/modules/startscreen.ts:114:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "logo",
				"comment": "The ASCII logo contents.",
				"source": "src/core/api/modules/startscreen.ts:110:4",
				"details": {
					"type": "array",
					"child": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "property",
				"name": "logoHexColor",
				"comment": "The color of the logo in hex format.",
				"source": "src/core/api/modules/startscreen.ts:116:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this component.",
				"source": "src/core/api/modules/startscreen.ts:69:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "render",
				"comment": "The render function which will render the contents of this component.",
				"source": "src/core/api/modules/startscreen.ts:73:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenComponentRenderCallback",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "renderAfter",
				"comment": "An optional render function which will be inserted behind the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:75:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderBefore",
				"comment": "An optional render function which will be inserted before the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:71:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "topPadding",
				"comment": "When enabled, the component will add a new line above the logo.",
				"source": "src/core/api/modules/startscreen.ts:112:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "renderAll",
				"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
				"source": "src/core/api/modules/startscreen.ts:84:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
					"parameters": [
						{
							"name": "location",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStartScreenManager",
		"comment": "## ODStartScreenManager `class`\nThis is an Open Ticket startscreen manager.\n\nThis class is responsible for managing & rendering the startscreen of the bot.\nThe startscreen is the part you see when the bot has started up successfully. (e.g. the Open Ticket logo, logs, livestatus, flags, ...)",
		"constant": false,
		"source": "src/core/api/modules/startscreen.ts:21:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/startscreen.ts:27:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "livestatus",
							"details": {
								"type": "reference",
								"name": "ODLiveStatusManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStartScreenManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "livestatus",
				"comment": "Alias to the livestatus manager.",
				"source": "src/core/api/modules/startscreen.ts:25:4",
				"details": {
					"type": "reference",
					"name": "ODLiveStatusManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODStartScreenComponent",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODStartScreenComponent",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStartScreenComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStartScreenComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODStartScreenComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODStartScreenComponent",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStartScreenComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStartScreenComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSortedComponents",
				"comment": "Get all components in sorted order.",
				"source": "src/core/api/modules/startscreen.ts:34:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all components in sorted order.",
					"parameters": [
						{
							"name": "priority",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"ascending\""
									},
									{
										"type": "literal",
										"name": "\"descending\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStartScreenComponent",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODStartScreenComponent",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStartScreenComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStartScreenComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStartScreenComponent",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStartScreenComponent",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "renderAllComponents",
				"comment": "Render all startscreen components in priority order.",
				"source": "src/core/api/modules/startscreen.ts:41:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Render all startscreen components in priority order.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStartScreenPluginsCategoryComponent",
		"comment": "## ODStartScreenPluginsCategoryComponent `class`\nThis is an Open Ticket startscreen plugins category component.\n\nThis component will render a plugins category to the startscreen. This will list the enabled, disabled & crashed plugins in the category.\nAn optional priority can be specified to choose the location of the component.",
		"constant": false,
		"source": "src/core/api/modules/startscreen.ts:264:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/startscreen.ts:270:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "plugins",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODPlugin",
									"target": "class",
									"typeArguments": null
								}
							}
						},
						{
							"name": "unknownCrashedPlugins",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODUnknownCrashedPlugin",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStartScreenPluginsCategoryComponent",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this category.",
				"source": "src/core/api/modules/startscreen.ts:202:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "plugins",
				"comment": "A list of all plugins to render.",
				"source": "src/core/api/modules/startscreen.ts:266:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODPlugin",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this component.",
				"source": "src/core/api/modules/startscreen.ts:69:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "render",
				"comment": "The render function which will render the contents of this component.",
				"source": "src/core/api/modules/startscreen.ts:73:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenComponentRenderCallback",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "renderAfter",
				"comment": "An optional render function which will be inserted behind the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:75:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderBefore",
				"comment": "An optional render function which will be inserted before the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:71:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderIfEmpty",
				"comment": "When enabled, this category will still be rendered when the contents are empty. (enabled by default)",
				"source": "src/core/api/modules/startscreen.ts:204:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "unknownCrashedPlugins",
				"comment": "A list of all crashed plugins to render.",
				"source": "src/core/api/modules/startscreen.ts:268:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODUnknownCrashedPlugin",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "renderAll",
				"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
				"source": "src/core/api/modules/startscreen.ts:84:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
					"parameters": [
						{
							"name": "location",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStartScreenPropertiesCategoryComponent",
		"comment": "## ODStartScreenPropertiesCategoryComponent `class`\nThis is an Open Ticket startscreen properties category component.\n\nThis component will render a properties category to the startscreen. This will list the properties in the category.\nAn optional priority can be specified to choose the location of the component.",
		"constant": false,
		"source": "src/core/api/modules/startscreen.ts:224:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/startscreen.ts:230:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "properties",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODStartScreenProperty",
									"target": "interface",
									"typeArguments": null
								}
							}
						},
						{
							"name": "propertyHexColor",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "renderIfEmpty",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStartScreenPropertiesCategoryComponent",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this category.",
				"source": "src/core/api/modules/startscreen.ts:202:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this component.",
				"source": "src/core/api/modules/startscreen.ts:69:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "properties",
				"comment": "The properties of this category component.",
				"source": "src/core/api/modules/startscreen.ts:226:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODStartScreenProperty",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "propertyHexColor",
				"comment": "The hex color for the key/name of all the properties.",
				"source": "src/core/api/modules/startscreen.ts:228:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "render",
				"comment": "The render function which will render the contents of this component.",
				"source": "src/core/api/modules/startscreen.ts:73:4",
				"details": {
					"type": "reference",
					"name": "ODStartScreenComponentRenderCallback",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "renderAfter",
				"comment": "An optional render function which will be inserted behind the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:75:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderBefore",
				"comment": "An optional render function which will be inserted before the default renderer.",
				"source": "src/core/api/modules/startscreen.ts:71:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponentRenderCallback",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "renderIfEmpty",
				"comment": "When enabled, this category will still be rendered when the contents are empty. (enabled by default)",
				"source": "src/core/api/modules/startscreen.ts:204:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "renderAll",
				"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
				"source": "src/core/api/modules/startscreen.ts:84:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Render this component and combine it with the `renderBefore` & `renderAfter` contents.",
					"parameters": [
						{
							"name": "location",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODStartScreenHeaderAlignmentSettings",
		"comment": "## ODStartScreenHeaderAlignmentSettings `type`\nThis interface contains all settings used in the startscreen header component.",
		"constant": false,
		"source": "src/core/api/modules/startscreen.ts:135:17",
		"children": [
			{
				"type": "property",
				"name": "align",
				"comment": "The alignment settings for this header.",
				"source": "src/core/api/modules/startscreen.ts:137:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"center\""
						},
						{
							"type": "literal",
							"name": "\"left\""
						},
						{
							"type": "literal",
							"name": "\"right\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "width",
				"comment": "The width or component to use when calculating center & right alignment.",
				"source": "src/core/api/modules/startscreen.ts:139:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "number"
						},
						{
							"type": "reference",
							"name": "ODStartScreenComponent",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODStartScreenProperty",
		"comment": "## ODStartScreenProperty `type`\nThis interface contains properties used in a few default templates of the startscreen component.",
		"constant": false,
		"source": "src/core/api/modules/startscreen.ts:95:17",
		"children": [
			{
				"type": "property",
				"name": "key",
				"comment": "The key or name of this property.",
				"source": "src/core/api/modules/startscreen.ts:97:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The value or contents of this property.",
				"source": "src/core/api/modules/startscreen.ts:99:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODStartScreenComponentRenderCallback",
		"comment": "## ODStartScreenComponentRenderCallback `type`\nThis is the render function of a startscreen component. It also sends the location of where the component is rendered.",
		"constant": false,
		"source": "src/core/api/modules/startscreen.ts:13:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "location",
						"details": {
							"type": "primitive",
							"name": "number"
						}
					}
				],
				"returns": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "string"
						},
						{
							"type": "internal",
							"name": "Promise",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								}
							]
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODBasicStat",
		"comment": "## ODBasicStat `class`\nThis is an Open Ticket basic statistic.\n\nThis single statistic will store a number, boolean or string in the database.\nUse it to create a simple statistic for any stats scope.",
		"constant": false,
		"source": "src/core/api/modules/stat.ts:262:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/stat.ts:266:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidStatValue",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODBasicStat",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this stat. Rendered in discord embeds/messages.",
				"source": "src/core/api/modules/stat.ts:264:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this statistic.",
				"source": "src/core/api/modules/stat.ts:242:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "render",
				"comment": "The render function of this statistic.",
				"source": "src/core/api/modules/stat.ts:244:4",
				"details": {
					"type": "reference",
					"name": "ODStatRenderer",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The value of this statistic.",
				"source": "src/core/api/modules/stat.ts:246:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODValidStatValue",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODDynamicStat",
		"comment": "## ODDynamicStat `class`\nThis is an Open Ticket dynamic statistic.\n\nA dynamic statistic does not store anything in the database! Instead, it will execute a function to return a custom result.\nThis can be used to show statistics which are not stored in the database.\n\nThis is used in Open Ticket for the live ticket status, participants & system status.",
		"constant": false,
		"source": "src/core/api/modules/stat.ts:287:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/stat.ts:288:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "render",
							"details": {
								"type": "reference",
								"name": "ODDynamicStatRenderer",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODDynamicStat",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this statistic.",
				"source": "src/core/api/modules/stat.ts:242:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "render",
				"comment": "The render function of this statistic.",
				"source": "src/core/api/modules/stat.ts:244:4",
				"details": {
					"type": "reference",
					"name": "ODStatRenderer",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The value of this statistic.",
				"source": "src/core/api/modules/stat.ts:246:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODValidStatValue",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStat",
		"comment": "## ODStat `class`\nThis is an Open Ticket statistic.\n\nThis single statistic doesn't do anything except defining the rules of this statistic.\nUse it in a stats scope to register a new statistic. A statistic can also include a priority to choose the render priority.\n\nIt's recommended to use the `ODBasicStat` & `ODDynamicStat` classes instead of this one!",
		"constant": false,
		"source": "src/core/api/modules/stat.ts:240:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/stat.ts:248:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "render",
							"details": {
								"type": "reference",
								"name": "ODStatRenderer",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidStatValue",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStat",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this statistic.",
				"source": "src/core/api/modules/stat.ts:242:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "render",
				"comment": "The render function of this statistic.",
				"source": "src/core/api/modules/stat.ts:244:4",
				"details": {
					"type": "reference",
					"name": "ODStatRenderer",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The value of this statistic.",
				"source": "src/core/api/modules/stat.ts:246:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODValidStatValue",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStatGlobalScope",
		"comment": "## ODStatGlobalScope `class`\nThis is an Open Ticket stat global scope.\n\nA scope can contain multiple stats. Every scope is seperated from other scopes.\nHere, you can read & write the values of all stats.\n\nThis scope is made specifically for the global stats of Open Ticket.",
		"constant": false,
		"source": "src/core/api/modules/stat.ts:212:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/stat.ts:117:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStatGlobalScope",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "database",
				"comment": "Alias to Open Ticket stats database.",
				"source": "src/core/api/modules/stat.ts:113:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODDatabase",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this statistics scope.",
				"source": "src/core/api/modules/stat.ts:109:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this scope (used in embed title)",
				"source": "src/core/api/modules/stat.ts:115:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": "Is this stat scope already initialized?",
				"source": "src/core/api/modules/stat.ts:111:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStat",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODStat",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getStat",
				"comment": "Get the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/modules/stat.ts:213:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODValidStatValue",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initialize this stat scope & return a list of all statistic ids in the following format: `<scopeid>_<statid>`",
				"source": "src/core/api/modules/stat.ts:170:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Initialize this stat scope & return a list of all statistic ids in the following format: `<scopeid>_<statid>`",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "primitive",
							"name": "string"
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStat",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render all stats in this scope for usage in a discord message/embed.",
				"source": "src/core/api/modules/stat.ts:222:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Render all stats in this scope for usage in a discord message/embed.",
					"parameters": [
						{
							"name": "scopeId",
							"details": {
								"type": "literal",
								"name": "\"GLOBAL\""
							}
						},
						{
							"name": "guild",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "Guild",
								"typeArguments": null
							}
						},
						{
							"name": "channel",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "TextBasedChannel",
								"typeArguments": null
							}
						},
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "resetStat",
				"comment": "Reset the value of a statistic to the initial value. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/modules/stat.ts:219:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Reset the value of a statistic to the initial value. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODValidStatValue",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setStat",
				"comment": "Set, increase or decrease the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/modules/stat.ts:216:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set, increase or decrease the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidStatValue",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "reference",
								"name": "ODStatScopeSetMode",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDatabase",
				"comment": "Select the database to use to read/write all stats from/to. (Automatically assigned when used in `ODStatsManager`)",
				"source": "src/core/api/modules/stat.ts:124:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Select the database to use to read/write all stats from/to. (Automatically assigned when used in `ODStatsManager`)",
					"parameters": [
						{
							"name": "database",
							"details": {
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStatScope",
		"comment": "## ODStatScope `class`\nThis is an Open Ticket stat scope.\n\nA scope can contain multiple stats. Every scope is seperated from other scopes.\nHere, you can read & write the values of all stats.\n\nThe built-in Open Ticket scopes are: `global`, `user`, `ticket`",
		"constant": false,
		"source": "src/core/api/modules/stat.ts:107:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/stat.ts:117:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "name",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStatScope",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "database",
				"comment": "Alias to Open Ticket stats database.",
				"source": "src/core/api/modules/stat.ts:113:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODDatabase",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this statistics scope.",
				"source": "src/core/api/modules/stat.ts:109:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this scope (used in embed title)",
				"source": "src/core/api/modules/stat.ts:115:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": "Is this stat scope already initialized?",
				"source": "src/core/api/modules/stat.ts:111:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStat",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODStat",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStat",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getStat",
				"comment": "Get the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/modules/stat.ts:128:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODValidStatValue",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Initialize this stat scope & return a list of all statistic ids in the following format: `<scopeid>_<statid>`",
				"source": "src/core/api/modules/stat.ts:170:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Initialize this stat scope & return a list of all statistic ids in the following format: `<scopeid>_<statid>`",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "primitive",
							"name": "string"
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODStat",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStat",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStat",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "render",
				"comment": "Render all stats in this scope for usage in a discord message/embed.",
				"source": "src/core/api/modules/stat.ts:176:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Render all stats in this scope for usage in a discord message/embed.",
					"parameters": [
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "guild",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "Guild",
								"typeArguments": null
							}
						},
						{
							"name": "channel",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "TextBasedChannel",
								"typeArguments": null
							}
						},
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "resetStat",
				"comment": "Reset the value of a statistic to the initial value. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/modules/stat.ts:162:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Reset the value of a statistic to the initial value. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODValidStatValue",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "setStat",
				"comment": "Set, increase or decrease the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
				"source": "src/core/api/modules/stat.ts:144:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Set, increase or decrease the value of a statistic. The `scopeId` is the unique id of the user, channel, role, etc that the stats are related to.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "scopeId",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "value",
							"details": {
								"type": "reference",
								"name": "ODValidStatValue",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "mode",
							"details": {
								"type": "reference",
								"name": "ODStatScopeSetMode",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDatabase",
				"comment": "Select the database to use to read/write all stats from/to. (Automatically assigned when used in `ODStatsManager`)",
				"source": "src/core/api/modules/stat.ts:124:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Select the database to use to read/write all stats from/to. (Automatically assigned when used in `ODStatsManager`)",
					"parameters": [
						{
							"name": "database",
							"details": {
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODStatsManager",
		"comment": "## ODStatsManager `class`\nThis is an Open Ticket stats manager.\n\nThis class is responsible for managing all stats of the bot.\nStats are categorized in \"scopes\" which can be accessed in this manager.\n\nStats can be accessed in the individual scopes.",
		"constant": false,
		"source": "src/core/api/modules/stat.ts:34:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/stat.ts:42:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODStatsManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "database",
				"comment": "Alias to Open Ticket stats database.",
				"source": "src/core/api/modules/stat.ts:38:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODDatabase",
							"target": "class",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/stat.ts:51:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODStatScope",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStatScope",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStatScope",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODStatScope",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODStatScope",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStatScope",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODStatScope",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "init",
				"comment": "Init all stats and run `onInit()` listeners.",
				"source": "src/core/api/modules/stat.ts:57:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Init all stats and run `onInit()` listeners.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODStatScope",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStatScope",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStatScope",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onInit",
				"comment": "Run a function when the stats are initialized. This can be used to clear stats from users that left the server or tickets which don't exist anymore.",
				"source": "src/core/api/modules/stat.ts:94:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Run a function when the stats are initialized. This can be used to clear stats from users that left the server or tickets which don't exist anymore.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODStatsManagerInitCallback",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODStatScope",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODStatScope",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "reset",
				"comment": "Reset all stats. (clears the entire database)",
				"source": "src/core/api/modules/stat.ts:85:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Reset all stats. (clears the entire database)",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDatabase",
				"comment": "Select the database to use to read/write all stats from/to.",
				"source": "src/core/api/modules/stat.ts:48:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Select the database to use to read/write all stats from/to.",
					"parameters": [
						{
							"name": "database",
							"details": {
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODDynamicStatRenderer",
		"comment": "## ODDynamicStatRenderer `type`\nThis callback will render a single dynamic statistic for a discord embed/message.",
		"constant": false,
		"source": "src/core/api/modules/stat.ts:277:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "scopeId",
						"details": {
							"type": "primitive",
							"name": "string"
						}
					},
					{
						"name": "guild",
						"details": {
							"type": "external",
							"package": "discord.js",
							"name": "discord.Guild",
							"typeArguments": null
						}
					},
					{
						"name": "channel",
						"details": {
							"type": "external",
							"package": "discord.js",
							"name": "discord.TextBasedChannel",
							"typeArguments": null
						}
					},
					{
						"name": "user",
						"details": {
							"type": "external",
							"package": "discord.js",
							"name": "discord.User",
							"typeArguments": null
						}
					}
				],
				"returns": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "string"
						},
						{
							"type": "internal",
							"name": "Promise",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								}
							]
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODStatRenderer",
		"comment": "## ODStatRenderer `type`\nThis callback will render a single statistic for a discord embed/message.",
		"constant": false,
		"source": "src/core/api/modules/stat.ts:230:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "value",
						"details": {
							"type": "reference",
							"name": "ODValidStatValue",
							"target": "type",
							"typeArguments": null
						}
					},
					{
						"name": "scopeId",
						"details": {
							"type": "primitive",
							"name": "string"
						}
					},
					{
						"name": "guild",
						"details": {
							"type": "external",
							"package": "discord.js",
							"name": "discord.Guild",
							"typeArguments": null
						}
					},
					{
						"name": "channel",
						"details": {
							"type": "external",
							"package": "discord.js",
							"name": "discord.TextBasedChannel",
							"typeArguments": null
						}
					},
					{
						"name": "user",
						"details": {
							"type": "external",
							"package": "discord.js",
							"name": "discord.User",
							"typeArguments": null
						}
					}
				],
				"returns": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "string"
						},
						{
							"type": "internal",
							"name": "Promise",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "string"
								}
							]
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODStatScopeSetMode",
		"comment": "## ODStatScopeSetMode `type`\nThis type contains all valid methods for changing the value of a stat.",
		"constant": false,
		"source": "src/core/api/modules/stat.ts:24:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"set\""
					},
					{
						"type": "literal",
						"name": "\"increase\""
					},
					{
						"type": "literal",
						"name": "\"decrease\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODStatsManagerInitCallback",
		"comment": "## ODStatsManagerInitCallback `type`\nThis callback can be used to execute something when the stats have been initiated.\n\nBy default this is used to clear stats from users that left the server or tickets which don't exist anymore.",
		"constant": false,
		"source": "src/core/api/modules/stat.ts:19:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "database",
						"details": {
							"type": "reference",
							"name": "ODJsonDatabaseStructure",
							"target": "type",
							"typeArguments": null
						}
					},
					{
						"name": "deletables",
						"details": {
							"type": "reference",
							"name": "ODJsonDatabaseStructure",
							"target": "type",
							"typeArguments": null
						}
					}
				],
				"returns": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "void"
						},
						{
							"type": "internal",
							"name": "Promise",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "void"
								}
							]
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODValidStatValue",
		"comment": "## ODValidStatValue `type`\nThese are the only allowed types for a stat value to improve compatibility with different database systems.",
		"constant": false,
		"source": "src/core/api/modules/stat.ts:12:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "primitive",
						"name": "string"
					},
					{
						"type": "primitive",
						"name": "number"
					},
					{
						"type": "primitive",
						"name": "boolean"
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODVerifyBar",
		"comment": "## ODVerifyBar `class`\nThis is an Open Ticket verifybar.\n\nIt is contains 2 sets of workers and a lot of utilities for the (✅ ❌) verifybars in the bot.\n\nIt doesn't contain the code which activates or spawns the verifybars!",
		"constant": false,
		"source": "src/core/api/modules/verifybar.ts:18:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/verifybar.ts:28:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "message",
							"details": {
								"type": "reference",
								"name": "ODMessage",
								"target": "class",
								"typeArguments": [
									{
										"type": "literal",
										"name": "\"verifybar\""
									},
									{
										"type": "unknown"
									}
								]
							}
						},
						{
							"name": "enabled",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODVerifyBar",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "enabled",
				"comment": "When disabled, it will skip the verifybar and instantly fire the `success` workers.",
				"source": "src/core/api/modules/verifybar.ts:26:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "failure",
				"comment": "All workers that will run when the verifybar is stopped.",
				"source": "src/core/api/modules/verifybar.ts:22:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODButtonResponderInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "literal",
							"name": "\"verifybar\""
						},
						{
							"type": "unknown"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "message",
				"comment": "The message that will be built wen activating this verifybar.",
				"source": "src/core/api/modules/verifybar.ts:24:4",
				"details": {
					"type": "reference",
					"name": "ODMessage",
					"target": "class",
					"typeArguments": [
						{
							"type": "literal",
							"name": "\"verifybar\""
						},
						{
							"type": "unknown"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "success",
				"comment": "All workers that will run when the verifybar is accepted.",
				"source": "src/core/api/modules/verifybar.ts:20:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerManager",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODButtonResponderInstance",
							"target": "class",
							"typeArguments": null
						},
						{
							"type": "literal",
							"name": "\"verifybar\""
						},
						{
							"type": "unknown"
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "activate",
				"comment": "Build the message and reply to a button with this verifybar.",
				"source": "src/core/api/modules/verifybar.ts:37:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Build the message and reply to a button with this verifybar.",
					"parameters": [
						{
							"name": "responder",
							"details": {
								"type": "reference",
								"name": "ODButtonResponderInstance",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODVerifyBarManager",
		"comment": "## ODVerifyBarManager `class`\nThis is an Open Ticket verifybar manager.\n\nIt contains all (✅ ❌) verifybars in the bot.\nThe `ODVerifyBar` classes contain `ODWorkerManager`'s that will be fired when the continue/stop buttons are pressed.\n\nIt doesn't contain the code which activates the verifybars! This should be implemented by your own.",
		"constant": false,
		"source": "src/core/api/modules/verifybar.ts:57:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/verifybar.ts:58:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODVerifyBarManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODVerifyBar",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODVerifyBar",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODVerifyBar",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODVerifyBar",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODVerifyBar",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODVerifyBar",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODVerifyBar",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODVerifyBar",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODVerifyBar",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODVerifyBar",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODVerifyBar",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODVerifyBar",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODVerifyBar",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODWorker",
		"comment": "## ODWorker `class`\nThis is an Open Ticket worker.\n\nYou can compare it with a normal javascript callback, but slightly more advanced!\n\n- It has an `id` for identification of the function\n- A `priority` to know when to execute this callback (related to others)\n- It knows who called this callback (`source`)\n- And much more!",
		"constant": false,
		"source": "src/core/api/modules/worker.ts:21:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/worker.ts:27:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "priority",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODWorkerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "Instance",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODWorker",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Instance",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "callback",
				"comment": "The main callback of this worker",
				"source": "src/core/api/modules/worker.ts:25:4",
				"details": {
					"type": "reference",
					"name": "ODWorkerCallback",
					"target": "type",
					"typeArguments": [
						{
							"type": "typeParam",
							"name": "Instance",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						},
						{
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "priority",
				"comment": "The priority of this worker",
				"source": "src/core/api/modules/worker.ts:23:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Instance",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODWorkerManager",
		"comment": "## ODWorker `class`\nThis is an Open Ticket worker manager.\n\nIt manages & executes `ODWorker`'s in the correct order.\n\nYou can register a custom worker in this class to create a message or button.",
		"constant": false,
		"source": "src/core/api/modules/worker.ts:41:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/modules/worker.ts:47:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "priorityOrder",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"ascending\""
									},
									{
										"type": "literal",
										"name": "\"descending\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODWorkerManager",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Instance",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							},
							{
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "backupWorker",
				"comment": "The backup worker will be executed when one of the workers fails or cancels execution.",
				"source": "src/core/api/modules/worker.ts:45:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODWorker",
							"target": "class",
							"typeArguments": [
								{
									"type": "unknown"
								},
								{
									"type": "typeParam",
									"name": "Source",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Params",
									"typeArguments": null
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODWorker",
										"target": "class",
										"typeArguments": [
											{
												"type": "typeParam",
												"name": "Instance",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Source",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Params",
												"typeArguments": null
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODWorker",
											"target": "class",
											"typeArguments": [
												{
													"type": "typeParam",
													"name": "Instance",
													"typeArguments": null
												},
												{
													"type": "typeParam",
													"name": "Source",
													"typeArguments": null
												},
												{
													"type": "typeParam",
													"name": "Params",
													"typeArguments": null
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "executeWorkers",
				"comment": "Execute all workers on an instance using the given source & parameters.",
				"source": "src/core/api/modules/worker.ts:62:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Execute all workers on an instance using the given source & parameters.",
					"parameters": [
						{
							"name": "instance",
							"details": {
								"type": "typeParam",
								"name": "Instance",
								"typeArguments": null
							}
						},
						{
							"name": "source",
							"details": {
								"type": "typeParam",
								"name": "Source",
								"typeArguments": null
							}
						},
						{
							"name": "params",
							"details": {
								"type": "typeParam",
								"name": "Params",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODWorker",
								"target": "class",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "Instance",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODWorker",
							"target": "class",
							"typeArguments": [
								{
									"type": "typeParam",
									"name": "Instance",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Source",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Params",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODWorker",
											"target": "class",
											"typeArguments": [
												{
													"type": "typeParam",
													"name": "Instance",
													"typeArguments": null
												},
												{
													"type": "typeParam",
													"name": "Source",
													"typeArguments": null
												},
												{
													"type": "typeParam",
													"name": "Params",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODWorker",
												"target": "class",
												"typeArguments": [
													{
														"type": "typeParam",
														"name": "Instance",
														"typeArguments": null
													},
													{
														"type": "typeParam",
														"name": "Source",
														"typeArguments": null
													},
													{
														"type": "typeParam",
														"name": "Params",
														"typeArguments": null
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODWorker",
							"target": "class",
							"typeArguments": [
								{
									"type": "typeParam",
									"name": "Instance",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Source",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Params",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODWorker",
							"target": "class",
							"typeArguments": [
								{
									"type": "typeParam",
									"name": "Instance",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Source",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Params",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSortedWorkers",
				"comment": "Get all workers in sorted order.",
				"source": "src/core/api/modules/worker.ts:53:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get all workers in sorted order.",
					"parameters": [
						{
							"name": "priority",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"ascending\""
									},
									{
										"type": "literal",
										"name": "\"descending\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODWorker",
							"target": "class",
							"typeArguments": [
								{
									"type": "typeParam",
									"name": "Instance",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Source",
									"typeArguments": null
								},
								{
									"type": "typeParam",
									"name": "Params",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODWorker",
											"target": "class",
											"typeArguments": [
												{
													"type": "typeParam",
													"name": "Instance",
													"typeArguments": null
												},
												{
													"type": "typeParam",
													"name": "Source",
													"typeArguments": null
												},
												{
													"type": "typeParam",
													"name": "Params",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODWorker",
										"target": "class",
										"typeArguments": [
											{
												"type": "typeParam",
												"name": "Instance",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Source",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Params",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODWorker",
										"target": "class",
										"typeArguments": [
											{
												"type": "typeParam",
												"name": "Instance",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Source",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Params",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODWorker",
										"target": "class",
										"typeArguments": [
											{
												"type": "typeParam",
												"name": "Instance",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Source",
												"typeArguments": null
											},
											{
												"type": "typeParam",
												"name": "Params",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODWorker",
								"target": "class",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "Instance",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Source",
										"typeArguments": null
									},
									{
										"type": "typeParam",
										"name": "Params",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Instance",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "type",
		"name": "ODWorkerCallback",
		"comment": "## ODWorkerCallback `type`\nThis is the callback used in `ODWorker`!",
		"constant": false,
		"source": "src/core/api/modules/worker.ts:9:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "instance",
						"details": {
							"type": "typeParam",
							"name": "Instance",
							"typeArguments": null
						}
					},
					{
						"name": "params",
						"details": {
							"type": "typeParam",
							"name": "Params",
							"typeArguments": null
						}
					},
					{
						"name": "source",
						"details": {
							"type": "typeParam",
							"name": "Source",
							"typeArguments": null
						}
					},
					{
						"name": "cancel",
						"details": {
							"type": "function",
							"inherited": false,
							"comment": null,
							"parameters": [],
							"returns": {
								"type": "primitive",
								"name": "void"
							}
						}
					}
				],
				"returns": {
					"type": "union",
					"children": [
						{
							"type": "primitive",
							"name": "void"
						},
						{
							"type": "internal",
							"name": "Promise",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "void"
								}
							]
						}
					]
				}
			}
		],
		"typeParams": [
			{
				"name": "Instance",
				"type": {
					"type": "unknown"
				}
			},
			{
				"name": "Source",
				"type": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"name": "Params",
				"type": {
					"type": "unknown"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODBlacklist",
		"comment": "## ODBlacklist `class`\nThis is an Open Ticket blacklisted user.\n\nThis class contains the id of the user this class belongs to & an optional reason for being blacklisted.\n\nCreate this class & add it to the `ODBlacklistManager` to blacklist someone!",
		"constant": false,
		"source": "src/core/api/openticket/blacklist.ts:14:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/blacklist.ts:18:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "reason",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "string"
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODBlacklist",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "other",
				"name": "reason",
				"comment": null,
				"source": "src/core/api/openticket/blacklist.ts:24:8",
				"details": null
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODBlacklistManager",
		"comment": "## ODBlacklistManager `class`\nThis is an Open Ticket blacklist manager.\n\nThis class manages all blacklisted users & their reason. Check if someone is blacklisted using their ID in the `exists()` method.\n\nAll `ODBlacklist`'s added, removed & edited in this list will be synced automatically with the database.",
		"constant": false,
		"source": "src/core/api/openticket/blacklist.ts:40:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/blacklist.ts:41:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODBlacklistManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODBlacklist",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODBlacklist",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODBlacklist",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODBlacklist",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODBlacklist",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODBlacklist",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODBlacklist",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODBlacklist",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODBlacklist",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODBlacklist",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODBlacklist",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODBlacklist",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODBlacklist",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODOption",
		"comment": "## ODOption `class`\nThis is an Open Ticket option.\n\nThis class contains all data related to this option (parsed from the config).\n\nIt's recommended to use `ODTicketOption`, `ODWebsiteOption` or `ODRoleOption` instead!",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:68:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:74:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "type",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "data",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODOptionData",
									"target": "class",
									"typeArguments": [
										{
											"type": "reference",
											"name": "ODValidJsonType",
											"target": "type",
											"typeArguments": null
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOption",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this option. (from the config)",
				"source": "src/core/api/openticket/option.ts:70:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option. (e.g. `openticket:ticket`, `openticket:website`, `openticket:role`)",
				"source": "src/core/api/openticket/option.ts:72:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODOptionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODOptionData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOptionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODOptionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODOptionData",
												"target": "class",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ODValidJsonType",
														"target": "type",
														"typeArguments": null
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOptionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOptionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODOptionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODOptionData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "toJson",
				"comment": "Convert this option to a JSON object for storing this option in the database.",
				"source": "src/core/api/openticket/option.ts:84:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Convert this option to a JSON object for storing this option in the database.",
					"parameters": [
						{
							"name": "version",
							"details": {
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionJson",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "fromJson",
				"comment": "Create an option from a JSON object in the database.",
				"source": "src/core/api/openticket/option.ts:101:11",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create an option from a JSON object in the database.",
					"parameters": [
						{
							"name": "json",
							"details": {
								"type": "reference",
								"name": "ODOptionJson",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOption",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODOptionCounterDynamicSuffix",
		"comment": "## ODOptionCounterDynamicSuffix `class`\nThis is an Open Ticket counter-dynamic option suffix.\n\nThis class can generate a counter-dynamic suffix for a discord channel name from a specific option.\n\nUse `getSuffix()` to get the new suffix!",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:415:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:419:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "option",
							"details": {
								"type": "reference",
								"name": "ODTicketOption",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "database",
							"details": {
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionCounterDynamicSuffix",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "database",
				"comment": "The database where the value of this counter is stored.",
				"source": "src/core/api/openticket/option.ts:417:4",
				"details": {
					"type": "reference",
					"name": "ODDatabase",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "option",
				"comment": "The option of this suffix.",
				"source": "src/core/api/openticket/option.ts:369:4",
				"details": {
					"type": "reference",
					"name": "ODTicketOption",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "getSuffix",
				"comment": "Get the suffix for a new ticket.",
				"source": "src/core/api/openticket/option.ts:429:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the suffix for a new ticket.",
					"parameters": [
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODOptionCounterFixedSuffix",
		"comment": "## ODOptionCounterFixedSuffix `class`\nThis is an Open Ticket counter-fixed option suffix.\n\nThis class can generate a counter-fixed suffix for a discord channel name from a specific option.\n\nUse `getSuffix()` to get the new suffix!",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:445:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:449:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "option",
							"details": {
								"type": "reference",
								"name": "ODTicketOption",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "database",
							"details": {
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionCounterFixedSuffix",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "database",
				"comment": "The database where the value of this counter is stored.",
				"source": "src/core/api/openticket/option.ts:447:4",
				"details": {
					"type": "reference",
					"name": "ODDatabase",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "option",
				"comment": "The option of this suffix.",
				"source": "src/core/api/openticket/option.ts:369:4",
				"details": {
					"type": "reference",
					"name": "ODTicketOption",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "getSuffix",
				"comment": "Get the suffix for a new ticket.",
				"source": "src/core/api/openticket/option.ts:459:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the suffix for a new ticket.",
					"parameters": [
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODOptionData",
		"comment": "## ODOptionData `class`\nThis is Open Ticket option data.\n\nThis class contains a single property for an option. (string, number, boolean, object, array, null)\n\nWhen this property is edited, the database will be updated automatically.",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:113:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:117:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionData",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "other",
				"name": "value",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:123:8",
				"details": null
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "refreshDatabase",
				"comment": "Refresh the database. Is only required to be used when updating `ODOptionData` with an object/array as value.",
				"source": "src/core/api/openticket/option.ts:131:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Refresh the database. Is only required to be used when updating `ODOptionData` with an object/array as value.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "DataType",
				"type": {
					"type": "reference",
					"name": "ODValidJsonType",
					"target": "type",
					"typeArguments": null
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODOptionManager",
		"comment": "## ODOptionManager `class`\nThis is an Open Ticket option manager.\n\nThis class manages all registered options in the bot. This also includes temporary options generated from tickets where the original option got deleted.\n\nAll option types including: tickets, websites & reaction roles are stored here.",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:19:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:25:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "suffix",
				"comment": "The option suffix manager used to generate channel suffixes for ticket names.",
				"source": "src/core/api/openticket/option.ts:23:4",
				"details": {
					"type": "reference",
					"name": "ODOptionSuffixManager",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/openticket/option.ts:31:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODOption",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODOption",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOption",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODOption",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODOption",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOption",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOption",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODOption",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOption",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOption",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOption",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODOption",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODOptionRandomHexSuffix",
		"comment": "## ODOptionRandomHexSuffix `class`\nThis is an Open Ticket random-hex option suffix.\n\nThis class can generate a random-hex suffix for a discord channel name from a specific option.\n\nUse `getSuffix()` to get the new suffix!",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:522:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:526:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "option",
							"details": {
								"type": "reference",
								"name": "ODTicketOption",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "database",
							"details": {
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionRandomHexSuffix",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "database",
				"comment": "The database where previous random hexes are stored.",
				"source": "src/core/api/openticket/option.ts:524:4",
				"details": {
					"type": "reference",
					"name": "ODDatabase",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "option",
				"comment": "The option of this suffix.",
				"source": "src/core/api/openticket/option.ts:369:4",
				"details": {
					"type": "reference",
					"name": "ODTicketOption",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "getSuffix",
				"comment": "Get the suffix for a new ticket.",
				"source": "src/core/api/openticket/option.ts:542:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the suffix for a new ticket.",
					"parameters": [
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODOptionRandomNumberSuffix",
		"comment": "## ODOptionRandomNumberSuffix `class`\nThis is an Open Ticket random-number option suffix.\n\nThis class can generate a random-number suffix for a discord channel name from a specific option.\n\nUse `getSuffix()` to get the new suffix!",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:479:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:483:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "option",
							"details": {
								"type": "reference",
								"name": "ODTicketOption",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "database",
							"details": {
								"type": "reference",
								"name": "ODDatabase",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionRandomNumberSuffix",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "database",
				"comment": "The database where previous random numbers are stored.",
				"source": "src/core/api/openticket/option.ts:481:4",
				"details": {
					"type": "reference",
					"name": "ODDatabase",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "option",
				"comment": "The option of this suffix.",
				"source": "src/core/api/openticket/option.ts:369:4",
				"details": {
					"type": "reference",
					"name": "ODTicketOption",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "getSuffix",
				"comment": "Get the suffix for a new ticket.",
				"source": "src/core/api/openticket/option.ts:504:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the suffix for a new ticket.",
					"parameters": [
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODOptionSuffix",
		"comment": "## ODOptionSuffix `class`\nThis is an Open Ticket option suffix.\n\nThis class can generate a suffix for a discord channel name from a specific option.\n\nUse `getSuffix()` to get the new suffix!",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:367:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:371:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "option",
							"details": {
								"type": "reference",
								"name": "ODTicketOption",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionSuffix",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "option",
				"comment": "The option of this suffix.",
				"source": "src/core/api/openticket/option.ts:369:4",
				"details": {
					"type": "reference",
					"name": "ODTicketOption",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "getSuffix",
				"comment": "Get the suffix for a new ticket.",
				"source": "src/core/api/openticket/option.ts:377:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the suffix for a new ticket.",
					"parameters": [
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODOptionSuffixManager",
		"comment": "## ODOptionSuffixManager `class`\nThis is an Open Ticket option suffix manager.\n\nThis class manages all suffixes from option in the bot. The id of an option suffix is the same as the option id.\n\nAll ticket options should have a corresponding option suffix class.",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:347:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:348:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionSuffixManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODOptionSuffix",
										"target": "class",
										"typeArguments": null
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODOptionSuffix",
											"target": "class",
											"typeArguments": null
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODOptionSuffix",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOptionSuffix",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODOptionSuffix",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODOptionSuffix",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOptionSuffix",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOptionSuffix",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getSuffixFromOption",
				"comment": "Instantly get the suffix from an `ODTicketOption`.",
				"source": "src/core/api/openticket/option.ts:353:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Instantly get the suffix from an `ODTicketOption`.",
					"parameters": [
						{
							"name": "option",
							"details": {
								"type": "reference",
								"name": "ODTicketOption",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODOptionSuffix",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOptionSuffix",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOptionSuffix",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOptionSuffix",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODOptionSuffix",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODOptionUserIdSuffix",
		"comment": "## ODOptionUserIdSuffix `class`\nThis is an Open Ticket user-id option suffix.\n\nThis class can generate a user-id suffix for a discord channel name from a specific option.\n\nUse `getSuffix()` to get the new suffix!",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:402:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:371:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "option",
							"details": {
								"type": "reference",
								"name": "ODTicketOption",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionUserIdSuffix",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "option",
				"comment": "The option of this suffix.",
				"source": "src/core/api/openticket/option.ts:369:4",
				"details": {
					"type": "reference",
					"name": "ODTicketOption",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "getSuffix",
				"comment": "Get the suffix for a new ticket.",
				"source": "src/core/api/openticket/option.ts:403:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the suffix for a new ticket.",
					"parameters": [
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODOptionUserNameSuffix",
		"comment": "## ODOptionUserNameSuffix `class`\nThis is an Open Ticket user-name option suffix.\n\nThis class can generate a user-name suffix for a discord channel name from a specific option.\n\nUse `getSuffix()` to get the new suffix!",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:389:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:371:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "option",
							"details": {
								"type": "reference",
								"name": "ODTicketOption",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionUserNameSuffix",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "option",
				"comment": "The option of this suffix.",
				"source": "src/core/api/openticket/option.ts:369:4",
				"details": {
					"type": "reference",
					"name": "ODTicketOption",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "getSuffix",
				"comment": "Get the suffix for a new ticket.",
				"source": "src/core/api/openticket/option.ts:390:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the suffix for a new ticket.",
					"parameters": [
						{
							"name": "user",
							"details": {
								"type": "external",
								"package": "discord.js",
								"name": "User",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODRoleOption",
		"comment": "## ODRoleOption `class`\nThis is an Open Ticket role option.\n\nThis class contains all data related to an Open Ticket role option (parsed from the config).\n\nUse this option to create a button for reaction roles!",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:307:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:310:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "data",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODOptionData",
									"target": "class",
									"typeArguments": [
										{
											"type": "reference",
											"name": "ODValidJsonType",
											"target": "type",
											"typeArguments": null
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODRoleOption",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this option. (from the config)",
				"source": "src/core/api/openticket/option.ts:70:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option. (e.g. `openticket:ticket`, `openticket:website`, `openticket:role`)",
				"source": "src/core/api/openticket/option.ts:308:4",
				"details": {
					"type": "literal",
					"name": "\"openticket:role\""
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODOptionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/openticket/option.ts:328:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODRoleOptionIds",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/openticket/option.ts:314:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODOptionData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOptionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODOptionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODOptionData",
												"target": "class",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ODValidJsonType",
														"target": "type",
														"typeArguments": null
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOptionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOptionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODOptionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/openticket/option.ts:321:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODOptionData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "toJson",
				"comment": "Convert this option to a JSON object for storing this option in the database.",
				"source": "src/core/api/openticket/option.ts:84:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Convert this option to a JSON object for storing this option in the database.",
					"parameters": [
						{
							"name": "version",
							"details": {
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionJson",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "fromJson",
				"comment": "Create an option from a JSON object in the database.",
				"source": "src/core/api/openticket/option.ts:335:11",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create an option from a JSON object in the database.",
					"parameters": [
						{
							"name": "json",
							"details": {
								"type": "reference",
								"name": "ODOptionJson",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODRoleOption",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODTicketOption",
		"comment": "## ODTicketOption `class`\nThis is an Open Ticket ticket option.\n\nThis class contains all data related to an Open Ticket ticket option (parsed from the config).\n\nUse this option to create a new ticket!",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:195:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:198:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "data",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODOptionData",
									"target": "class",
									"typeArguments": [
										{
											"type": "reference",
											"name": "ODValidJsonType",
											"target": "type",
											"typeArguments": null
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTicketOption",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this option. (from the config)",
				"source": "src/core/api/openticket/option.ts:70:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option. (e.g. `openticket:ticket`, `openticket:website`, `openticket:role`)",
				"source": "src/core/api/openticket/option.ts:196:4",
				"details": {
					"type": "literal",
					"name": "\"openticket:ticket\""
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODOptionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/openticket/option.ts:216:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODTicketOptionIds",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/openticket/option.ts:202:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODOptionData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOptionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODOptionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODOptionData",
												"target": "class",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ODValidJsonType",
														"target": "type",
														"typeArguments": null
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOptionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOptionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODOptionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/openticket/option.ts:209:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODOptionData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "toJson",
				"comment": "Convert this option to a JSON object for storing this option in the database.",
				"source": "src/core/api/openticket/option.ts:84:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Convert this option to a JSON object for storing this option in the database.",
					"parameters": [
						{
							"name": "version",
							"details": {
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionJson",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "fromJson",
				"comment": "Create an option from a JSON object in the database.",
				"source": "src/core/api/openticket/option.ts:223:11",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create an option from a JSON object in the database.",
					"parameters": [
						{
							"name": "json",
							"details": {
								"type": "reference",
								"name": "ODOptionJson",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTicketOption",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODWebsiteOption",
		"comment": "## ODWebsiteOption `class`\nThis is an Open Ticket website option.\n\nThis class contains all data related to an Open Ticket website option (parsed from the config).\n\nUse this option to create a button which links to a website!",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:249:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:252:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "data",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODOptionData",
									"target": "class",
									"typeArguments": [
										{
											"type": "reference",
											"name": "ODValidJsonType",
											"target": "type",
											"typeArguments": null
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODWebsiteOption",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this option. (from the config)",
				"source": "src/core/api/openticket/option.ts:70:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option. (e.g. `openticket:ticket`, `openticket:website`, `openticket:role`)",
				"source": "src/core/api/openticket/option.ts:250:4",
				"details": {
					"type": "literal",
					"name": "\"openticket:website\""
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODOptionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/openticket/option.ts:270:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODWebsiteOptionIds",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/openticket/option.ts:256:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODOptionData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOptionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODOptionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODOptionData",
												"target": "class",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ODValidJsonType",
														"target": "type",
														"typeArguments": null
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOptionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODOptionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODOptionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODOptionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/openticket/option.ts:263:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODOptionData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "toJson",
				"comment": "Convert this option to a JSON object for storing this option in the database.",
				"source": "src/core/api/openticket/option.ts:84:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Convert this option to a JSON object for storing this option in the database.",
					"parameters": [
						{
							"name": "version",
							"details": {
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODOptionJson",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "fromJson",
				"comment": "Create an option from a JSON object in the database.",
				"source": "src/core/api/openticket/option.ts:277:11",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create an option from a JSON object in the database.",
					"parameters": [
						{
							"name": "json",
							"details": {
								"type": "reference",
								"name": "ODOptionJson",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODWebsiteOption",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODOptionDataJson",
		"comment": "## ODOptionDataJson `interface`\nThe JSON representatation from a single option property.",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:40:17",
		"children": [
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this property.",
				"source": "src/core/api/openticket/option.ts:42:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The value of this property.",
				"source": "src/core/api/openticket/option.ts:44:4",
				"details": {
					"type": "reference",
					"name": "ODValidJsonType",
					"target": "type",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODOptionJson",
		"comment": "## ODOptionDataJson `interface`\nThe JSON representatation from a single option.",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:50:17",
		"children": [
			{
				"type": "property",
				"name": "data",
				"comment": "The full list of properties/variables related to this option.",
				"source": "src/core/api/openticket/option.ts:58:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODOptionDataJson",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this option.",
				"source": "src/core/api/openticket/option.ts:52:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this option. (e.g. `openticket:ticket`, `openticket:website`, `openticket:role`)",
				"source": "src/core/api/openticket/option.ts:54:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "version",
				"comment": "The version of Open Ticket used to create this option & store it in the database.",
				"source": "src/core/api/openticket/option.ts:56:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODRoleOptionIds",
		"comment": "## ODRoleOptionIds `type`\nThis interface is a list of ids available in the `ODRoleOption` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:286:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:add-on-join",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:297:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:button-color",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:292:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODValidButtonColor",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:button-emoji",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:290:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:button-label",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:291:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:description",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:288:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:mode",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:295:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODRoleUpdateMode",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:name",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:287:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:remove-roles-on-add",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:296:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "array",
							"child": {
								"type": "primitive",
								"name": "string"
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:roles",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:294:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "array",
							"child": {
								"type": "primitive",
								"name": "string"
							}
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTicketOptionIds",
		"comment": "## ODTicketOptionIds `type`\nThis interface is a list of ids available in the `ODTicketOption` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:140:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:admins",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:148:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "array",
							"child": {
								"type": "primitive",
								"name": "string"
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:admins-readonly",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:149:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "array",
							"child": {
								"type": "primitive",
								"name": "string"
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:allow-blacklisted-users",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:150:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-disable-claim",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:172:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-enable-hours",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:170:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-enable-leave",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:171:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-hours",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:173:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-days",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:178:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-disable-claim",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:177:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-enable-days",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:175:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-enable-leave",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:176:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:button-color",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:146:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODValidButtonColor",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:button-emoji",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:144:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:button-label",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:145:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:channel-categories-claimed",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:158:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "array",
							"child": {
								"type": "unknown"
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:channel-category",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:155:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:channel-category-backup",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:157:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:channel-category-closed",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:156:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:channel-description",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:159:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:channel-prefix",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:153:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:channel-suffix",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:154:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "\"user-name\""
								},
								{
									"type": "literal",
									"name": "\"user-id\""
								},
								{
									"type": "literal",
									"name": "\"random-number\""
								},
								{
									"type": "literal",
									"name": "\"random-hex\""
								},
								{
									"type": "literal",
									"name": "\"counter-dynamic\""
								},
								{
									"type": "literal",
									"name": "\"counter-fixed\""
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:cooldown-enabled",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:180:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:cooldown-minutes",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:181:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:description",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:142:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:dm-message-embed",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:163:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODJsonConfig_DefaultOptionEmbedSettingsType",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:dm-message-enabled",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:161:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:dm-message-text",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:162:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:limits-enabled",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:183:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:limits-maximum-global",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:184:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:limits-maximum-user",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:185:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:name",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:141:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:questions",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:151:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "array",
							"child": {
								"type": "primitive",
								"name": "string"
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-message-embed",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:167:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODJsonConfig_DefaultOptionEmbedSettingsType",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-message-enabled",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:165:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-message-ping",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:168:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODJsonConfig_DefaultOptionPingSettingsType",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-message-text",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:166:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODWebsiteOptionIds",
		"comment": "## ODWebsiteOptionIds `type`\nThis interface is a list of ids available in the `ODWebsiteOption` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/openticket/option.ts:232:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:button-emoji",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:236:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:button-label",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:237:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:description",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:234:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:name",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:233:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:url",
				"comment": null,
				"source": "src/core/api/openticket/option.ts:239:4",
				"details": {
					"type": "reference",
					"name": "ODOptionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODPanel",
		"comment": "## ODPanel `class`\nThis is an Open Ticket panel.\n\nThis class contains all data related to this panel (parsed from the config).",
		"constant": false,
		"source": "src/core/api/openticket/panel.ts:81:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:85:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "data",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODPanelData",
									"target": "class",
									"typeArguments": [
										{
											"type": "reference",
											"name": "ODValidJsonType",
											"target": "type",
											"typeArguments": null
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPanel",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this panel. (from the config)",
				"source": "src/core/api/openticket/panel.ts:83:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODPanelData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODPanelData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/openticket/panel.ts:128:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODPanelIds",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/openticket/panel.ts:114:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPanelData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPanelData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODPanelData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODPanelData",
												"target": "class",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ODValidJsonType",
														"target": "type",
														"typeArguments": null
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPanelData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPanelData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODPanelData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPanelData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPanelData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPanelData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/openticket/panel.ts:121:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPanelData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "toJson",
				"comment": "Convert this panel to a JSON object for storing this panel in the database.",
				"source": "src/core/api/openticket/panel.ts:94:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Convert this panel to a JSON object for storing this panel in the database.",
					"parameters": [
						{
							"name": "version",
							"details": {
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPanelJson",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "fromJson",
				"comment": "Create a panel from a JSON object in the database.",
				"source": "src/core/api/openticket/panel.ts:110:11",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create a panel from a JSON object in the database.",
					"parameters": [
						{
							"name": "json",
							"details": {
								"type": "reference",
								"name": "ODPanelJson",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPanel",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODPanelData",
		"comment": "## ODPanelData `class`\nThis is Open Ticket panel data.\n\nThis class contains a single property for a panel. (string, number, boolean, object, array, null)\n\nWhen this property is edited, the database will be updated automatically.",
		"constant": false,
		"source": "src/core/api/openticket/panel.ts:143:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:147:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPanelData",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "other",
				"name": "value",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:153:8",
				"details": null
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "refreshDatabase",
				"comment": "Refresh the database. Is only required to be used when updating `ODPanelData` with an object/array as value.",
				"source": "src/core/api/openticket/panel.ts:161:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Refresh the database. Is only required to be used when updating `ODPanelData` with an object/array as value.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "DataType",
				"type": {
					"type": "reference",
					"name": "ODValidJsonType",
					"target": "type",
					"typeArguments": null
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODPanelManager",
		"comment": "## ODPanelManager `class`\nThis is an Open Ticket panel manager.\n\nThis class manages all registered panels in the bot. Only panels which are available in this manager can be auto-updated.\n\nPanels are not stored in the database and will be parsed from the config every startup.",
		"constant": false,
		"source": "src/core/api/openticket/panel.ts:15:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:19:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODPanelManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/openticket/panel.ts:24:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODPanel",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPanel",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPanel",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODPanel",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODPanel",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPanel",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODPanel",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODPanel",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPanel",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPanel",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODPanel",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODPanel",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODPanelDataJson",
		"comment": "## ODPanelDataJson `interface`\nThe JSON representatation from a single panel property.",
		"constant": false,
		"source": "src/core/api/openticket/panel.ts:33:17",
		"children": [
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this property.",
				"source": "src/core/api/openticket/panel.ts:35:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The value of this property.",
				"source": "src/core/api/openticket/panel.ts:37:4",
				"details": {
					"type": "reference",
					"name": "ODValidJsonType",
					"target": "type",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODPanelIds",
		"comment": "## ODPanelIds `type`\nThis interface is a list of ids available in the `ODPanel` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/openticket/panel.ts:56:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:describe-options-custom-title",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:70:4",
				"details": {
					"type": "reference",
					"name": "ODPanelData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:describe-options-in-embed-description",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:73:4",
				"details": {
					"type": "reference",
					"name": "ODPanelData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:describe-options-in-embed-fields",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:72:4",
				"details": {
					"type": "reference",
					"name": "ODPanelData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:describe-options-in-text",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:71:4",
				"details": {
					"type": "reference",
					"name": "ODPanelData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:describe-options-layout",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:69:4",
				"details": {
					"type": "reference",
					"name": "ODPanelData",
					"target": "class",
					"typeArguments": [
						{
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "\"normal\""
								},
								{
									"type": "literal",
									"name": "\"simple\""
								},
								{
									"type": "literal",
									"name": "\"detailed\""
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:dropdown",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:59:4",
				"details": {
					"type": "reference",
					"name": "ODPanelData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:dropdown-placeholder",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:64:4",
				"details": {
					"type": "reference",
					"name": "ODPanelData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:embed",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:62:4",
				"details": {
					"type": "reference",
					"name": "ODPanelData",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODJsonConfig_DefaultPanelEmbedSettingsType",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:enable-max-tickets-warning-embed",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:67:4",
				"details": {
					"type": "reference",
					"name": "ODPanelData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:enable-max-tickets-warning-text",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:66:4",
				"details": {
					"type": "reference",
					"name": "ODPanelData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:name",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:57:4",
				"details": {
					"type": "reference",
					"name": "ODPanelData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:options",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:58:4",
				"details": {
					"type": "reference",
					"name": "ODPanelData",
					"target": "class",
					"typeArguments": [
						{
							"type": "array",
							"child": {
								"type": "primitive",
								"name": "string"
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:text",
				"comment": null,
				"source": "src/core/api/openticket/panel.ts:61:4",
				"details": {
					"type": "reference",
					"name": "ODPanelData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODPanelJson",
		"comment": "## ODPanelDataJson `interface`\nThe JSON representatation from a single panel.",
		"constant": false,
		"source": "src/core/api/openticket/panel.ts:43:17",
		"children": [
			{
				"type": "property",
				"name": "data",
				"comment": "The full list of properties/variables related to this panel.",
				"source": "src/core/api/openticket/panel.ts:49:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODPanelDataJson",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this panel.",
				"source": "src/core/api/openticket/panel.ts:45:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "version",
				"comment": "The version of Open Ticket used to create this panel.",
				"source": "src/core/api/openticket/panel.ts:47:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODParagraphQuestion",
		"comment": "## ODParagraphQuestion `class`\nThis is an Open Ticket paragraph question.\n\nThis class contains all data related to an Open Ticket paragraph question (parsed from the config).\n\nUse this question in an option to add a paragraph text field to the modal!",
		"constant": false,
		"source": "src/core/api/openticket/question.ts:203:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:206:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "data",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODQuestionData",
									"target": "class",
									"typeArguments": [
										{
											"type": "reference",
											"name": "ODValidJsonType",
											"target": "type",
											"typeArguments": null
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODParagraphQuestion",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this question. (from the config)",
				"source": "src/core/api/openticket/question.ts:62:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this question (e.g. `openticket:short` or `openticket:paragraph`)",
				"source": "src/core/api/openticket/question.ts:204:4",
				"details": {
					"type": "literal",
					"name": "\"openticket:paragraph\""
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODQuestionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODQuestionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/openticket/question.ts:224:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODParagraphQuestionIds",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/openticket/question.ts:210:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODQuestionData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODQuestionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODQuestionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODQuestionData",
												"target": "class",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ODValidJsonType",
														"target": "type",
														"typeArguments": null
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODQuestionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODQuestionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODQuestionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODQuestionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODQuestionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODQuestionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/openticket/question.ts:217:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODQuestionData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "toJson",
				"comment": "Convert this question to a JSON object for storing this question in the database.",
				"source": "src/core/api/openticket/question.ts:76:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Convert this question to a JSON object for storing this question in the database.",
					"parameters": [
						{
							"name": "version",
							"details": {
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODQuestionJson",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "fromJson",
				"comment": "Create a question from a JSON object in the database.",
				"source": "src/core/api/openticket/question.ts:231:11",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create a question from a JSON object in the database.",
					"parameters": [
						{
							"name": "json",
							"details": {
								"type": "reference",
								"name": "ODQuestionJson",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODParagraphQuestion",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODQuestion",
		"comment": "## ODQuestion `class`\nThis is an Open Ticket question.\n\nThis class contains all data related to this question (parsed from the config).\n\nUse `ODShortQuestion` or `ODParagraphQuestion` instead!",
		"constant": false,
		"source": "src/core/api/openticket/question.ts:60:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:66:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "type",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "data",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODQuestionData",
									"target": "class",
									"typeArguments": [
										{
											"type": "reference",
											"name": "ODValidJsonType",
											"target": "type",
											"typeArguments": null
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODQuestion",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this question. (from the config)",
				"source": "src/core/api/openticket/question.ts:62:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this question (e.g. `openticket:short` or `openticket:paragraph`)",
				"source": "src/core/api/openticket/question.ts:64:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODQuestionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODQuestionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODQuestionData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODQuestionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODQuestionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODQuestionData",
												"target": "class",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ODValidJsonType",
														"target": "type",
														"typeArguments": null
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODQuestionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODQuestionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODQuestionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODQuestionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODQuestionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODQuestionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODQuestionData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "toJson",
				"comment": "Convert this question to a JSON object for storing this question in the database.",
				"source": "src/core/api/openticket/question.ts:76:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Convert this question to a JSON object for storing this question in the database.",
					"parameters": [
						{
							"name": "version",
							"details": {
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODQuestionJson",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "fromJson",
				"comment": "Create a question from a JSON object in the database.",
				"source": "src/core/api/openticket/question.ts:93:11",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create a question from a JSON object in the database.",
					"parameters": [
						{
							"name": "json",
							"details": {
								"type": "reference",
								"name": "ODQuestionJson",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODQuestion",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODQuestionData",
		"comment": "## ODQuestionData `class`\nThis is Open Ticket question data.\n\nThis class contains a single property for a question. (string, number, boolean, object, array, null)\n\nWhen this property is edited, the database will be updated automatically.",
		"constant": false,
		"source": "src/core/api/openticket/question.ts:105:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:109:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODQuestionData",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "other",
				"name": "value",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:115:8",
				"details": null
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "refreshDatabase",
				"comment": "Refresh the database. Is only required to be used when updating `ODQuestionData` with an object/array as value.",
				"source": "src/core/api/openticket/question.ts:123:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Refresh the database. Is only required to be used when updating `ODQuestionData` with an object/array as value.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "DataType",
				"type": {
					"type": "reference",
					"name": "ODValidJsonType",
					"target": "type",
					"typeArguments": null
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODQuestionManager",
		"comment": "## ODQuestionManager `class`\nThis is an Open Ticket question manager.\n\nThis class manages all registered questions in the bot. Only questions which are available in this manager can be used in options.\n\nQuestions are not stored in the database and will be parsed from the config every startup.",
		"constant": false,
		"source": "src/core/api/openticket/question.ts:14:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:18:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODQuestionManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/openticket/question.ts:23:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODQuestion",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODQuestion",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODQuestion",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODQuestion",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODQuestion",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODQuestion",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODQuestion",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODQuestion",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODQuestion",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODQuestion",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODQuestion",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODQuestion",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODShortQuestion",
		"comment": "## ODShortQuestion `class`\nThis is an Open Ticket short question.\n\nThis class contains all data related to an Open Ticket short question (parsed from the config).\n\nUse this question in an option to add a short text field to the modal!",
		"constant": false,
		"source": "src/core/api/openticket/question.ts:149:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:152:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "data",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODQuestionData",
									"target": "class",
									"typeArguments": [
										{
											"type": "reference",
											"name": "ODValidJsonType",
											"target": "type",
											"typeArguments": null
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODShortQuestion",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this question. (from the config)",
				"source": "src/core/api/openticket/question.ts:62:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this question (e.g. `openticket:short` or `openticket:paragraph`)",
				"source": "src/core/api/openticket/question.ts:150:4",
				"details": {
					"type": "literal",
					"name": "\"openticket:short\""
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODQuestionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODQuestionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/openticket/question.ts:170:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODShortQuestionIds",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/openticket/question.ts:156:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODQuestionData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODQuestionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODQuestionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODQuestionData",
												"target": "class",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ODValidJsonType",
														"target": "type",
														"typeArguments": null
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODQuestionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODQuestionData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODQuestionData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODQuestionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODQuestionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODQuestionData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/openticket/question.ts:163:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODQuestionData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "toJson",
				"comment": "Convert this question to a JSON object for storing this question in the database.",
				"source": "src/core/api/openticket/question.ts:76:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Convert this question to a JSON object for storing this question in the database.",
					"parameters": [
						{
							"name": "version",
							"details": {
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODQuestionJson",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "fromJson",
				"comment": "Create a question from a JSON object in the database.",
				"source": "src/core/api/openticket/question.ts:177:11",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create a question from a JSON object in the database.",
					"parameters": [
						{
							"name": "json",
							"details": {
								"type": "reference",
								"name": "ODQuestionJson",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODShortQuestion",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODParagraphQuestionIds",
		"comment": "## ODParagraphQuestionIds `type`\nThis interface is a list of ids available in the `ODParagraphQuestion` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/openticket/question.ts:186:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:length-enabled",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:191:4",
				"details": {
					"type": "reference",
					"name": "ODQuestionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:length-max",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:193:4",
				"details": {
					"type": "reference",
					"name": "ODQuestionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:length-min",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:192:4",
				"details": {
					"type": "reference",
					"name": "ODQuestionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:name",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:187:4",
				"details": {
					"type": "reference",
					"name": "ODQuestionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:placeholder",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:189:4",
				"details": {
					"type": "reference",
					"name": "ODQuestionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:required",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:188:4",
				"details": {
					"type": "reference",
					"name": "ODQuestionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODQuestionDataJson",
		"comment": "## ODQuestionDataJson `interface`\nThe JSON representatation from a single question property.",
		"constant": false,
		"source": "src/core/api/openticket/question.ts:32:17",
		"children": [
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this property.",
				"source": "src/core/api/openticket/question.ts:34:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The value of this property.",
				"source": "src/core/api/openticket/question.ts:36:4",
				"details": {
					"type": "reference",
					"name": "ODValidJsonType",
					"target": "type",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODQuestionJson",
		"comment": "## ODQuestionDataJson `interface`\nThe JSON representatation from a single question.",
		"constant": false,
		"source": "src/core/api/openticket/question.ts:42:17",
		"children": [
			{
				"type": "property",
				"name": "data",
				"comment": "The full list of properties/variables related to this question.",
				"source": "src/core/api/openticket/question.ts:50:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODQuestionDataJson",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this question.",
				"source": "src/core/api/openticket/question.ts:44:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this question.",
				"source": "src/core/api/openticket/question.ts:46:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "version",
				"comment": "The version of Open Ticket used to create this question.",
				"source": "src/core/api/openticket/question.ts:48:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODShortQuestionIds",
		"comment": "## ODShortQuestionIds `type`\nThis interface is a list of ids available in the `ODShortQuestion` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/openticket/question.ts:132:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:length-enabled",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:137:4",
				"details": {
					"type": "reference",
					"name": "ODQuestionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:length-max",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:139:4",
				"details": {
					"type": "reference",
					"name": "ODQuestionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:length-min",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:138:4",
				"details": {
					"type": "reference",
					"name": "ODQuestionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:name",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:133:4",
				"details": {
					"type": "reference",
					"name": "ODQuestionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:placeholder",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:135:4",
				"details": {
					"type": "reference",
					"name": "ODQuestionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:required",
				"comment": null,
				"source": "src/core/api/openticket/question.ts:134:4",
				"details": {
					"type": "reference",
					"name": "ODQuestionData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODRole",
		"comment": "## ODRole `class`\nThis is an Open Ticket role.\n\nThis class contains all data related to this role (parsed from the config).\n\nThese properties will be used to handle reaction role options.",
		"constant": false,
		"source": "src/core/api/openticket/role.ts:70:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/role.ts:74:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "data",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODRoleData",
									"target": "class",
									"typeArguments": [
										{
											"type": "reference",
											"name": "ODValidJsonType",
											"target": "type",
											"typeArguments": null
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODRole",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this role. (from the config)",
				"source": "src/core/api/openticket/role.ts:72:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODRoleData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODRoleData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/openticket/role.ts:117:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODRoleIds",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/openticket/role.ts:103:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODRoleData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODRoleData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODRoleData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODRoleData",
												"target": "class",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ODValidJsonType",
														"target": "type",
														"typeArguments": null
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODRoleData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODRoleData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODRoleData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODRoleData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODRoleData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODRoleData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/openticket/role.ts:110:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODRoleData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "toJson",
				"comment": "Convert this role to a JSON object for storing this role in the database.",
				"source": "src/core/api/openticket/role.ts:83:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Convert this role to a JSON object for storing this role in the database.",
					"parameters": [
						{
							"name": "version",
							"details": {
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODRoleJson",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "fromJson",
				"comment": "Create a role from a JSON object in the database.",
				"source": "src/core/api/openticket/role.ts:99:11",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create a role from a JSON object in the database.",
					"parameters": [
						{
							"name": "json",
							"details": {
								"type": "reference",
								"name": "ODRoleJson",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODRole",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODRoleData",
		"comment": "## ODRoleData `class`\nThis is Open Ticket role data.\n\nThis class contains a single property for a role. (string, number, boolean, object, array, null)\n\nWhen this property is edited, the database will be updated automatically.",
		"constant": false,
		"source": "src/core/api/openticket/role.ts:132:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/role.ts:136:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODRoleData",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "other",
				"name": "value",
				"comment": null,
				"source": "src/core/api/openticket/role.ts:142:8",
				"details": null
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "refreshDatabase",
				"comment": "Refresh the database. Is only required to be used when updating `ODRoleData` with an object/array as value.",
				"source": "src/core/api/openticket/role.ts:150:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Refresh the database. Is only required to be used when updating `ODRoleData` with an object/array as value.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "DataType",
				"type": {
					"type": "reference",
					"name": "ODValidJsonType",
					"target": "type",
					"typeArguments": null
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODRoleManager",
		"comment": "## ODRoleManager `class`\nThis is an Open Ticket role manager.\n\nThis class manages all registered reaction roles in the bot.\n\nRoles are not stored in the database and will be parsed from the config every startup.",
		"constant": false,
		"source": "src/core/api/openticket/role.ts:15:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/role.ts:19:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODRoleManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/openticket/role.ts:24:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODRole",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODRole",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODRole",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODRole",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODRole",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODRole",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODRole",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODRole",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODRole",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODRole",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODRole",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODRole",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODRoleDataJson",
		"comment": "## ODRoleDataJson `interface`\nThe JSON representatation from a single role property.",
		"constant": false,
		"source": "src/core/api/openticket/role.ts:33:17",
		"children": [
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this property.",
				"source": "src/core/api/openticket/role.ts:35:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The value of this property.",
				"source": "src/core/api/openticket/role.ts:37:4",
				"details": {
					"type": "reference",
					"name": "ODValidJsonType",
					"target": "type",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODRoleIds",
		"comment": "## ODRoleIds `type`\nThis interface is a list of ids available in the `ODRole` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/openticket/role.ts:56:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:add-on-join",
				"comment": null,
				"source": "src/core/api/openticket/role.ts:60:4",
				"details": {
					"type": "reference",
					"name": "ODRoleData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:mode",
				"comment": null,
				"source": "src/core/api/openticket/role.ts:58:4",
				"details": {
					"type": "reference",
					"name": "ODRoleData",
					"target": "class",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ODRoleUpdateMode",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:remove-roles-on-add",
				"comment": null,
				"source": "src/core/api/openticket/role.ts:59:4",
				"details": {
					"type": "reference",
					"name": "ODRoleData",
					"target": "class",
					"typeArguments": [
						{
							"type": "array",
							"child": {
								"type": "primitive",
								"name": "string"
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:roles",
				"comment": null,
				"source": "src/core/api/openticket/role.ts:57:4",
				"details": {
					"type": "reference",
					"name": "ODRoleData",
					"target": "class",
					"typeArguments": [
						{
							"type": "array",
							"child": {
								"type": "primitive",
								"name": "string"
							}
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODRoleJson",
		"comment": "## ODRoleDataJson `interface`\nThe JSON representatation from a single role.",
		"constant": false,
		"source": "src/core/api/openticket/role.ts:43:17",
		"children": [
			{
				"type": "property",
				"name": "data",
				"comment": "The full list of properties/variables related to this role.",
				"source": "src/core/api/openticket/role.ts:49:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODRoleDataJson",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this role.",
				"source": "src/core/api/openticket/role.ts:45:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "version",
				"comment": "The version of Open Ticket used to create this role.",
				"source": "src/core/api/openticket/role.ts:47:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODRoleUpdateResult",
		"comment": "## ODRoleUpdateResult `interface`\nThis interface represents the result of a single role when the roles of users are updated.",
		"constant": false,
		"source": "src/core/api/openticket/role.ts:158:17",
		"children": [
			{
				"type": "property",
				"name": "action",
				"comment": "The action which was done. `null` when nothing happend.",
				"source": "src/core/api/openticket/role.ts:162:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "literal",
							"name": "\"added\""
						},
						{
							"type": "literal",
							"name": "\"removed\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "role",
				"comment": "The role which was affected.",
				"source": "src/core/api/openticket/role.ts:160:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "Role",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODRoleUpdateMode",
		"comment": "## ODRoleUpdateMode `type`\nThis is the mode of the reaction role option in the config.",
		"constant": false,
		"source": "src/core/api/openticket/role.ts:168:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"add&remove\""
					},
					{
						"type": "literal",
						"name": "\"add\""
					},
					{
						"type": "literal",
						"name": "\"remove\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODTicket",
		"comment": "## ODTicket `class`\nThis is an Open Ticket ticket.\n\nThis class contains all data related to this ticket (parsed from the database).\n\nThese properties contain the current state of the ticket & are used by actions like claiming, pinning, closing, ...",
		"constant": false,
		"source": "src/core/api/openticket/ticket.ts:195:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:201:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "option",
							"details": {
								"type": "reference",
								"name": "ODTicketOption",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "data",
							"details": {
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODTicketData",
									"target": "class",
									"typeArguments": [
										{
											"type": "reference",
											"name": "ODValidJsonType",
											"target": "type",
											"typeArguments": null
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTicket",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this ticket. (discord channel id)",
				"source": "src/core/api/openticket/ticket.ts:197:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "other",
				"name": "option",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:211:8",
				"details": null
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODTicketData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODTicketData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/openticket/ticket.ts:255:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODTicketIds",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/openticket/ticket.ts:241:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODTicketData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTicketData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODTicketData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODTicketData",
												"target": "class",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ODValidJsonType",
														"target": "type",
														"typeArguments": null
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTicketData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTicketData",
							"target": "class",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODValidJsonType",
									"target": "type",
									"typeArguments": null
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODTicketData",
											"target": "class",
											"typeArguments": [
												{
													"type": "reference",
													"name": "ODValidJsonType",
													"target": "type",
													"typeArguments": null
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTicketData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTicketData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTicketData",
										"target": "class",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ODValidJsonType",
												"target": "type",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/openticket/ticket.ts:248:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODTicketData",
								"target": "class",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODValidJsonType",
										"target": "type",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "toJson",
				"comment": "Convert this ticket to a JSON object for storing this ticket in the database.",
				"source": "src/core/api/openticket/ticket.ts:220:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Convert this ticket to a JSON object for storing this ticket in the database.",
					"parameters": [
						{
							"name": "version",
							"details": {
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTicketJson",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "fromJson",
				"comment": "Create a ticket from a JSON object in the database.",
				"source": "src/core/api/openticket/ticket.ts:237:11",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Create a ticket from a JSON object in the database.",
					"parameters": [
						{
							"name": "json",
							"details": {
								"type": "reference",
								"name": "ODTicketJson",
								"target": "interface",
								"typeArguments": null
							}
						},
						{
							"name": "option",
							"details": {
								"type": "reference",
								"name": "ODTicketOption",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTicket",
						"target": "class",
						"typeArguments": null
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODTicketData",
		"comment": "## ODTicketData `class`\nThis is Open Ticket ticket data.\n\nThis class contains a single property for a ticket. (string, number, boolean, object, array, null)\n\nWhen this property is edited, the database will be updated automatically.",
		"constant": false,
		"source": "src/core/api/openticket/ticket.ts:270:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:274:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "value",
							"details": {
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTicketData",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "DataType",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "other",
				"name": "value",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:280:8",
				"details": null
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "refreshDatabase",
				"comment": "Refresh the database. Is only required to be used when updating `ODTicketData` with an object/array as value.",
				"source": "src/core/api/openticket/ticket.ts:288:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Refresh the database. Is only required to be used when updating `ODTicketData` with an object/array as value.",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "DataType",
				"type": {
					"type": "reference",
					"name": "ODValidJsonType",
					"target": "type",
					"typeArguments": null
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODTicketManager",
		"comment": "## ODTicketManager `class`\nThis is an Open Ticket ticket manager.\n\nThis class manages all currently created tickets in the bot.\n\nAll tickets which are added, removed or modified in this manager will be updated automatically in the database.",
		"constant": false,
		"source": "src/core/api/openticket/ticket.ts:17:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:25:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "client",
							"details": {
								"type": "reference",
								"name": "ODClientManager_Default",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTicketManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/openticket/ticket.ts:31:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "reference",
								"name": "ODTicket",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODTicket",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTicket",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getAllTicketParticipants",
				"comment": "Shortcut for getting all users that are able to view a ticket.",
				"source": "src/core/api/openticket/ticket.ts:90:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Shortcut for getting all users that are able to view a ticket.",
					"parameters": [
						{
							"name": "ticket",
							"details": {
								"type": "reference",
								"name": "ODTicket",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "array",
										"child": {
											"type": "unknown"
										}
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODTicket",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODTicket",
												"target": "class",
												"typeArguments": null
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTicket",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTicket",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getTicketChannel",
				"comment": "Get the discord channel for a specific ticket.",
				"source": "src/core/api/openticket/ticket.ts:40:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the discord channel for a specific ticket.",
					"parameters": [
						{
							"name": "ticket",
							"details": {
								"type": "reference",
								"name": "ODTicket",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "GuildTextBasedChannel",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getTicketMessage",
				"comment": "Get the main ticket message of a ticket channel when found.",
				"source": "src/core/api/openticket/ticket.ts:51:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get the main ticket message of a ticket channel when found.",
					"parameters": [
						{
							"name": "ticket",
							"details": {
								"type": "reference",
								"name": "ODTicket",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Message",
										"typeArguments": [
											{
												"type": "literal",
												"name": "true"
											}
										]
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getTicketUser",
				"comment": "Shortcut for getting a discord.js user within a ticket.",
				"source": "src/core/api/openticket/ticket.ts:63:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Shortcut for getting a discord.js user within a ticket.",
					"parameters": [
						{
							"name": "ticket",
							"details": {
								"type": "reference",
								"name": "ODTicket",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "user",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "\"creator\""
									},
									{
										"type": "literal",
										"name": "\"closer\""
									},
									{
										"type": "literal",
										"name": "\"claimer\""
									},
									{
										"type": "literal",
										"name": "\"pinner\""
									}
								]
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "User",
										"typeArguments": null
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODTicket",
											"target": "class",
											"typeArguments": null
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTicket",
										"target": "class",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODTicket",
								"target": "class",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "useGuild",
				"comment": "Use a specific guild in this class for fetching the channel",
				"source": "src/core/api/openticket/ticket.ts:36:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Use a specific guild in this class for fetching the channel",
					"parameters": [
						{
							"name": "guild",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "external",
										"package": "discord.js",
										"name": "Guild",
										"typeArguments": null
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTicketDataJson",
		"comment": "## ODTicketDataJson `interface`\nThe JSON representatation from a single ticket property.",
		"constant": false,
		"source": "src/core/api/openticket/ticket.ts:131:17",
		"children": [
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this property.",
				"source": "src/core/api/openticket/ticket.ts:133:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The value of this property.",
				"source": "src/core/api/openticket/ticket.ts:135:4",
				"details": {
					"type": "reference",
					"name": "ODValidJsonType",
					"target": "type",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTicketIds",
		"comment": "## ODTicketIds `type`\nThis interface is a list of ids available in the `ODTicket` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/openticket/ticket.ts:156:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:answers",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:185:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "array",
							"child": {
								"type": "unknown"
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-enabled",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:179:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclose-hours",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:180:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:autoclosed",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:181:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-days",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:183:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "number"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:autodelete-enabled",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:182:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:busy",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:157:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:category",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:176:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "null"
								},
								{
									"type": "primitive",
									"name": "string"
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:category-mode",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:177:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "null"
								},
								{
									"type": "literal",
									"name": "\"normal\""
								},
								{
									"type": "literal",
									"name": "\"closed\""
								},
								{
									"type": "literal",
									"name": "\"backup\""
								},
								{
									"type": "literal",
									"name": "\"claimed\""
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:channel-suffix",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:160:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:claimed",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:168:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:claimed-by",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:169:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "null"
								},
								{
									"type": "primitive",
									"name": "string"
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:claimed-on",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:170:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "null"
								},
								{
									"type": "primitive",
									"name": "number"
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:closed",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:165:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:closed-by",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:166:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "null"
								},
								{
									"type": "primitive",
									"name": "string"
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:closed-on",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:167:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "null"
								},
								{
									"type": "primitive",
									"name": "number"
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:for-deletion",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:open",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:162:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:opened-by",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:163:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "null"
								},
								{
									"type": "primitive",
									"name": "string"
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:opened-on",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:164:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "null"
								},
								{
									"type": "primitive",
									"name": "number"
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:participants",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:159:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "array",
							"child": {
								"type": "unknown"
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:pinned",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:171:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "primitive",
							"name": "boolean"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:pinned-by",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:172:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "null"
								},
								{
									"type": "primitive",
									"name": "string"
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:pinned-on",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:173:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "null"
								},
								{
									"type": "primitive",
									"name": "number"
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:ticket-message",
				"comment": null,
				"source": "src/core/api/openticket/ticket.ts:158:4",
				"details": {
					"type": "reference",
					"name": "ODTicketData",
					"target": "class",
					"typeArguments": [
						{
							"type": "union",
							"children": [
								{
									"type": "literal",
									"name": "null"
								},
								{
									"type": "primitive",
									"name": "string"
								}
							]
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTicketJson",
		"comment": "## ODTicketDataJson `interface`\nThe JSON representatation from a single ticket.",
		"constant": false,
		"source": "src/core/api/openticket/ticket.ts:141:17",
		"children": [
			{
				"type": "property",
				"name": "data",
				"comment": "The full list of properties/variables related to this ticket.",
				"source": "src/core/api/openticket/ticket.ts:149:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODTicketDataJson",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this ticket.",
				"source": "src/core/api/openticket/ticket.ts:143:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "option",
				"comment": "The option id related to this ticket.",
				"source": "src/core/api/openticket/ticket.ts:145:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "version",
				"comment": "The version of Open Ticket used to create this ticket.",
				"source": "src/core/api/openticket/ticket.ts:147:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODTicketClearFilter",
		"comment": "## ODTicketClearFilter `type`\nThis type contains all possible \"clear filters\" for the `/clear` command.",
		"constant": false,
		"source": "src/core/api/openticket/ticket.ts:296:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"all\""
					},
					{
						"type": "literal",
						"name": "\"open\""
					},
					{
						"type": "literal",
						"name": "\"closed\""
					},
					{
						"type": "literal",
						"name": "\"claimed\""
					},
					{
						"type": "literal",
						"name": "\"unclaimed\""
					},
					{
						"type": "literal",
						"name": "\"pinned\""
					},
					{
						"type": "literal",
						"name": "\"unpinned\""
					},
					{
						"type": "literal",
						"name": "\"autoclosed\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODTranscriptCollector",
		"comment": "## ODTranscriptCollector `class`\nThis is an Open Ticket transcript collector.\n\nThe only goal of this class is to collect & parse all messages from a ticket channel.\n\nIt also contains utility functions for counting all messages, calculating file sizes & more!",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:162:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:168:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "tickets",
							"details": {
								"type": "reference",
								"name": "ODTicketManager",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "client",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTranscriptCollector",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "calculateFileSize",
				"comment": "Calculate a human-readable file size. Used in transcripts.",
				"source": "src/core/api/openticket/transcript.ts:382:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Calculate a human-readable file size. Used in transcripts.",
					"parameters": [
						{
							"name": "bytes",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "unknown"
					}
				}
			},
			{
				"type": "method",
				"name": "collectAllMessages",
				"comment": "Collect all messages from a given ticket channel. It may not include all messages depending on the ratelimit.",
				"source": "src/core/api/openticket/transcript.ts:174:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Collect all messages from a given ticket channel. It may not include all messages depending on the ratelimit.",
					"parameters": [
						{
							"name": "ticket",
							"details": {
								"type": "reference",
								"name": "ODTicket",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "include",
							"details": {
								"type": "reference",
								"name": "ODTranscriptCollectorIncludeSettings",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "array",
										"child": {
											"type": "external",
											"package": "discord.js",
											"name": "Message",
											"typeArguments": [
												{
													"type": "literal",
													"name": "true"
												}
											]
										}
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "convertMessagesToTranscriptData",
				"comment": "Convert an array of discord messages to an array of `ODTranscriptMessageData`'s. This is used to simplify the process of the transcript compilers.",
				"source": "src/core/api/openticket/transcript.ts:206:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Convert an array of discord messages to an array of `ODTranscriptMessageData`'s. This is used to simplify the process of the transcript compilers.",
					"parameters": [
						{
							"name": "messages",
							"details": {
								"type": "array",
								"child": {
									"type": "external",
									"package": "discord.js",
									"name": "Message",
									"typeArguments": [
										{
											"type": "literal",
											"name": "true"
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "array",
								"child": {
									"type": "reference",
									"name": "ODTranscriptMessageData",
									"target": "interface",
									"typeArguments": null
								}
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "countAllMessages",
				"comment": "Count all messages from a given ticket channel. It may not include all messages depending on the ratelimit.",
				"source": "src/core/api/openticket/transcript.ts:200:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Count all messages from a given ticket channel. It may not include all messages depending on the ratelimit.",
					"parameters": [
						{
							"name": "ticket",
							"details": {
								"type": "reference",
								"name": "ODTicket",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "include",
							"details": {
								"type": "reference",
								"name": "ODTranscriptCollectorIncludeSettings",
								"target": "interface",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "primitive",
										"name": "number"
									}
								]
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODTranscriptCompiler",
		"comment": "## ODTranscriptCompiler `class`\nThis is an Open Ticket transcript compiler.\n\nThis class manages all functions to generate a transcript.\n\nThese functions should be defined when creating this compiler. Existing compilers already exist for html & text transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:101:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:109:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "init",
							"details": {
								"type": "reference",
								"name": "ODTranscriptCompilerInitFunction",
								"target": "type",
								"typeArguments": null
							}
						},
						{
							"name": "compile",
							"details": {
								"type": "reference",
								"name": "ODTranscriptCompilerCompileFunction",
								"target": "type",
								"typeArguments": [
									{
										"type": "typeParam",
										"name": "Data",
										"typeArguments": null
									}
								]
							}
						},
						{
							"name": "ready",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "reference",
										"name": "ODTranscriptCompilerReadyFunction",
										"target": "type",
										"typeArguments": [
											{
												"type": "typeParam",
												"name": "Data",
												"typeArguments": null
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTranscriptCompiler",
						"target": "class",
						"typeArguments": [
							{
								"type": "typeParam",
								"name": "Data",
								"typeArguments": null
							}
						]
					}
				}
			},
			{
				"type": "property",
				"name": "compile",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:105:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODTranscriptCompilerCompileFunction",
							"target": "type",
							"typeArguments": [
								{
									"type": "typeParam",
									"name": "Data",
									"typeArguments": null
								}
							]
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this data.",
				"source": "src/core/api/modules/base.ts:174:4",
				"details": {
					"type": "reference",
					"name": "ODId",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "init",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:103:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODTranscriptCompilerInitFunction",
							"target": "type",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "ready",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:107:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODTranscriptCompilerReadyFunction",
							"target": "type",
							"typeArguments": [
								{
									"type": "typeParam",
									"name": "Data",
									"typeArguments": null
								}
							]
						}
					]
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": [
			{
				"name": "Data",
				"type": {
					"type": "primitive",
					"name": "object"
				}
			}
		]
	},
	{
		"type": "class",
		"name": "ODTranscriptManager",
		"comment": "## ODTranscriptManager `class`\nThis is an Open Ticket transcript manager.\n\nThis class manages all transcript generators in the bot.\n\nThe 2 default built-in transcript generators are: `openticket:html-compiler` & `openticket:text-compiler`.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:18:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:24:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "tickets",
							"details": {
								"type": "reference",
								"name": "ODTicketManager",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "client",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTranscriptManager",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "collector",
				"comment": "The manager responsible for collecting all messages in a channel.",
				"source": "src/core/api/openticket/transcript.ts:20:4",
				"details": {
					"type": "reference",
					"name": "ODTranscriptCollector",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODTranscriptCompiler",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "any"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODTranscriptCompiler",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/modules/base.ts:347:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/modules/base.ts:299:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODTranscriptCompiler",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTranscriptCompiler",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODTranscriptCompiler",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODTranscriptCompiler",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTranscriptCompiler",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTranscriptCompiler",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODTranscriptCompiler",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTranscriptCompiler",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTranscriptCompiler",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTranscriptCompiler",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/modules/base.ts:313:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODTranscriptCompiler",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODTranscriptManager_Default",
		"comment": "## ODTranscriptManager_Default `default_class`\nThis is a special class that adds type definitions & typescript to the ODTranscriptManager class.\nIt doesn't add any extra features!\n\nThis default class is made for the global variable `openticket.transcripts`!",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:132:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:24:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "tickets",
							"details": {
								"type": "reference",
								"name": "ODTicketManager",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "client",
							"details": {
								"type": "reference",
								"name": "ODClientManager",
								"target": "class",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODTranscriptManager_Default",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "collector",
				"comment": "The manager responsible for collecting all messages in a channel.",
				"source": "src/core/api/openticket/transcript.ts:20:4",
				"details": {
					"type": "reference",
					"name": "ODTranscriptCollector",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "redirects",
				"comment": "Handle all redirects in this `ODManager`",
				"source": "src/core/api/modules/base.ts:215:4",
				"details": {
					"type": "reference",
					"name": "ODManagerRedirectHelper",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "_change",
				"comment": null,
				"source": "src/core/api/modules/base.ts:110:14",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": null,
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "add",
				"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
				"source": "src/core/api/modules/base.ts:224:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Add data to the manager. The id will be fetched from the data class! You can optionally select to overwrite existing data!",
					"parameters": [
						{
							"name": "data",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "reference",
										"name": "ODTranscriptCompiler",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "any"
											}
										]
									},
									{
										"type": "array",
										"child": {
											"type": "reference",
											"name": "ODTranscriptCompiler",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "overwrite",
							"details": {
								"type": "primitive",
								"name": "boolean"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "changed",
				"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
				"source": "src/core/api/modules/base.ts:121:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "**(❌ SYSTEM ONLY!!)** Set the callback executed when a value inside this class changes.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "union",
								"children": [
									{
										"type": "literal",
										"name": "null"
									},
									{
										"type": "function",
										"inherited": false,
										"comment": null,
										"parameters": [],
										"returns": {
											"type": "primitive",
											"name": "void"
										}
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "exists",
				"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
				"source": "src/core/api/openticket/transcript.ts:147:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Check if data that matches the `ODId` exists. Returns a boolean.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "keyof",
								"child": {
									"type": "reference",
									"name": "ODTranscriptCompilerIds",
									"target": "interface",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "get",
				"comment": "Get data that matches the `ODId`. Returns the found data.",
				"source": "src/core/api/openticket/transcript.ts:133:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Get data that matches the `ODId`. Returns the found data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODTranscriptCompiler",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "getAll",
				"comment": "Get all data inside this manager",
				"source": "src/core/api/modules/base.ts:361:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTranscriptCompiler",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getFiltered",
				"comment": "Get all data that matches inside the filter function",
				"source": "src/core/api/modules/base.ts:365:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches inside the filter function",
					"parameters": [
						{
							"name": "predicate",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "reference",
											"name": "ODTranscriptCompiler",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "index",
										"details": {
											"type": "primitive",
											"name": "number"
										}
									},
									{
										"name": "array",
										"details": {
											"type": "array",
											"child": {
												"type": "reference",
												"name": "ODTranscriptCompiler",
												"target": "class",
												"typeArguments": [
													{
														"type": "primitive",
														"name": "any"
													}
												]
											}
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "unknown"
								}
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTranscriptCompiler",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getIds",
				"comment": "Get a list of all the ids inside this manager",
				"source": "src/core/api/modules/base.ts:377:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get a list of all the ids inside this manager",
					"parameters": [],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODId",
							"target": "class",
							"typeArguments": null
						}
					}
				}
			},
			{
				"type": "method",
				"name": "getLength",
				"comment": "Get the length of the data inside this manager",
				"source": "src/core/api/modules/base.ts:373:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get the length of the data inside this manager",
					"parameters": [],
					"returns": {
						"type": "primitive",
						"name": "number"
					}
				}
			},
			{
				"type": "method",
				"name": "getRegex",
				"comment": "Get all data that matches the regex",
				"source": "src/core/api/modules/base.ts:369:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Get all data that matches the regex",
					"parameters": [
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "array",
						"child": {
							"type": "reference",
							"name": "ODTranscriptCompiler",
							"target": "class",
							"typeArguments": [
								{
									"type": "primitive",
									"name": "any"
								}
							]
						}
					}
				}
			},
			{
				"type": "method",
				"name": "loopAll",
				"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
				"source": "src/core/api/modules/base.ts:381:10",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Run an iterator over all data in this manager. This method also supports async-await behaviour!",
					"parameters": [
						{
							"name": "cb",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "data",
										"details": {
											"type": "reference",
											"name": "ODTranscriptCompiler",
											"target": "class",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "any"
												}
											]
										}
									},
									{
										"name": "id",
										"details": {
											"type": "reference",
											"name": "ODId",
											"target": "class",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "reference",
									"name": "ODPromiseVoid",
									"target": "type",
									"typeArguments": null
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "onAdd",
				"comment": "Listen for when data is added to this manager.",
				"source": "src/core/api/modules/base.ts:392:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is added to this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerAddCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTranscriptCompiler",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onChange",
				"comment": "Listen for when data is changed in this manager.",
				"source": "src/core/api/modules/base.ts:396:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is changed in this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTranscriptCompiler",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "onRemove",
				"comment": "Listen for when data is removed from this manager.",
				"source": "src/core/api/modules/base.ts:400:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Listen for when data is removed from this manager.",
					"parameters": [
						{
							"name": "callback",
							"details": {
								"type": "reference",
								"name": "ODManagerCallback",
								"target": "type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ODTranscriptCompiler",
										"target": "class",
										"typeArguments": [
											{
												"type": "primitive",
												"name": "any"
											}
										]
									}
								]
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "remove",
				"comment": "Remove data that matches the `ODId`. Returns the removed data.",
				"source": "src/core/api/openticket/transcript.ts:140:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Remove data that matches the `ODId`. Returns the removed data.",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "reference",
								"name": "ODValidId",
								"target": "type",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "union",
						"children": [
							{
								"type": "literal",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "ODTranscriptCompiler",
								"target": "class",
								"typeArguments": [
									{
										"type": "primitive",
										"name": "any"
									}
								]
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "useDebug",
				"comment": "Use the Open Ticket debugger in this manager for logs",
				"source": "src/core/api/modules/base.ts:387:4",
				"details": {
					"type": "function",
					"inherited": true,
					"comment": "Use the Open Ticket debugger in this manager for logs",
					"parameters": [
						{
							"name": "debug",
							"details": {
								"type": "reference",
								"name": "ODDebugger",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "debugname",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptButtonComponentData",
		"comment": "## ODTranscriptButtonComponentData `interface`\nA universal representatation of a discord message button for transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:588:17",
		"children": [
			{
				"type": "property",
				"name": "color",
				"comment": "The color of this button.",
				"source": "src/core/api/openticket/transcript.ts:596:4",
				"details": {
					"type": "reference",
					"name": "ODValidButtonColor",
					"target": "type",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "disabled",
				"comment": "Is this component disabled?",
				"source": "src/core/api/openticket/transcript.ts:580:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "emoji",
				"comment": "The emoji of this button.",
				"source": "src/core/api/openticket/transcript.ts:594:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODTranscriptEmojiData",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The custom id of this component.",
				"source": "src/core/api/openticket/transcript.ts:578:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "label",
				"comment": "The label of this button.",
				"source": "src/core/api/openticket/transcript.ts:592:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "mode",
				"comment": "Is this button a url or button?",
				"source": "src/core/api/openticket/transcript.ts:598:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"button\""
						},
						{
							"type": "literal",
							"name": "\"url\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this component.",
				"source": "src/core/api/openticket/transcript.ts:590:4",
				"details": {
					"type": "literal",
					"name": "\"button\""
				}
			},
			{
				"type": "property",
				"name": "url",
				"comment": "The url of this button.",
				"source": "src/core/api/openticket/transcript.ts:600:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptCollectorIncludeSettings",
		"comment": "## ODTranscriptCollectorIncludeSettings `interface`\nAdditional settings for the `ODTranscriptCollector`",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:441:17",
		"children": [
			{
				"type": "property",
				"name": "bots",
				"comment": "Collect messages from bots & system users.",
				"source": "src/core/api/openticket/transcript.ts:445:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "client",
				"comment": "Collect messages from this bot.",
				"source": "src/core/api/openticket/transcript.ts:447:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "users",
				"comment": "Collect messages from normal discord users.",
				"source": "src/core/api/openticket/transcript.ts:443:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptCompilerCompileResult",
		"comment": "## ODTranscriptCompilerCompileResult `interface`\nThis is the result which is returned by the `compile()` function.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:61:17",
		"children": [
			{
				"type": "property",
				"name": "channel",
				"comment": "The channel this transcript is being created for.",
				"source": "src/core/api/openticket/transcript.ts:65:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "TextChannel",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "data",
				"comment": "The result returned by the `compiler()` function. Contains the transcript contents, url or something else.",
				"source": "src/core/api/openticket/transcript.ts:75:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "typeParam",
							"name": "Data",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "errorReason",
				"comment": "When not successfull, what was the reason? This will also be shown to the user.",
				"source": "src/core/api/openticket/transcript.ts:71:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "messages",
				"comment": "A list of all messages sent in the ticket channel.",
				"source": "src/core/api/openticket/transcript.ts:73:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "array",
							"child": {
								"type": "reference",
								"name": "ODTranscriptMessageData",
								"target": "interface",
								"typeArguments": null
							}
						}
					]
				}
			},
			{
				"type": "property",
				"name": "success",
				"comment": "Was the compilation successfull?",
				"source": "src/core/api/openticket/transcript.ts:69:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "ticket",
				"comment": "The ticket this transcript is being created for.",
				"source": "src/core/api/openticket/transcript.ts:63:4",
				"details": {
					"type": "reference",
					"name": "ODTicket",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "user",
				"comment": "The user who created the transcript.",
				"source": "src/core/api/openticket/transcript.ts:67:4",
				"details": {
					"type": "external",
					"package": "discord.js",
					"name": "User",
					"typeArguments": null
				}
			}
		],
		"typeParams": [
			{
				"name": "Data",
				"type": {
					"type": "primitive",
					"name": "object"
				}
			}
		]
	},
	{
		"type": "interface",
		"name": "ODTranscriptCompilerIds",
		"comment": "## ODTranscriptCompilerIds `type`\nThis interface is a list of ids available in the `ODTranscriptCompiler` class.\nIt's used to generate typescript declarations for this class.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:121:17",
		"children": [
			{
				"type": "property",
				"name": "openticket:html-compiler",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:122:4",
				"details": {
					"type": "reference",
					"name": "ODTranscriptCompiler",
					"target": "class",
					"typeArguments": [
						{
							"type": "unknown"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "openticket:text-compiler",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:123:4",
				"details": {
					"type": "reference",
					"name": "ODTranscriptCompiler",
					"target": "class",
					"typeArguments": [
						{
							"type": "unknown"
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptCompilerInitResult",
		"comment": "## ODTranscriptCompilerInitResult `interface`\nThis is the result which is returned by the `init()` function.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:49:17",
		"children": [
			{
				"type": "property",
				"name": "errorReason",
				"comment": "When not successfull, what was the reason? This will also be shown to the user.",
				"source": "src/core/api/openticket/transcript.ts:53:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "pendingMessage",
				"comment": "An optional message which will be sent while the transcript is being generated.",
				"source": "src/core/api/openticket/transcript.ts:55:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODMessageBuildResult",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "success",
				"comment": "Was the initialization successfull?",
				"source": "src/core/api/openticket/transcript.ts:51:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptCompilerReadyResult",
		"comment": "## ODTranscriptCompilerReadyResult `interface`\nThis is the result which is returned by the `ready()` function.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:81:17",
		"children": [
			{
				"type": "property",
				"name": "activeAdminDmMessage",
				"comment": "The message to be sent to the DM of all admins who actively participated in the ticket.",
				"source": "src/core/api/openticket/transcript.ts:89:4",
				"details": {
					"type": "reference",
					"name": "ODMessageBuildResult",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "channelMessage",
				"comment": "The message to be sent in the specified channel in the server.",
				"source": "src/core/api/openticket/transcript.ts:83:4",
				"details": {
					"type": "reference",
					"name": "ODMessageBuildResult",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "creatorDmMessage",
				"comment": "The message to be sent to the DM of the ticket creator.",
				"source": "src/core/api/openticket/transcript.ts:85:4",
				"details": {
					"type": "reference",
					"name": "ODMessageBuildResult",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "everyAdminDmMessage",
				"comment": "The message to be sent to the DM of all admins who were assigned to this ticket.",
				"source": "src/core/api/openticket/transcript.ts:91:4",
				"details": {
					"type": "reference",
					"name": "ODMessageBuildResult",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "participantDmMessage",
				"comment": "The message to be sent to the DM of all participants.",
				"source": "src/core/api/openticket/transcript.ts:87:4",
				"details": {
					"type": "reference",
					"name": "ODMessageBuildResult",
					"target": "interface",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptComponentData",
		"comment": "## ODTranscriptComponentData `interface`\nA universal representatation of a discord message action row component for transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:576:17",
		"children": [
			{
				"type": "property",
				"name": "disabled",
				"comment": "Is this component disabled?",
				"source": "src/core/api/openticket/transcript.ts:580:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The custom id of this component.",
				"source": "src/core/api/openticket/transcript.ts:578:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this component.",
				"source": "src/core/api/openticket/transcript.ts:582:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"button\""
						},
						{
							"type": "literal",
							"name": "\"dropdown\""
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptComponentRowData",
		"comment": "## ODTranscriptComponentRowData `interface`\nA universal representatation of a discord message action row for transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:568:17",
		"children": [
			{
				"type": "property",
				"name": "components",
				"comment": "All components (buttons & dropdowns) present in this action row.",
				"source": "src/core/api/openticket/transcript.ts:570:4",
				"details": {
					"type": "array",
					"child": {
						"type": "union",
						"children": [
							{
								"type": "reference",
								"name": "ODTranscriptButtonComponentData",
								"target": "interface",
								"typeArguments": null
							},
							{
								"type": "reference",
								"name": "ODTranscriptDropdownComponentData",
								"target": "interface",
								"typeArguments": null
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptDropdownComponentData",
		"comment": "## ODTranscriptDropdownComponentData `interface`\nA universal representatation of a discord message dropdown for transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:606:17",
		"children": [
			{
				"type": "property",
				"name": "disabled",
				"comment": "Is this component disabled?",
				"source": "src/core/api/openticket/transcript.ts:580:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The custom id of this component.",
				"source": "src/core/api/openticket/transcript.ts:578:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "options",
				"comment": "All options available in this dropdown.",
				"source": "src/core/api/openticket/transcript.ts:612:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODTranscriptDropdownComponentOptionData",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "placeholder",
				"comment": "The placeholder in this dropdown.",
				"source": "src/core/api/openticket/transcript.ts:610:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of this component.",
				"source": "src/core/api/openticket/transcript.ts:608:4",
				"details": {
					"type": "literal",
					"name": "\"dropdown\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptDropdownComponentOptionData",
		"comment": "## ODTranscriptDropdownComponentOptionData `interface`\nA universal representatation of a discord message dropdown option for transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:618:17",
		"children": [
			{
				"type": "property",
				"name": "description",
				"comment": "The description of this dropdown option.",
				"source": "src/core/api/openticket/transcript.ts:624:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "emoji",
				"comment": "The emoji of this dropdown option.",
				"source": "src/core/api/openticket/transcript.ts:626:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODTranscriptEmojiData",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The custom id of this dropdown option.",
				"source": "src/core/api/openticket/transcript.ts:620:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "label",
				"comment": "The label of this dropdown option.",
				"source": "src/core/api/openticket/transcript.ts:622:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptEmbedData",
		"comment": "## ODTranscriptEmbedData `interface`\nA universal representatation of a discord embed for transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:508:17",
		"children": [
			{
				"type": "property",
				"name": "authorimg",
				"comment": "The author image of this embed.",
				"source": "src/core/api/openticket/transcript.ts:514:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "authortext",
				"comment": "The author text of this embed.",
				"source": "src/core/api/openticket/transcript.ts:516:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "color",
				"comment": "The color of this embed (hex color).",
				"source": "src/core/api/openticket/transcript.ts:522:4",
				"details": {
					"type": "template",
					"head": "#",
					"tails": [
						{
							"element": {
								"type": "primitive",
								"name": "string"
							},
							"text": ""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "description",
				"comment": "The description of this embed.",
				"source": "src/core/api/openticket/transcript.ts:512:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "fields",
				"comment": "All fields available in this embed.",
				"source": "src/core/api/openticket/transcript.ts:530:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODTranscriptEmbedFieldData",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "footerimg",
				"comment": "The footer image of this embed.",
				"source": "src/core/api/openticket/transcript.ts:518:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "footertext",
				"comment": "The footer text of this embed.",
				"source": "src/core/api/openticket/transcript.ts:520:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "image",
				"comment": "The image of this embed.",
				"source": "src/core/api/openticket/transcript.ts:524:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "thumbnail",
				"comment": "The thumbnail of this embed.",
				"source": "src/core/api/openticket/transcript.ts:526:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "title",
				"comment": "The title of this embed.",
				"source": "src/core/api/openticket/transcript.ts:510:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "url",
				"comment": "The url in the title of this embed.",
				"source": "src/core/api/openticket/transcript.ts:528:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptEmbedFieldData",
		"comment": "## ODTranscriptEmbedFieldData `interface`\nA universal representatation of a discord embed field for transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:536:17",
		"children": [
			{
				"type": "property",
				"name": "inline",
				"comment": "Is this field rendered inline?",
				"source": "src/core/api/openticket/transcript.ts:542:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this embed field.",
				"source": "src/core/api/openticket/transcript.ts:538:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "value",
				"comment": "The value or contents of this embed field.",
				"source": "src/core/api/openticket/transcript.ts:540:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptEmojiData",
		"comment": "## ODTranscriptEmojiData `interface`\nA universal representatation of a discord emoji for transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:670:17",
		"children": [
			{
				"type": "property",
				"name": "animated",
				"comment": "Is this emoji animated?",
				"source": "src/core/api/openticket/transcript.ts:676:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "custom",
				"comment": "Is this a custom emoji (img/gif)?",
				"source": "src/core/api/openticket/transcript.ts:678:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "emoji",
				"comment": "The url or emoji.",
				"source": "src/core/api/openticket/transcript.ts:680:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this emoji.",
				"source": "src/core/api/openticket/transcript.ts:672:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this emoji.",
				"source": "src/core/api/openticket/transcript.ts:674:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptFileData",
		"comment": "## ODTranscriptFileData `interface`\nA universal representatation of a discord message attachment for transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:548:17",
		"children": [
			{
				"type": "property",
				"name": "alt",
				"comment": "The alternative text for this file.",
				"source": "src/core/api/openticket/transcript.ts:562:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this file.",
				"source": "src/core/api/openticket/transcript.ts:556:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "size",
				"comment": "The size of this file.",
				"source": "src/core/api/openticket/transcript.ts:552:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "spoiler",
				"comment": "Is this file a spoiler?",
				"source": "src/core/api/openticket/transcript.ts:560:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The file type or extension.",
				"source": "src/core/api/openticket/transcript.ts:550:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "unit",
				"comment": "The unit used for the size of this file.",
				"source": "src/core/api/openticket/transcript.ts:554:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"B\""
						},
						{
							"type": "literal",
							"name": "\"KB\""
						},
						{
							"type": "literal",
							"name": "\"MB\""
						},
						{
							"type": "literal",
							"name": "\"GB\""
						},
						{
							"type": "literal",
							"name": "\"TB\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "url",
				"comment": "The url of this file.",
				"source": "src/core/api/openticket/transcript.ts:558:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptHtmlV2Data",
		"comment": "## ODTranscriptHtmlV2Data `interface`\nThe structure of the data sent to the Open Ticket HTML Transcripts v2 API.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:696:17",
		"children": [
			{
				"type": "property",
				"name": "bot",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:725:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "language",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:699:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "messages",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:772:4",
				"details": {
					"type": "array",
					"child": {
						"type": "unknown"
					}
				}
			},
			{
				"type": "property",
				"name": "otversion",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:698:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "premium",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:884:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "style",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:700:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "ticket",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:730:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "version",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:697:4",
				"details": {
					"type": "literal",
					"name": "\"2\""
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptHtmlV2Response",
		"comment": "## ODTranscriptHtmlV2Response `interface`\nThe structure of the response received from the Open Ticket HTML Transcripts v2 API.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:913:17",
		"children": [
			{
				"type": "property",
				"name": "estimated",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:917:4",
				"details": {
					"type": "unknown"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:915:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "status",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:914:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"error\""
						},
						{
							"type": "literal",
							"name": "\"success\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "time",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:916:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "transcriptstatus",
				"comment": null,
				"source": "src/core/api/openticket/transcript.ts:922:4",
				"details": {
					"type": "unknown"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptInteractionReplyData",
		"comment": "## ODTranscriptReplyData `interface`\nA universal representatation of a discord interaction reply for transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:640:17",
		"children": [
			{
				"type": "property",
				"name": "name",
				"comment": "The name of the slash command used.",
				"source": "src/core/api/openticket/transcript.ts:646:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of reply.",
				"source": "src/core/api/openticket/transcript.ts:642:4",
				"details": {
					"type": "literal",
					"name": "\"interaction\""
				}
			},
			{
				"type": "property",
				"name": "user",
				"comment": "The bot used for this interaction.",
				"source": "src/core/api/openticket/transcript.ts:644:4",
				"details": {
					"type": "reference",
					"name": "ODTranscriptUserData",
					"target": "interface",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptMessageData",
		"comment": "## ODTranscriptMessageData `interface`\nA universal representatation of a discord message for transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:453:17",
		"children": [
			{
				"type": "property",
				"name": "author",
				"comment": "The message author.",
				"source": "src/core/api/openticket/transcript.ts:455:4",
				"details": {
					"type": "reference",
					"name": "ODTranscriptUserData",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "channel",
				"comment": "The channel this message originated from.",
				"source": "src/core/api/openticket/transcript.ts:459:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "components",
				"comment": "The components (buttons & dropdowns) of this message.",
				"source": "src/core/api/openticket/transcript.ts:475:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODTranscriptComponentRowData",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "content",
				"comment": "The contents of this message.",
				"source": "src/core/api/openticket/transcript.ts:469:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "edited",
				"comment": "Is this message edited?",
				"source": "src/core/api/openticket/transcript.ts:463:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "embeds",
				"comment": "The embeds of this message.",
				"source": "src/core/api/openticket/transcript.ts:471:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODTranscriptEmbedData",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "files",
				"comment": "The files of this message.",
				"source": "src/core/api/openticket/transcript.ts:473:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODTranscriptFileData",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "guild",
				"comment": "The server this message originated from.",
				"source": "src/core/api/openticket/transcript.ts:457:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this message.",
				"source": "src/core/api/openticket/transcript.ts:461:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "reactions",
				"comment": "All reactions of htis message.",
				"source": "src/core/api/openticket/transcript.ts:479:4",
				"details": {
					"type": "array",
					"child": {
						"type": "reference",
						"name": "ODTranscriptReactionData",
						"target": "interface",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "reply",
				"comment": "When this message is a reply to something, the data will be here.",
				"source": "src/core/api/openticket/transcript.ts:477:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "reference",
							"name": "ODTranscriptMessageReplyData",
							"target": "interface",
							"typeArguments": null
						},
						{
							"type": "reference",
							"name": "ODTranscriptInteractionReplyData",
							"target": "interface",
							"typeArguments": null
						}
					]
				}
			},
			{
				"type": "property",
				"name": "timestamp",
				"comment": "The unix timestamp of the creation of this message.",
				"source": "src/core/api/openticket/transcript.ts:465:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of message.",
				"source": "src/core/api/openticket/transcript.ts:467:4",
				"details": {
					"type": "reference",
					"name": "ODTranscriptMessageType",
					"target": "type",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptMessageReplyData",
		"comment": "## ODTranscriptReplyData `interface`\nA universal representatation of a discord message reply for transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:652:17",
		"children": [
			{
				"type": "property",
				"name": "channel",
				"comment": "The channel this message originated from.",
				"source": "src/core/api/openticket/transcript.ts:658:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "content",
				"comment": "The content of this message.",
				"source": "src/core/api/openticket/transcript.ts:664:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "guild",
				"comment": "The server this message originated from.",
				"source": "src/core/api/openticket/transcript.ts:656:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this message.",
				"source": "src/core/api/openticket/transcript.ts:660:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "type",
				"comment": "The type of reply.",
				"source": "src/core/api/openticket/transcript.ts:654:4",
				"details": {
					"type": "literal",
					"name": "\"message\""
				}
			},
			{
				"type": "property",
				"name": "user",
				"comment": "The author of this message.",
				"source": "src/core/api/openticket/transcript.ts:662:4",
				"details": {
					"type": "reference",
					"name": "ODTranscriptUserData",
					"target": "interface",
					"typeArguments": null
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptReactionData",
		"comment": "## ODTranscriptReactionData `interface`\nA universal representatation of a discord message reaction for transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:686:17",
		"children": [
			{
				"type": "property",
				"name": "amount",
				"comment": "The amount of emojis for this reaction.",
				"source": "src/core/api/openticket/transcript.ts:688:4",
				"details": {
					"type": "primitive",
					"name": "number"
				}
			},
			{
				"type": "property",
				"name": "animated",
				"comment": "Is this emoji animated?",
				"source": "src/core/api/openticket/transcript.ts:676:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "custom",
				"comment": "Is this a custom emoji (img/gif)?",
				"source": "src/core/api/openticket/transcript.ts:678:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "emoji",
				"comment": "The url or emoji.",
				"source": "src/core/api/openticket/transcript.ts:680:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this emoji.",
				"source": "src/core/api/openticket/transcript.ts:672:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "name",
				"comment": "The name of this emoji.",
				"source": "src/core/api/openticket/transcript.ts:674:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "primitive",
							"name": "string"
						}
					]
				}
			},
			{
				"type": "property",
				"name": "super",
				"comment": "Is this a super (nitro) reaction?",
				"source": "src/core/api/openticket/transcript.ts:690:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptReplyData",
		"comment": "## ODTranscriptReplyData `interface`\nA universal representatation of a discord reply/interaction for transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:632:17",
		"children": [
			{
				"type": "property",
				"name": "type",
				"comment": "The type of reply.",
				"source": "src/core/api/openticket/transcript.ts:634:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "\"message\""
						},
						{
							"type": "literal",
							"name": "\"interaction\""
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODTranscriptUserData",
		"comment": "## ODTranscriptUserData `interface`\nA universal representatation of a discord user for transcripts.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:490:17",
		"children": [
			{
				"type": "property",
				"name": "color",
				"comment": "When in a server, this is the color of the highest role.",
				"source": "src/core/api/openticket/transcript.ts:502:4",
				"details": {
					"type": "template",
					"head": "#",
					"tails": [
						{
							"element": {
								"type": "primitive",
								"name": "string"
							},
							"text": ""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "displayname",
				"comment": "The display name of this user.",
				"source": "src/core/api/openticket/transcript.ts:496:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "id",
				"comment": "The id of this user.",
				"source": "src/core/api/openticket/transcript.ts:492:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "pfp",
				"comment": "The profile picture url of this user.",
				"source": "src/core/api/openticket/transcript.ts:498:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			},
			{
				"type": "property",
				"name": "tag",
				"comment": "The additional tag of this user.",
				"source": "src/core/api/openticket/transcript.ts:500:4",
				"details": {
					"type": "union",
					"children": [
						{
							"type": "literal",
							"name": "null"
						},
						{
							"type": "literal",
							"name": "\"system\""
						},
						{
							"type": "literal",
							"name": "\"app\""
						},
						{
							"type": "literal",
							"name": "\"verified\""
						}
					]
				}
			},
			{
				"type": "property",
				"name": "username",
				"comment": "The username of this user.",
				"source": "src/core/api/openticket/transcript.ts:494:4",
				"details": {
					"type": "primitive",
					"name": "string"
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODTranscriptCompilerCompileFunction",
		"comment": "## ODTranscriptCompilerCompileFunction `type`\nThis function will generate/compile the transcript itself.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:39:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "ticket",
						"details": {
							"type": "reference",
							"name": "ODTicket",
							"target": "class",
							"typeArguments": null
						}
					},
					{
						"name": "channel",
						"details": {
							"type": "external",
							"package": "discord.js",
							"name": "discord.TextChannel",
							"typeArguments": null
						}
					},
					{
						"name": "user",
						"details": {
							"type": "external",
							"package": "discord.js",
							"name": "discord.User",
							"typeArguments": null
						}
					}
				],
				"returns": {
					"type": "union",
					"children": [
						{
							"type": "reference",
							"name": "ODTranscriptCompilerCompileResult",
							"target": "interface",
							"typeArguments": [
								{
									"type": "typeParam",
									"name": "Data",
									"typeArguments": null
								}
							]
						},
						{
							"type": "internal",
							"name": "Promise",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODTranscriptCompilerCompileResult",
									"target": "interface",
									"typeArguments": [
										{
											"type": "typeParam",
											"name": "Data",
											"typeArguments": null
										}
									]
								}
							]
						}
					]
				}
			}
		],
		"typeParams": [
			{
				"name": "Data",
				"type": {
					"type": "primitive",
					"name": "object"
				}
			}
		]
	},
	{
		"type": "type",
		"name": "ODTranscriptCompilerInitFunction",
		"comment": "## ODTranscriptCompilerInitFunction `type`\nThis function will initiate/prepare the transcript system for an incoming transcript.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:34:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "ticket",
						"details": {
							"type": "reference",
							"name": "ODTicket",
							"target": "class",
							"typeArguments": null
						}
					},
					{
						"name": "channel",
						"details": {
							"type": "external",
							"package": "discord.js",
							"name": "discord.TextChannel",
							"typeArguments": null
						}
					},
					{
						"name": "user",
						"details": {
							"type": "external",
							"package": "discord.js",
							"name": "discord.User",
							"typeArguments": null
						}
					}
				],
				"returns": {
					"type": "union",
					"children": [
						{
							"type": "reference",
							"name": "ODTranscriptCompilerInitResult",
							"target": "interface",
							"typeArguments": null
						},
						{
							"type": "internal",
							"name": "Promise",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODTranscriptCompilerInitResult",
									"target": "interface",
									"typeArguments": null
								}
							]
						}
					]
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "type",
		"name": "ODTranscriptCompilerReadyFunction",
		"comment": "## ODTicketClearFilter `type`\nThis function will finish, clear-up & shut-down the transcript system. This will also initiate the sending of the messages to all recipients.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:44:12",
		"children": [
			{
				"type": "function",
				"inherited": false,
				"comment": null,
				"parameters": [
					{
						"name": "result",
						"details": {
							"type": "reference",
							"name": "ODTranscriptCompilerCompileResult",
							"target": "interface",
							"typeArguments": [
								{
									"type": "typeParam",
									"name": "Data",
									"typeArguments": null
								}
							]
						}
					}
				],
				"returns": {
					"type": "union",
					"children": [
						{
							"type": "reference",
							"name": "ODTranscriptCompilerReadyResult",
							"target": "interface",
							"typeArguments": null
						},
						{
							"type": "internal",
							"name": "Promise",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ODTranscriptCompilerReadyResult",
									"target": "interface",
									"typeArguments": null
								}
							]
						}
					]
				}
			}
		],
		"typeParams": [
			{
				"name": "Data",
				"type": {
					"type": "primitive",
					"name": "object"
				}
			}
		]
	},
	{
		"type": "type",
		"name": "ODTranscriptMessageType",
		"comment": "## ODTranscriptMessageType `type`\nA message type for the `ODTranscriptMessageData` interface.",
		"constant": false,
		"source": "src/core/api/openticket/transcript.ts:485:12",
		"children": [
			{
				"type": "union",
				"children": [
					{
						"type": "literal",
						"name": "\"default\""
					},
					{
						"type": "literal",
						"name": "\"important\""
					},
					{
						"type": "literal",
						"name": "\"ephemeral\""
					},
					{
						"type": "literal",
						"name": "\"pinned.message\""
					},
					{
						"type": "literal",
						"name": "\"welcome.message\""
					},
					{
						"type": "literal",
						"name": "\"boost.message\""
					},
					{
						"type": "literal",
						"name": "\"thread.message\""
					}
				]
			}
		],
		"typeParams": null
	},
	{
		"type": "class",
		"name": "ODVersionMigration",
		"comment": "## ODVersionMigration `utility class`\nThis class is used to manage data migration between Open Ticket versions.\n\nIt shouldn't be used by plugins because this is an internal API feature!",
		"constant": false,
		"source": "src/core/startup/init.ts:123:13",
		"children": [
			{
				"type": "constructor",
				"name": "constructor",
				"comment": null,
				"source": "src/core/startup/init.ts:129:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "version",
							"details": {
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "func",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [],
								"returns": {
									"type": "union",
									"children": [
										{
											"type": "primitive",
											"name": "void"
										},
										{
											"type": "internal",
											"name": "Promise",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "void"
												}
											]
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODVersionMigration",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "version",
				"comment": "The version to migrate data to",
				"source": "src/core/startup/init.ts:125:4",
				"details": {
					"type": "reference",
					"name": "ODVersion",
					"target": "class",
					"typeArguments": null
				}
			},
			{
				"type": "method",
				"name": "migrate",
				"comment": "Run this version migration as a plugin. Returns `false` when someting goes wrong.",
				"source": "src/core/startup/init.ts:134:10",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "Run this version migration as a plugin. Returns `false` when someting goes wrong.",
					"parameters": [],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "boolean"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "interface",
		"name": "ODUtilities",
		"comment": null,
		"constant": false,
		"source": "src/core/startup/init.ts:64:17",
		"children": [
			{
				"type": "property",
				"name": "easterEggs",
				"comment": "## easterEggs `utility object`\nObject containing data for Open Ticket easter eggs.",
				"source": "src/core/startup/init.ts:109:4",
				"details": {
					"type": "reference",
					"name": "ODEasterEggs",
					"target": "interface",
					"typeArguments": null
				}
			},
			{
				"type": "property",
				"name": "isBeta",
				"comment": "## isBeta `utility variable`\nCheck if you're running a beta version of Open Ticket.",
				"source": "src/core/startup/init.ts:74:4",
				"details": {
					"type": "primitive",
					"name": "boolean"
				}
			},
			{
				"type": "property",
				"name": "ODVersionMigration",
				"comment": "## ODVersionMigration `utility class`\nThis class is used to manage data migration between Open Ticket versions.\n\nIt shouldn't be used by plugins because this is an internal API feature!",
				"source": "src/core/startup/init.ts:115:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": null,
					"parameters": [
						{
							"name": "version",
							"details": {
								"type": "reference",
								"name": "ODVersion",
								"target": "class",
								"typeArguments": null
							}
						},
						{
							"name": "func",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [],
								"returns": {
									"type": "union",
									"children": [
										{
											"type": "primitive",
											"name": "void"
										},
										{
											"type": "internal",
											"name": "Promise",
											"typeArguments": [
												{
													"type": "primitive",
													"name": "void"
												}
											]
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "reference",
						"name": "ODVersionMigration",
						"target": "class",
						"typeArguments": null
					}
				}
			},
			{
				"type": "property",
				"name": "project",
				"comment": "## project `utility variable`\nThis is the name of the project you are currently in.\n\nDevelopers can use this to create a multi-plugin compatible with all bots supporting the `open-discord` framework!",
				"source": "src/core/startup/init.ts:70:4",
				"details": {
					"type": "literal",
					"name": "\"openticket\""
				}
			},
			{
				"type": "method",
				"name": "asyncReplace",
				"comment": "## asyncReplace `utility function`\nSame as `string.replace(search, value)` but with async compatibility",
				"source": "src/core/startup/init.ts:105:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "## asyncReplace `utility function`\nSame as `string.replace(search, value)` but with async compatibility",
					"parameters": [
						{
							"name": "text",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "regex",
							"details": {
								"type": "internal",
								"name": "RegExp",
								"typeArguments": null
							}
						},
						{
							"name": "func",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "value",
										"details": {
											"type": "primitive",
											"name": "string"
										}
									},
									{
										"name": "args",
										"details": {
											"type": "array",
											"child": {
												"type": "primitive",
												"name": "any"
											}
										}
									}
								],
								"returns": {
									"type": "internal",
									"name": "Promise",
									"typeArguments": [
										{
											"type": "primitive",
											"name": "string"
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "string"
							}
						]
					}
				}
			},
			{
				"type": "method",
				"name": "dateString",
				"comment": "## dateString `utility function`\nUse this function to create a short date string in the following format: `DD/MM/YYYY HH:MM:SS`",
				"source": "src/core/startup/init.ts:101:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "## dateString `utility function`\nUse this function to create a short date string in the following format: `DD/MM/YYYY HH:MM:SS`",
					"parameters": [
						{
							"name": "date",
							"details": {
								"type": "internal",
								"name": "Date",
								"typeArguments": null
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "emojiTitle",
				"comment": "## emojiTitle `utility function`\nUse this function to create a title with an emoji before/after the text. The style & divider are set in `openticket.defaults`",
				"source": "src/core/startup/init.ts:89:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "## emojiTitle `utility function`\nUse this function to create a title with an emoji before/after the text. The style & divider are set in `openticket.defaults`",
					"parameters": [
						{
							"name": "emoji",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						},
						{
							"name": "text",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "string"
					}
				}
			},
			{
				"type": "method",
				"name": "moduleInstalled",
				"comment": "## moduleInstalled `utility function`\nUse this function to check if an npm package is installed or not!",
				"source": "src/core/startup/init.ts:79:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "## moduleInstalled `utility function`\nUse this function to check if an npm package is installed or not!",
					"parameters": [
						{
							"name": "id",
							"details": {
								"type": "primitive",
								"name": "string"
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "boolean"
					}
				}
			},
			{
				"type": "method",
				"name": "runAsync",
				"comment": "## runAsync `utility function`\nUse this function to run a snippet of code asyncronous without creating a separate function for it!",
				"source": "src/core/startup/init.ts:93:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "## runAsync `utility function`\nUse this function to run a snippet of code asyncronous without creating a separate function for it!",
					"parameters": [
						{
							"name": "func",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [],
								"returns": {
									"type": "internal",
									"name": "Promise",
									"typeArguments": [
										{
											"type": "primitive",
											"name": "void"
										}
									]
								}
							}
						}
					],
					"returns": {
						"type": "primitive",
						"name": "void"
					}
				}
			},
			{
				"type": "method",
				"name": "timedAwait",
				"comment": "## timedAwait `utility function`\nUse this function to await a promise but reject after the certain timeout has been reached.",
				"source": "src/core/startup/init.ts:97:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "## timedAwait `utility function`\nUse this function to await a promise but reject after the certain timeout has been reached.",
					"parameters": [
						{
							"name": "promise",
							"details": {
								"type": "typeParam",
								"name": "ReturnValue",
								"typeArguments": null
							}
						},
						{
							"name": "timeout",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						},
						{
							"name": "onError",
							"details": {
								"type": "function",
								"inherited": false,
								"comment": null,
								"parameters": [
									{
										"name": "err",
										"details": {
											"type": "internal",
											"name": "Error",
											"typeArguments": null
										}
									}
								],
								"returns": {
									"type": "primitive",
									"name": "void"
								}
							}
						}
					],
					"returns": {
						"type": "typeParam",
						"name": "ReturnValue",
						"typeArguments": null
					}
				}
			},
			{
				"type": "method",
				"name": "timer",
				"comment": "## timer `utility function`\nUse this to wait for a certain amount of milliseconds. This only works when using `await`",
				"source": "src/core/startup/init.ts:84:4",
				"details": {
					"type": "function",
					"inherited": false,
					"comment": "## timer `utility function`\nUse this to wait for a certain amount of milliseconds. This only works when using `await`",
					"parameters": [
						{
							"name": "ms",
							"details": {
								"type": "primitive",
								"name": "number"
							}
						}
					],
					"returns": {
						"type": "internal",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "primitive",
								"name": "void"
							}
						]
					}
				}
			}
		],
		"typeParams": null
	},
	{
		"type": "variable",
		"name": "openticket",
		"comment": null,
		"constant": true,
		"source": "src/core/startup/init.ts:41:13",
		"children": [
			{
				"type": "reference",
				"name": "ODMain",
				"target": "class",
				"typeArguments": null
			}
		],
		"typeParams": null
	},
	{
		"type": "variable",
		"name": "utilities",
		"comment": null,
		"constant": true,
		"source": "src/core/startup/init.ts:144:13",
		"children": [
			{
				"type": "reference",
				"name": "ODUtilities",
				"target": "interface",
				"typeArguments": null
			}
		],
		"typeParams": null
	}
]